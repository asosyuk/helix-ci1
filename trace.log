******************************************************************
BEGIN TRACE: tSPL -> SPL
------------------------------------------------------------------
tSPL expression:
------------------------------------------------------------------
TLess(TEvalPolynomial(2, D), TDistance(TInfinityNorm(2)))
******************************************************************

==================================================================
TREE EXPANSION RULE: TEvalPolynomial_Base
------------------------------------------------------------------
original expression:
------------------------------------------------------------------
TEvalPolynomial(2, D)
------------------------------------------------------------------
substituted expression:
------------------------------------------------------------------
ScalarProd(3, D) o 
Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0))


==================================================================
TREE EXPANSION RULE: TInfinityNorm_Base
------------------------------------------------------------------
original expression:
------------------------------------------------------------------
TInfinityNorm(2)
------------------------------------------------------------------
substituted expression:
------------------------------------------------------------------
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
PointWise(2, Lambda([ r3, i1 ], abs(r3)))


==================================================================
TREE EXPANSION RULE: TDistance_Base
------------------------------------------------------------------
original expression:
------------------------------------------------------------------
TDistance(TInfinityNorm(2))

------------------------------------------------------------------
subtree substitutions: 
------------------------------------------------------------------
TInfinityNorm_Base( TInfinityNorm(2) )


------------------------------------------------------------------
subtrees substituted: 
------------------------------------------------------------------
TDistance(Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
  PointWise(2, Lambda([ r3, i1 ], abs(r3))))
------------------------------------------------------------------
substituted expression:
------------------------------------------------------------------
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
BinOp(2, Lambda([ r4, r5 ], sub(r4, r5)))


==================================================================
TREE EXPANSION RULE: TLess_Base
------------------------------------------------------------------
original expression:
------------------------------------------------------------------
TLess(TEvalPolynomial(2, D), TDistance(TInfinityNorm(2)))

------------------------------------------------------------------
subtree substitutions: 
------------------------------------------------------------------
TEvalPolynomial_Base( TEvalPolynomial(2, D) )

TDistance_Base( TDistance(TInfinityNorm(2)),
  TInfinityNorm_Base( TInfinityNorm(2) ) )


------------------------------------------------------------------
subtrees substituted: 
------------------------------------------------------------------
TLess(ScalarProd(3, D) o 
  Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)), Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
  PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
  BinOp(2, Lambda([ r4, r5 ], sub(r4, r5))))
------------------------------------------------------------------
substituted expression:
------------------------------------------------------------------
BinOp(1, Lambda([ r6, r7 ], geq(r7, r6))) o 
DirectSum(
  ScalarProd(3, D) o 
  Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)), 
  Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
  PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
  BinOp(2, Lambda([ r4, r5 ], sub(r4, r5)))
)


******************************************************************
END TRACE: tSPL -> SPL
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
BinOp(1, Lambda([ r6, r7 ], geq(r7, r6))) o 
DirectSum(
  ScalarProd(3, D) o 
  Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)), 
  Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
  PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
  BinOp(2, Lambda([ r4, r5 ], sub(r4, r5)))
)
******************************************************************

******************************************************************
BEGIN TRACE: SPL -> Sigma-SPL
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
BinOp(1, Lambda([ r6, r7 ], geq(r7, r6))) o 
DirectSum(
  ScalarProd(3, D) o 
  Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)), 
  Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
  PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
  BinOp(2, Lambda([ r4, r5 ], sub(r4, r5)))
)
******************************************************************

==================================================================
EXPANSION RULE: BinOp
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
BinOp(1, Lambda([ r6, r7 ], geq(r7, r6)))
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
BinOp(1, Lambda([ r6, r7 ], geq(r7, r6)))


==================================================================
EXPANSION RULE: ScalarProd
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
ScalarProd(3, D)
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
Reduction(3, (a, b) -> add(a, b), V(0.0), (arg) -> false) o 
PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2))))


==================================================================
EXPANSION RULE: Induction
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0))
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0))


==================================================================
EXPANSION RULE: OLCompose
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
ScalarProd(3, D) o 
Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0))
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
Reduction(3, (a, b) -> add(a, b), V(0.0), (arg) -> false) o 
PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0))


==================================================================
EXPANSION RULE: Reduction
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false)
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false)


==================================================================
EXPANSION RULE: PointWise
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
PointWise(2, Lambda([ r3, i1 ], abs(r3)))
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
PointWise(2, Lambda([ r3, i1 ], abs(r3)))


==================================================================
EXPANSION RULE: OLCompose
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
PointWise(2, Lambda([ r3, i1 ], abs(r3)))
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
PointWise(2, Lambda([ r3, i1 ], abs(r3)))


==================================================================
EXPANSION RULE: BinOp
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
BinOp(2, Lambda([ r4, r5 ], sub(r4, r5)))
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
ISumUnion(i3, 2,
  ScatHUnion(2, 1, i3, 1) o 
  BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
  GathH(4, 2, i3, 2)
)


==================================================================
EXPANSION RULE: OLCompose
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
BinOp(2, Lambda([ r4, r5 ], sub(r4, r5)))
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
ISumUnion(i3, 2,
  ScatHUnion(2, 1, i3, 1) o 
  BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
  GathH(4, 2, i3, 2)
)


==================================================================
EXPANSION RULE: DirectSum
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
DirectSum(
  ScalarProd(3, D) o 
  Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)), 
  Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
  PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
  BinOp(2, Lambda([ r4, r5 ], sub(r4, r5)))
)
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
SUMUnion(
  ScatHUnion(2, 1, 0, 1) o 
  Reduction(3, (a, b) -> add(a, b), V(0.0), (arg) -> false) o 
  PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
  Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
  GathH(5, 1, 0, 1), 
  ScatHUnion(2, 1, 1, 1) o 
  Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
  PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
  ISumUnion(i3, 2,
    ScatHUnion(2, 1, i3, 1) o 
    BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
    GathH(4, 2, i3, 2)
  ) o 
  GathH(5, 4, 1, 1)
)


==================================================================
EXPANSION RULE: OLCompose
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
BinOp(1, Lambda([ r6, r7 ], geq(r7, r6))) o 
DirectSum(
  ScalarProd(3, D) o 
  Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)), 
  Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
  PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
  BinOp(2, Lambda([ r4, r5 ], sub(r4, r5)))
)
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
BinOp(1, Lambda([ r6, r7 ], geq(r7, r6))) o 
SUMUnion(
  ScatHUnion(2, 1, 0, 1) o 
  Reduction(3, (a, b) -> add(a, b), V(0.0), (arg) -> false) o 
  PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
  Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
  GathH(5, 1, 0, 1), 
  ScatHUnion(2, 1, 1, 1) o 
  Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
  PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
  ISumUnion(i3, 2,
    ScatHUnion(2, 1, i3, 1) o 
    BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
    GathH(4, 2, i3, 2)
  ) o 
  GathH(5, 4, 1, 1)
)


******************************************************************
END TRACE: SPL -> Sigma-SPL
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
BinOp(1, Lambda([ r6, r7 ], geq(r7, r6))) o 
SUMUnion(
  ScatHUnion(2, 1, 0, 1) o 
  Reduction(3, (a, b) -> add(a, b), V(0.0), (arg) -> false) o 
  PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
  Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
  GathH(5, 1, 0, 1), 
  ScatHUnion(2, 1, 1, 1) o 
  Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
  PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
  ISumUnion(i3, 2,
    ScatHUnion(2, 1, i3, 1) o 
    BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
    GathH(4, 2, i3, 2)
  ) o 
  GathH(5, 4, 1, 1)
)
******************************************************************


******************************************************************
BEGIN RULESET: SigmaSPL -> SigmaSPL
------------------------------------------------------------------
Ruleset:RulesSumsHACMS
------------------------------------------------------------------
Initial SigmaSPL
------------------------------------------------------------------
BinOp(1, Lambda([ r6, r7 ], geq(r7, r6))) o 
SUMUnion(
  ScatHUnion(2, 1, 0, 1) o 
  Reduction(3, (a, b) -> add(a, b), V(0.0), (arg) -> false) o 
  PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
  Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
  GathH(5, 1, 0, 1), 
  ScatHUnion(2, 1, 1, 1) o 
  Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
  PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
  ISumUnion(i3, 2,
    ScatHUnion(2, 1, i3, 1) o 
    BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
    GathH(4, 2, i3, 2)
  ) o 
  GathH(5, 4, 1, 1)
)
******************************************************************

------------------------------------------------------------------
RULE: OLCompose_Assoc
------------------------------------------------------------------
old expression
------------------------------------------------------------------
ScatHUnion(2, 1, 0, 1) o 
Reduction(3, (a, b) -> add(a, b), V(0.0), (arg) -> false) o 
PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
GathH(5, 1, 0, 1)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
ScatHUnion(2, 1, 0, 1) o 
Reduction(3, (a, b) -> add(a, b), V(0.0), (arg) -> false) o 
PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
GathH(5, 1, 0, 1)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: OLCompose_Assoc
------------------------------------------------------------------
old expression
------------------------------------------------------------------
ScatHUnion(2, 1, 0, 1) o 
Reduction(3, (a, b) -> add(a, b), V(0.0), (arg) -> false) o 
PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
GathH(5, 1, 0, 1)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
ScatHUnion(2, 1, 0, 1) o 
Reduction(3, (a, b) -> add(a, b), V(0.0), (arg) -> false) o 
PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
GathH(5, 1, 0, 1)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: OLCompose_Assoc
------------------------------------------------------------------
old expression
------------------------------------------------------------------
ScatHUnion(2, 1, 1, 1) o 
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
ISumUnion(i3, 2,
  ScatHUnion(2, 1, i3, 1) o 
  BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
  GathH(4, 2, i3, 2)
) o 
GathH(5, 4, 1, 1)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
ScatHUnion(2, 1, 1, 1) o 
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
ISumUnion(i3, 2,
  ScatHUnion(2, 1, i3, 1) o 
  BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
  GathH(4, 2, i3, 2)
) o 
GathH(5, 4, 1, 1)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: OLCompose_Assoc
------------------------------------------------------------------
old expression
------------------------------------------------------------------
ScatHUnion(2, 1, 1, 1) o 
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
ISumUnion(i3, 2,
  ScatHUnion(2, 1, i3, 1) o 
  BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
  GathH(4, 2, i3, 2)
) o 
GathH(5, 4, 1, 1)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
ScatHUnion(2, 1, 1, 1) o 
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
ISumUnion(i3, 2,
  ScatHUnion(2, 1, i3, 1) o 
  BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
  GathH(4, 2, i3, 2)
) o 
GathH(5, 4, 1, 1)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: PointWise_ISumUnion
------------------------------------------------------------------
old expression
------------------------------------------------------------------
ScatHUnion(2, 1, 1, 1) o 
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
ISumUnion(i3, 2,
  ScatHUnion(2, 1, i3, 1) o 
  BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
  GathH(4, 2, i3, 2)
) o 
GathH(5, 4, 1, 1)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
ScatHUnion(2, 1, 1, 1) o 
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
ISumUnion(i3, 2,
  PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
  ScatHUnion(2, 1, i3, 1) o 
  BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
  GathH(4, 2, i3, 2)
) o 
GathH(5, 4, 1, 1)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: Reduction_ISumReduction
------------------------------------------------------------------
old expression
------------------------------------------------------------------
ScatHUnion(2, 1, 1, 1) o 
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
ISumUnion(i3, 2,
  PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
  ScatHUnion(2, 1, i3, 1) o 
  BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
  GathH(4, 2, i3, 2)
) o 
GathH(5, 4, 1, 1)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
ScatHUnion(2, 1, 1, 1) o 
ISumReduction(i3, 2, (a, b) -> max(a, b), V(0.0), (arg) -> false,
  Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
  PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
  ScatHUnion(2, 1, i3, 1) o 
  BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
  GathH(4, 2, i3, 2)
) o 
GathH(5, 4, 1, 1)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: ISumXXX_YYY
------------------------------------------------------------------
old expression
------------------------------------------------------------------
ScatHUnion(2, 1, 1, 1) o 
ISumReduction(i3, 2, (a, b) -> max(a, b), V(0.0), (arg) -> false,
  Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
  PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
  ScatHUnion(2, 1, i3, 1) o 
  BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
  GathH(4, 2, i3, 2)
) o 
GathH(5, 4, 1, 1)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
ScatHUnion(2, 1, 1, 1) o 
ISumReduction(i3, 2, (a, b) -> max(a, b), V(0.0), (arg) -> false,
  Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
  PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
  ScatHUnion(2, 1, i3, 1) o 
  BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
  GathH(4, 2, i3, 2) o 
  GathH(5, 4, 1, 1)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: OLCompose_Assoc
------------------------------------------------------------------
old expression
------------------------------------------------------------------
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
ScatHUnion(2, 1, i3, 1) o 
BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
GathH(4, 2, i3, 2) o 
GathH(5, 4, 1, 1)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
ScatHUnion(2, 1, i3, 1) o 
BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
GathH(4, 2, i3, 2) o 
GathH(5, 4, 1, 1)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: OLCompose_Assoc
------------------------------------------------------------------
old expression
------------------------------------------------------------------
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
ScatHUnion(2, 1, i3, 1) o 
BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
GathH(4, 2, i3, 2) o 
GathH(5, 4, 1, 1)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
ScatHUnion(2, 1, i3, 1) o 
BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
GathH(4, 2, i3, 2) o 
GathH(5, 4, 1, 1)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: OLCompose_Assoc
------------------------------------------------------------------
old expression
------------------------------------------------------------------
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
ScatHUnion(2, 1, i3, 1) o 
BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
GathH(4, 2, i3, 2) o 
GathH(5, 4, 1, 1)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
ScatHUnion(2, 1, i3, 1) o 
BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
GathH(4, 2, i3, 2) o 
GathH(5, 4, 1, 1)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: PointWise_ScatHUnion
------------------------------------------------------------------
old expression
------------------------------------------------------------------
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
PointWise(2, Lambda([ r3, i1 ], abs(r3))) o 
ScatHUnion(2, 1, i3, 1) o 
BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
GathH(4, 2, i3, 2) o 
GathH(5, 4, 1, 1)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
ScatHUnion(2, 1, i3, 1) o 
PointWise(1, Lambda([ r3, i4 ], abs(r3))) o 
BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
GathH(4, 2, i3, 2) o 
GathH(5, 4, 1, 1)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: Reduction_ScatHUnion
------------------------------------------------------------------
old expression
------------------------------------------------------------------
Reduction(2, (a, b) -> max(a, b), V(0.0), (arg) -> false) o 
ScatHUnion(2, 1, i3, 1) o 
PointWise(1, Lambda([ r3, i4 ], abs(r3))) o 
BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
GathH(4, 2, i3, 2) o 
GathH(5, 4, 1, 1)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
PointWise(1, Lambda([ r3, i4 ], abs(r3))) o 
BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
GathH(4, 2, i3, 2) o 
GathH(5, 4, 1, 1)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: GathH_GathH
------------------------------------------------------------------
old expression
------------------------------------------------------------------
PointWise(1, Lambda([ r3, i4 ], abs(r3))) o 
BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
GathH(4, 2, i3, 2) o 
GathH(5, 4, 1, 1)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
PointWise(1, Lambda([ r3, i4 ], abs(r3))) o 
BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
GathH(5, 2, add(i3, V(1)), 2)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: PointWise_BinOp
------------------------------------------------------------------
old expression
------------------------------------------------------------------
PointWise(1, Lambda([ r3, i4 ], abs(r3))) o 
BinOp(1, Lambda([ r4, r5 ], sub(r4, r5))) o 
GathH(5, 2, add(i3, V(1)), 2)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
BinOp(1, Lambda([ r4, r5 ], abs(sub(r4, r5)))) o 
GathH(5, 2, add(i3, V(1)), 2)
------------------------------------------------------------------

******************************************************************
END RULESET: SigmaSPL -> SigmaSPL
------------------------------------------------------------------
Final SigmaSPL
------------------------------------------------------------------
BinOp(1, Lambda([ r6, r7 ], geq(r7, r6))) o 
SUMUnion(
  ScatHUnion(2, 1, 0, 1) o 
  Reduction(3, (a, b) -> add(a, b), V(0.0), (arg) -> false) o 
  PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
  Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
  GathH(5, 1, 0, 1), 
  ScatHUnion(2, 1, 1, 1) o 
  ISumReduction(i3, 2, (a, b) -> max(a, b), V(0.0), (arg) -> false,
    BinOp(1, Lambda([ r4, r5 ], abs(sub(r4, r5)))) o 
    GathH(5, 2, add(i3, V(1)), 2)
  )
)
******************************************************************


******************************************************************
BEGIN RULESET: SigmaSPL -> SigmaSPL
------------------------------------------------------------------
Ruleset:RulesTerminateReductionHACMS
------------------------------------------------------------------
Initial SigmaSPL
------------------------------------------------------------------
BinOp(1, Lambda([ r6, r7 ], geq(r7, r6))) o 
SUMUnion(
  ScatHUnion(2, 1, 0, 1) o 
  Reduction(3, (a, b) -> add(a, b), V(0.0), (arg) -> false) o 
  PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
  Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
  GathH(5, 1, 0, 1), 
  ScatHUnion(2, 1, 1, 1) o 
  ISumReduction(i3, 2, (a, b) -> max(a, b), V(0.0), (arg) -> false,
    BinOp(1, Lambda([ r4, r5 ], abs(sub(r4, r5)))) o 
    GathH(5, 2, add(i3, V(1)), 2)
  )
)
******************************************************************

------------------------------------------------------------------
RULE: ScatHUnion1_terminate
------------------------------------------------------------------
old expression
------------------------------------------------------------------
ScatHUnion(2, 1, 0, 1)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
eUnion(2, 0)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: Reduction_terminate
------------------------------------------------------------------
old expression
------------------------------------------------------------------
Reduction(3, (a, b) -> add(a, b), V(0.0), (arg) -> false)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
ISumReduction(i5, 3, (a, b) -> add(a, b), V(0.0), (arg) -> false,
  eT(3, i5)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: GathH1_terminate
------------------------------------------------------------------
old expression
------------------------------------------------------------------
GathH(5, 1, 0, 1)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
eT(5, 0)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: ScatHUnion1_terminate
------------------------------------------------------------------
old expression
------------------------------------------------------------------
ScatHUnion(2, 1, 1, 1)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
eUnion(2, 1)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: GathHN_terminate
------------------------------------------------------------------
old expression
------------------------------------------------------------------
GathH(5, 2, add(i3, V(1)), 2)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
ISumUnion(i6, 2,
  eUnion(2, i6) o 
  eT(5, add(add(i3, V(1)), mul(V(2), i6)))
)
------------------------------------------------------------------

******************************************************************
END RULESET: SigmaSPL -> SigmaSPL
------------------------------------------------------------------
Final SigmaSPL
------------------------------------------------------------------
BinOp(1, Lambda([ r6, r7 ], geq(r7, r6))) o 
SUMUnion(
  eUnion(2, 0) o 
  ISumReduction(i5, 3, (a, b) -> add(a, b), V(0.0), (arg) -> false,
    eT(3, i5)
  ) o 
  PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
  Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
  eT(5, 0), 
  eUnion(2, 1) o 
  ISumReduction(i3, 2, (a, b) -> max(a, b), V(0.0), (arg) -> false,
    BinOp(1, Lambda([ r4, r5 ], abs(sub(r4, r5)))) o 
    ISumUnion(i6, 2,
      eUnion(2, i6) o 
      eT(5, add(add(i3, V(1)), mul(V(2), i6)))
    )
  )
)
******************************************************************


******************************************************************
BEGIN RULESET: SigmaSPL -> SigmaSPL
------------------------------------------------------------------
Ruleset:RulesSumsHACMS
------------------------------------------------------------------
Initial SigmaSPL
------------------------------------------------------------------
BinOp(1, Lambda([ r6, r7 ], geq(r7, r6))) o 
SUMUnion(
  eUnion(2, 0) o 
  ISumReduction(i5, 3, (a, b) -> add(a, b), V(0.0), (arg) -> false,
    eT(3, i5)
  ) o 
  PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
  Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
  eT(5, 0), 
  eUnion(2, 1) o 
  ISumReduction(i3, 2, (a, b) -> max(a, b), V(0.0), (arg) -> false,
    BinOp(1, Lambda([ r4, r5 ], abs(sub(r4, r5)))) o 
    ISumUnion(i6, 2,
      eUnion(2, i6) o 
      eT(5, add(add(i3, V(1)), mul(V(2), i6)))
    )
  )
)
******************************************************************

------------------------------------------------------------------
RULE: ISumReduction_PointWise
------------------------------------------------------------------
old expression
------------------------------------------------------------------
eUnion(2, 0) o 
ISumReduction(i5, 3, (a, b) -> add(a, b), V(0.0), (arg) -> false,
  eT(3, i5)
) o 
PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
eT(5, 0)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
eUnion(2, 0) o 
ISumReduction(i5, 3, (a, b) -> add(a, b), V(0.0), (arg) -> false,
  eT(3, i5) o 
  PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2))))
) o 
Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
eT(5, 0)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: ISumXXX_YYY
------------------------------------------------------------------
old expression
------------------------------------------------------------------
eUnion(2, 0) o 
ISumReduction(i5, 3, (a, b) -> add(a, b), V(0.0), (arg) -> false,
  eT(3, i5) o 
  PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2))))
) o 
Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
eT(5, 0)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
eUnion(2, 0) o 
ISumReduction(i5, 3, (a, b) -> add(a, b), V(0.0), (arg) -> false,
  eT(3, i5) o 
  PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
  Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0))
) o 
eT(5, 0)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: ISumXXX_YYY
------------------------------------------------------------------
old expression
------------------------------------------------------------------
eUnion(2, 0) o 
ISumReduction(i5, 3, (a, b) -> add(a, b), V(0.0), (arg) -> false,
  eT(3, i5) o 
  PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
  Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0))
) o 
eT(5, 0)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
eUnion(2, 0) o 
ISumReduction(i5, 3, (a, b) -> add(a, b), V(0.0), (arg) -> false,
  eT(3, i5) o 
  PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
  Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
  eT(5, 0)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: OLCompose_Assoc
------------------------------------------------------------------
old expression
------------------------------------------------------------------
eT(3, i5) o 
PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
eT(5, 0)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
eT(3, i5) o 
PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
eT(5, 0)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: OLCompose_Assoc
------------------------------------------------------------------
old expression
------------------------------------------------------------------
eT(3, i5) o 
PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
eT(5, 0)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
eT(3, i5) o 
PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
eT(5, 0)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: eT_Pointwise
------------------------------------------------------------------
old expression
------------------------------------------------------------------
eT(3, i5) o 
PointWise(3, Lambda([ r8, i2 ], mul(r8, nth(D, i2)))) o 
Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
eT(5, 0)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
PointWise(1, Lambda([ r8, i7 ], mul(r8, nth(D, i5)))) o 
eT(3, i5) o 
Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
eT(5, 0)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: eT_Induction
------------------------------------------------------------------
old expression
------------------------------------------------------------------
PointWise(1, Lambda([ r8, i7 ], mul(r8, nth(D, i5)))) o 
eT(3, i5) o 
Induction(3, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
eT(5, 0)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
PointWise(1, Lambda([ r8, i7 ], mul(r8, nth(D, i5)))) o 
Inductor(3, i5, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
eT(5, 0)
------------------------------------------------------------------

******************************************************************
END RULESET: SigmaSPL -> SigmaSPL
------------------------------------------------------------------
Final SigmaSPL
------------------------------------------------------------------
BinOp(1, Lambda([ r6, r7 ], geq(r7, r6))) o 
SUMUnion(
  eUnion(2, 0) o 
  ISumReduction(i5, 3, (a, b) -> add(a, b), V(0.0), (arg) -> false,
    PointWise(1, Lambda([ r8, i7 ], mul(r8, nth(D, i5)))) o 
    Inductor(3, i5, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
    eT(5, 0)
  ), 
  eUnion(2, 1) o 
  ISumReduction(i3, 2, (a, b) -> max(a, b), V(0.0), (arg) -> false,
    BinOp(1, Lambda([ r4, r5 ], abs(sub(r4, r5)))) o 
    ISumUnion(i6, 2,
      eUnion(2, i6) o 
      eT(5, add(add(i3, V(1)), mul(V(2), i6)))
    )
  )
)
******************************************************************

******************************************************************
BEGIN TRACE: Sigma-SPL -> icode
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
BinOp(1, Lambda([ r6, r7 ], geq(r7, r6))) o 
SUMUnion(
  eUnion(2, 0) o 
  ISumReduction(i5, 3, (a, b) -> add(a, b), V(0.0), (arg) -> false,
    PointWise(1, Lambda([ r8, i7 ], mul(r8, nth(D, i5)))) o 
    Inductor(3, i5, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
    eT(5, 0)
  ), 
  eUnion(2, 1) o 
  ISumReduction(i3, 2, (a, b) -> max(a, b), V(0.0), (arg) -> false,
    BinOp(1, Lambda([ r4, r5 ], abs(sub(r4, r5)))) o 
    ISumUnion(i6, 2,
      eUnion(2, i6) o 
      eT(5, add(add(i3, V(1)), mul(V(2), i6)))
    )
  )
)
******************************************************************

------------------------------------------------------------------
RULE: unnamed(SubstBottomUp)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
i9
------------------------------------------------------------------
new expression
------------------------------------------------------------------
V(0)
------------------------------------------------------------------

==================================================================
EXPANSION RULE: eT
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
eT(5, 0)
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
assign(nth(T5, V(0)), nth(X, V(0)))


==================================================================
EXPANSION RULE: Inductor
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
Inductor(3, i5, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0))
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0)))))


------------------------------------------------------------------
RULE: unnamed(SubstBottomUp)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
i10
------------------------------------------------------------------
new expression
------------------------------------------------------------------
V(0)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstBottomUp)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
i10
------------------------------------------------------------------
new expression
------------------------------------------------------------------
V(0)
------------------------------------------------------------------

==================================================================
EXPANSION RULE: PointWise
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
PointWise(1, Lambda([ r8, i7 ], mul(r8, nth(D, i5))))
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))


==================================================================
EXPANSION RULE: OLCompose
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
PointWise(1, Lambda([ r8, i7 ], mul(r8, nth(D, i5)))) o 
Inductor(3, i5, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
eT(5, 0)
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
decl([ T4, T5 ],
   chain(
      assign(nth(T5, V(0)), nth(X, V(0))),
      assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
      assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
   )
)


------------------------------------------------------------------
RULE: unnamed(SubstBottomUp)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
i8
------------------------------------------------------------------
new expression
------------------------------------------------------------------
V(0)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstBottomUp)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
i8
------------------------------------------------------------------
new expression
------------------------------------------------------------------
V(0)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstBottomUp)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
i8
------------------------------------------------------------------
new expression
------------------------------------------------------------------
V(0)
------------------------------------------------------------------

==================================================================
EXPANSION RULE: ISumReduction
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
ISumReduction(i5, 3, (a, b) -> add(a, b), V(0.0), (arg) -> false,
  PointWise(1, Lambda([ r8, i7 ], mul(r8, nth(D, i5)))) o 
  Inductor(3, i5, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
  eT(5, 0)
)
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
chain(
   assign(nth(T2, V(0)), V(0.0)),
   loop(i5, [ 0 .. 2 ],
      decl([ T3 ],
         chain(
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
               )
            ),
            assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
         )
      )
   )
)


==================================================================
EXPANSION RULE: eUnion
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
eUnion(2, 0)
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
assign(nth(T1, V(0)), nth(T2, V(0)))


==================================================================
EXPANSION RULE: OLCompose
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
eUnion(2, 0) o 
ISumReduction(i5, 3, (a, b) -> add(a, b), V(0.0), (arg) -> false,
  PointWise(1, Lambda([ r8, i7 ], mul(r8, nth(D, i5)))) o 
  Inductor(3, i5, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
  eT(5, 0)
)
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
decl([ T2 ],
   chain(
      chain(
         assign(nth(T2, V(0)), V(0.0)),
         loop(i5, [ 0 .. 2 ],
            decl([ T3 ],
               chain(
                  decl([ T4, T5 ],
                     chain(
                        assign(nth(T5, V(0)), nth(X, V(0))),
                        assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                        assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                     )
                  ),
                  assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
               )
            )
         )
      ),
      assign(nth(T1, V(0)), nth(T2, V(0)))
   )
)


------------------------------------------------------------------
RULE: unnamed(SubstBottomUp)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
i12
------------------------------------------------------------------
new expression
------------------------------------------------------------------
V(0)
------------------------------------------------------------------

==================================================================
EXPANSION RULE: eT
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
eT(5, add(add(i3, V(1)), mul(V(2), i6)))
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6))))


==================================================================
EXPANSION RULE: eUnion
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
eUnion(2, i6)
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
assign(nth(T8, i6), nth(T9, V(0)))


==================================================================
EXPANSION RULE: OLCompose
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
eUnion(2, i6) o 
eT(5, add(add(i3, V(1)), mul(V(2), i6)))
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
decl([ T9 ],
   chain(
      assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
      assign(nth(T8, i6), nth(T9, V(0)))
   )
)


==================================================================
EXPANSION RULE: ISumUnion
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
ISumUnion(i6, 2,
  eUnion(2, i6) o 
  eT(5, add(add(i3, V(1)), mul(V(2), i6)))
)
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
loop(i6, [ 0 .. 1 ],
   decl([ T9 ],
      chain(
         assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
         assign(nth(T8, i6), nth(T9, V(0)))
      )
   )
)


------------------------------------------------------------------
RULE: unnamed(SubstBottomUp)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
i13
------------------------------------------------------------------
new expression
------------------------------------------------------------------
V(0)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstBottomUp)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
i13
------------------------------------------------------------------
new expression
------------------------------------------------------------------
V(0)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstBottomUp)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
i13
------------------------------------------------------------------
new expression
------------------------------------------------------------------
V(0)
------------------------------------------------------------------

==================================================================
EXPANSION RULE: BinOp
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
BinOp(1, Lambda([ r4, r5 ], abs(sub(r4, r5))))
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, add(V(0), V(1))))))


==================================================================
EXPANSION RULE: OLCompose
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
BinOp(1, Lambda([ r4, r5 ], abs(sub(r4, r5)))) o 
ISumUnion(i6, 2,
  eUnion(2, i6) o 
  eT(5, add(add(i3, V(1)), mul(V(2), i6)))
)
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
decl([ T8 ],
   chain(
      loop(i6, [ 0 .. 1 ],
         decl([ T9 ],
            chain(
               assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
               assign(nth(T8, i6), nth(T9, V(0)))
            )
         )
      ),
      assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, add(V(0), V(1))))))
   )
)


------------------------------------------------------------------
RULE: unnamed(SubstBottomUp)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
i11
------------------------------------------------------------------
new expression
------------------------------------------------------------------
V(0)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstBottomUp)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
i11
------------------------------------------------------------------
new expression
------------------------------------------------------------------
V(0)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstBottomUp)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
i11
------------------------------------------------------------------
new expression
------------------------------------------------------------------
V(0)
------------------------------------------------------------------

==================================================================
EXPANSION RULE: ISumReduction
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
ISumReduction(i3, 2, (a, b) -> max(a, b), V(0.0), (arg) -> false,
  BinOp(1, Lambda([ r4, r5 ], abs(sub(r4, r5)))) o 
  ISumUnion(i6, 2,
    eUnion(2, i6) o 
    eT(5, add(add(i3, V(1)), mul(V(2), i6)))
  )
)
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
chain(
   assign(nth(T6, V(0)), V(0.0)),
   loop(i3, [ 0 .. 1 ],
      decl([ T7 ],
         chain(
            decl([ T8 ],
               chain(
                  loop(i6, [ 0 .. 1 ],
                     decl([ T9 ],
                        chain(
                           assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                           assign(nth(T8, i6), nth(T9, V(0)))
                        )
                     )
                  ),
                  assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, add(V(0), V(1))))))
               )
            ),
            assign(nth(T6, V(0)), max(nth(T7, V(0)), nth(T6, V(0))))
         )
      )
   )
)


==================================================================
EXPANSION RULE: eUnion
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
eUnion(2, 1)
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
assign(nth(T1, V(1)), nth(T6, V(0)))


==================================================================
EXPANSION RULE: OLCompose
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
eUnion(2, 1) o 
ISumReduction(i3, 2, (a, b) -> max(a, b), V(0.0), (arg) -> false,
  BinOp(1, Lambda([ r4, r5 ], abs(sub(r4, r5)))) o 
  ISumUnion(i6, 2,
    eUnion(2, i6) o 
    eT(5, add(add(i3, V(1)), mul(V(2), i6)))
  )
)
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
decl([ T6 ],
   chain(
      chain(
         assign(nth(T6, V(0)), V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ T7 ],
               chain(
                  decl([ T8 ],
                     chain(
                        loop(i6, [ 0 .. 1 ],
                           decl([ T9 ],
                              chain(
                                 assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                 assign(nth(T8, i6), nth(T9, V(0)))
                              )
                           )
                        ),
                        assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, add(V(0), V(1))))))
                     )
                  ),
                  assign(nth(T6, V(0)), max(nth(T7, V(0)), nth(T6, V(0))))
               )
            )
         )
      ),
      assign(nth(T1, V(1)), nth(T6, V(0)))
   )
)


==================================================================
EXPANSION RULE: SUMUnion
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
SUMUnion(
  eUnion(2, 0) o 
  ISumReduction(i5, 3, (a, b) -> add(a, b), V(0.0), (arg) -> false,
    PointWise(1, Lambda([ r8, i7 ], mul(r8, nth(D, i5)))) o 
    Inductor(3, i5, Lambda([ r1, r2 ], mul(r1, r2)), V(1.0)) o 
    eT(5, 0)
  ), 
  eUnion(2, 1) o 
  ISumReduction(i3, 2, (a, b) -> max(a, b), V(0.0), (arg) -> false,
    BinOp(1, Lambda([ r4, r5 ], abs(sub(r4, r5)))) o 
    ISumUnion(i6, 2,
      eUnion(2, i6) o 
      eT(5, add(add(i3, V(1)), mul(V(2), i6)))
    )
  )
)
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
chain(
   decl([ T2 ],
      chain(
         chain(
            assign(nth(T2, V(0)), V(0.0)),
            loop(i5, [ 0 .. 2 ],
               decl([ T3 ],
                  chain(
                     decl([ T4, T5 ],
                        chain(
                           assign(nth(T5, V(0)), nth(X, V(0))),
                           assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                           assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                        )
                     ),
                     assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                  )
               )
            )
         ),
         assign(nth(T1, V(0)), nth(T2, V(0)))
      )
   ),
   decl([ T6 ],
      chain(
         chain(
            assign(nth(T6, V(0)), V(0.0)),
            loop(i3, [ 0 .. 1 ],
               decl([ T7 ],
                  chain(
                     decl([ T8 ],
                        chain(
                           loop(i6, [ 0 .. 1 ],
                              decl([ T9 ],
                                 chain(
                                    assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                    assign(nth(T8, i6), nth(T9, V(0)))
                                 )
                              )
                           ),
                           assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, add(V(0), V(1))))))
                        )
                     ),
                     assign(nth(T6, V(0)), max(nth(T7, V(0)), nth(T6, V(0))))
                  )
               )
            )
         ),
         assign(nth(T1, V(1)), nth(T6, V(0)))
      )
   )
)


------------------------------------------------------------------
RULE: unnamed(SubstBottomUp)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
i14
------------------------------------------------------------------
new expression
------------------------------------------------------------------
V(0)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstBottomUp)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
i14
------------------------------------------------------------------
new expression
------------------------------------------------------------------
V(0)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstBottomUp)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
i14
------------------------------------------------------------------
new expression
------------------------------------------------------------------
V(0)
------------------------------------------------------------------

==================================================================
EXPANSION RULE: BinOp
------------------------------------------------------------------
SPL expression:
------------------------------------------------------------------
BinOp(1, Lambda([ r6, r7 ], geq(r7, r6)))
------------------------------------------------------------------
Sigma-SPL expression:
------------------------------------------------------------------
assign(nth(Y, V(0)), geq(nth(T1, add(V(0), V(1))), nth(T1, V(0))))


******************************************************************
END TRACE: Sigma-SPL -> icode
------------------------------------------------------------------
icode expression:
------------------------------------------------------------------
func(TInt, "transform", [ X, D ], 
   decl([ T1 ],
      chain(
         chain(
            decl([ T2 ],
               chain(
                  chain(
                     assign(nth(T2, V(0)), V(0.0)),
                     loop(i5, [ 0 .. 2 ],
                        decl([ T3 ],
                           chain(
                              decl([ T4, T5 ],
                                 chain(
                                    assign(nth(T5, V(0)), nth(X, V(0))),
                                    assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                                    assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                                 )
                              ),
                              assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                           )
                        )
                     )
                  ),
                  assign(nth(T1, V(0)), nth(T2, V(0)))
               )
            ),
            decl([ T6 ],
               chain(
                  chain(
                     assign(nth(T6, V(0)), V(0.0)),
                     loop(i3, [ 0 .. 1 ],
                        decl([ T7 ],
                           chain(
                              decl([ T8 ],
                                 chain(
                                    loop(i6, [ 0 .. 1 ],
                                       decl([ T9 ],
                                          chain(
                                             assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                             assign(nth(T8, i6), nth(T9, V(0)))
                                          )
                                       )
                                    ),
                                    assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, add(V(0), V(1))))))
                                 )
                              ),
                              assign(nth(T6, V(0)), max(nth(T7, V(0)), nth(T6, V(0))))
                           )
                        )
                     )
                  ),
                  assign(nth(T1, V(1)), nth(T6, V(0)))
               )
            )
         ),
         assign(nth(Y, V(0)), geq(nth(T1, add(V(0), V(1))), nth(T1, V(0))))
      )
   )
)
******************************************************************


******************************************************************
BEGIN RULESET: iCode -> iCode
------------------------------------------------------------------
Ruleset:MergedRuleSet(RulesUnrollHACMS, RulesStrengthReduce, RulesCodeHACMS, RulesHACMSnoAbsMax)
------------------------------------------------------------------
Initial iCode
------------------------------------------------------------------
func(TInt, "transform", [ X, D ], 
   decl([ T1 ],
      chain(
         chain(
            decl([ T2 ],
               chain(
                  chain(
                     assign(nth(T2, V(0)), V(0.0)),
                     loop(i5, [ 0 .. 2 ],
                        decl([ T3 ],
                           chain(
                              decl([ T4, T5 ],
                                 chain(
                                    assign(nth(T5, V(0)), nth(X, V(0))),
                                    assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                                    assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                                 )
                              ),
                              assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                           )
                        )
                     )
                  ),
                  assign(nth(T1, V(0)), nth(T2, V(0)))
               )
            ),
            decl([ T6 ],
               chain(
                  chain(
                     assign(nth(T6, V(0)), V(0.0)),
                     loop(i3, [ 0 .. 1 ],
                        decl([ T7 ],
                           chain(
                              decl([ T8 ],
                                 chain(
                                    loop(i6, [ 0 .. 1 ],
                                       decl([ T9 ],
                                          chain(
                                             assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                             assign(nth(T8, i6), nth(T9, V(0)))
                                          )
                                       )
                                    ),
                                    assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, add(V(0), V(1))))))
                                 )
                              ),
                              assign(nth(T6, V(0)), max(nth(T7, V(0)), nth(T6, V(0))))
                           )
                        )
                     )
                  ),
                  assign(nth(T1, V(1)), nth(T6, V(0)))
               )
            )
         ),
         assign(nth(Y, V(0)), geq(nth(T1, add(V(0), V(1))), nth(T1, V(0))))
      )
   )
)
******************************************************************

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      decl([ T2 ],
         chain(
            chain(
               assign(nth(T2, V(0)), V(0.0)),
               loop(i5, [ 0 .. 2 ],
                  decl([ T3 ],
                     chain(
                        decl([ T4, T5 ],
                           chain(
                              assign(nth(T5, V(0)), nth(X, V(0))),
                              assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                              assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                           )
                        ),
                        assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                     )
                  )
               )
            ),
            assign(nth(T1, V(0)), nth(T2, V(0)))
         )
      ),
      decl([ T6 ],
         chain(
            chain(
               assign(nth(T6, V(0)), V(0.0)),
               loop(i3, [ 0 .. 1 ],
                  decl([ T7 ],
                     chain(
                        decl([ T8 ],
                           chain(
                              loop(i6, [ 0 .. 1 ],
                                 decl([ T9 ],
                                    chain(
                                       assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                       assign(nth(T8, i6), nth(T9, V(0)))
                                    )
                                 )
                              ),
                              assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, add(V(0), V(1))))))
                           )
                        ),
                        assign(nth(T6, V(0)), max(nth(T7, V(0)), nth(T6, V(0))))
                     )
                  )
               )
            ),
            assign(nth(T1, V(1)), nth(T6, V(0)))
         )
      )
   ),
   assign(nth(Y, V(0)), geq(nth(T1, add(V(0), V(1))), nth(T1, V(0))))
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ T2 ],
      chain(
         chain(
            assign(nth(T2, V(0)), V(0.0)),
            loop(i5, [ 0 .. 2 ],
               decl([ T3 ],
                  chain(
                     decl([ T4, T5 ],
                        chain(
                           assign(nth(T5, V(0)), nth(X, V(0))),
                           assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                           assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                        )
                     ),
                     assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                  )
               )
            )
         ),
         assign(nth(T1, V(0)), nth(T2, V(0)))
      )
   ),
   decl([ T6 ],
      chain(
         chain(
            assign(nth(T6, V(0)), V(0.0)),
            loop(i3, [ 0 .. 1 ],
               decl([ T7 ],
                  chain(
                     decl([ T8 ],
                        chain(
                           loop(i6, [ 0 .. 1 ],
                              decl([ T9 ],
                                 chain(
                                    assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                    assign(nth(T8, i6), nth(T9, V(0)))
                                 )
                              )
                           ),
                           assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, add(V(0), V(1))))))
                        )
                     ),
                     assign(nth(T6, V(0)), max(nth(T7, V(0)), nth(T6, V(0))))
                  )
               )
            )
         ),
         assign(nth(T1, V(1)), nth(T6, V(0)))
      )
   ),
   assign(nth(Y, V(0)), geq(nth(T1, add(V(0), V(1))), nth(T1, V(0))))
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ T2 ],
      chain(
         chain(
            assign(nth(T2, V(0)), V(0.0)),
            loop(i5, [ 0 .. 2 ],
               decl([ T3 ],
                  chain(
                     decl([ T4, T5 ],
                        chain(
                           assign(nth(T5, V(0)), nth(X, V(0))),
                           assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                           assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                        )
                     ),
                     assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                  )
               )
            )
         ),
         assign(nth(T1, V(0)), nth(T2, V(0)))
      )
   ),
   decl([ T6 ],
      chain(
         chain(
            assign(nth(T6, V(0)), V(0.0)),
            loop(i3, [ 0 .. 1 ],
               decl([ T7 ],
                  chain(
                     decl([ T8 ],
                        chain(
                           loop(i6, [ 0 .. 1 ],
                              decl([ T9 ],
                                 chain(
                                    assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                    assign(nth(T8, i6), nth(T9, V(0)))
                                 )
                              )
                           ),
                           assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, add(V(0), V(1))))))
                        )
                     ),
                     assign(nth(T6, V(0)), max(nth(T7, V(0)), nth(T6, V(0))))
                  )
               )
            )
         ),
         assign(nth(T1, V(1)), nth(T6, V(0)))
      )
   ),
   assign(nth(Y, V(0)), geq(nth(T1, add(V(0), V(1))), nth(T1, V(0))))
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ T6 ],
      chain(
         decl([ T2 ],
            chain(
               chain(
                  assign(nth(T2, V(0)), V(0.0)),
                  loop(i5, [ 0 .. 2 ],
                     decl([ T3 ],
                        chain(
                           decl([ T4, T5 ],
                              chain(
                                 assign(nth(T5, V(0)), nth(X, V(0))),
                                 assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                                 assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                              )
                           ),
                           assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                        )
                     )
                  )
               ),
               assign(nth(T1, V(0)), nth(T2, V(0)))
            )
         ),
         chain(
            chain(
               assign(nth(T6, V(0)), V(0.0)),
               loop(i3, [ 0 .. 1 ],
                  decl([ T7 ],
                     chain(
                        decl([ T8 ],
                           chain(
                              loop(i6, [ 0 .. 1 ],
                                 decl([ T9 ],
                                    chain(
                                       assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                       assign(nth(T8, i6), nth(T9, V(0)))
                                    )
                                 )
                              ),
                              assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, add(V(0), V(1))))))
                           )
                        ),
                        assign(nth(T6, V(0)), max(nth(T7, V(0)), nth(T6, V(0))))
                     )
                  )
               )
            ),
            assign(nth(T1, V(1)), nth(T6, V(0)))
         )
      )
   ),
   assign(nth(Y, V(0)), geq(nth(T1, add(V(0), V(1))), nth(T1, V(0))))
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T6, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s1
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T6, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s1
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T6, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s1
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T6, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s1
------------------------------------------------------------------

------------------------------------------------------------------
RULE: scalarize1
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ T6 ],
   chain(
      decl([ T2 ],
         chain(
            chain(
               assign(nth(T2, V(0)), V(0.0)),
               loop(i5, [ 0 .. 2 ],
                  decl([ T3 ],
                     chain(
                        decl([ T4, T5 ],
                           chain(
                              assign(nth(T5, V(0)), nth(X, V(0))),
                              assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                              assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                           )
                        ),
                        assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                     )
                  )
               )
            ),
            assign(nth(T1, V(0)), nth(T2, V(0)))
         )
      ),
      chain(
         chain(
            assign(nth(T6, V(0)), V(0.0)),
            loop(i3, [ 0 .. 1 ],
               decl([ T7 ],
                  chain(
                     decl([ T8 ],
                        chain(
                           loop(i6, [ 0 .. 1 ],
                              decl([ T9 ],
                                 chain(
                                    assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                    assign(nth(T8, i6), nth(T9, V(0)))
                                 )
                              )
                           ),
                           assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, add(V(0), V(1))))))
                        )
                     ),
                     assign(nth(T6, V(0)), max(nth(T7, V(0)), nth(T6, V(0))))
                  )
               )
            )
         ),
         assign(nth(T1, V(1)), nth(T6, V(0)))
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ s1 ],
   chain(
      decl([ T2 ],
         chain(
            chain(
               assign(nth(T2, V(0)), V(0.0)),
               loop(i5, [ 0 .. 2 ],
                  decl([ T3 ],
                     chain(
                        decl([ T4, T5 ],
                           chain(
                              assign(nth(T5, V(0)), nth(X, V(0))),
                              assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                              assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                           )
                        ),
                        assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                     )
                  )
               )
            ),
            assign(nth(T1, V(0)), nth(T2, V(0)))
         )
      ),
      chain(
         chain(
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               decl([ T7 ],
                  chain(
                     decl([ T8 ],
                        chain(
                           loop(i6, [ 0 .. 1 ],
                              decl([ T9 ],
                                 chain(
                                    assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                    assign(nth(T8, i6), nth(T9, V(0)))
                                 )
                              )
                           ),
                           assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                        )
                     ),
                     assign(s1, max(s1, nth(T7, V(0))))
                  )
               )
            )
         ),
         assign(nth(T1, V(1)), s1)
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ T2 ],
      chain(
         chain(
            assign(nth(T2, V(0)), V(0.0)),
            loop(i5, [ 0 .. 2 ],
               decl([ T3 ],
                  chain(
                     decl([ T4, T5 ],
                        chain(
                           assign(nth(T5, V(0)), nth(X, V(0))),
                           assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                           assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                        )
                     ),
                     assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                  )
               )
            )
         ),
         assign(nth(T1, V(0)), nth(T2, V(0)))
      )
   ),
   chain(
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ T7 ],
               chain(
                  decl([ T8 ],
                     chain(
                        loop(i6, [ 0 .. 1 ],
                           decl([ T9 ],
                              chain(
                                 assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                 assign(nth(T8, i6), nth(T9, V(0)))
                              )
                           )
                        ),
                        assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                     )
                  ),
                  assign(s1, max(s1, nth(T7, V(0))))
               )
            )
         )
      ),
      assign(nth(T1, V(1)), s1)
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ T2 ],
   chain(
      chain(
         chain(
            assign(nth(T2, V(0)), V(0.0)),
            loop(i5, [ 0 .. 2 ],
               decl([ T3 ],
                  chain(
                     decl([ T4, T5 ],
                        chain(
                           assign(nth(T5, V(0)), nth(X, V(0))),
                           assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                           assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                        )
                     ),
                     assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                  )
               )
            )
         ),
         assign(nth(T1, V(0)), nth(T2, V(0)))
      ),
      chain(
         chain(
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               decl([ T7 ],
                  chain(
                     decl([ T8 ],
                        chain(
                           loop(i6, [ 0 .. 1 ],
                              decl([ T9 ],
                                 chain(
                                    assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                    assign(nth(T8, i6), nth(T9, V(0)))
                                 )
                              )
                           ),
                           assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                        )
                     ),
                     assign(s1, max(s1, nth(T7, V(0))))
                  )
               )
            )
         ),
         assign(nth(T1, V(1)), s1)
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         assign(nth(T2, V(0)), V(0.0)),
         loop(i5, [ 0 .. 2 ],
            decl([ T3 ],
               chain(
                  decl([ T4, T5 ],
                     chain(
                        assign(nth(T5, V(0)), nth(X, V(0))),
                        assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                        assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                     )
                  ),
                  assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
               )
            )
         )
      ),
      assign(nth(T1, V(0)), nth(T2, V(0)))
   ),
   chain(
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ T7 ],
               chain(
                  decl([ T8 ],
                     chain(
                        loop(i6, [ 0 .. 1 ],
                           decl([ T9 ],
                              chain(
                                 assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                 assign(nth(T8, i6), nth(T9, V(0)))
                              )
                           )
                        ),
                        assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                     )
                  ),
                  assign(s1, max(s1, nth(T7, V(0))))
               )
            )
         )
      ),
      assign(nth(T1, V(1)), s1)
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(nth(T2, V(0)), V(0.0)),
      loop(i5, [ 0 .. 2 ],
         decl([ T3 ],
            chain(
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                  )
               ),
               assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
            )
         )
      )
   ),
   assign(nth(T1, V(0)), nth(T2, V(0))),
   chain(
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ T7 ],
               chain(
                  decl([ T8 ],
                     chain(
                        loop(i6, [ 0 .. 1 ],
                           decl([ T9 ],
                              chain(
                                 assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                 assign(nth(T8, i6), nth(T9, V(0)))
                              )
                           )
                        ),
                        assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                     )
                  ),
                  assign(s1, max(s1, nth(T7, V(0))))
               )
            )
         )
      ),
      assign(nth(T1, V(1)), s1)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(nth(T2, V(0)), V(0.0)),
      loop(i5, [ 0 .. 2 ],
         decl([ T3 ],
            chain(
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                  )
               ),
               assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
            )
         )
      )
   ),
   assign(nth(T1, V(0)), nth(T2, V(0))),
   chain(
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ T7 ],
               chain(
                  decl([ T8 ],
                     chain(
                        loop(i6, [ 0 .. 1 ],
                           decl([ T9 ],
                              chain(
                                 assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                 assign(nth(T8, i6), nth(T9, V(0)))
                              )
                           )
                        ),
                        assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                     )
                  ),
                  assign(s1, max(s1, nth(T7, V(0))))
               )
            )
         )
      ),
      assign(nth(T1, V(1)), s1)
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(nth(T2, V(0)), V(0.0)),
   loop(i5, [ 0 .. 2 ],
      decl([ T3 ],
         chain(
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
               )
            ),
            assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
         )
      )
   ),
   assign(nth(T1, V(0)), nth(T2, V(0))),
   chain(
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ T7 ],
               chain(
                  decl([ T8 ],
                     chain(
                        loop(i6, [ 0 .. 1 ],
                           decl([ T9 ],
                              chain(
                                 assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                 assign(nth(T8, i6), nth(T9, V(0)))
                              )
                           )
                        ),
                        assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                     )
                  ),
                  assign(s1, max(s1, nth(T7, V(0))))
               )
            )
         )
      ),
      assign(nth(T1, V(1)), s1)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(nth(T2, V(0)), V(0.0)),
   loop(i5, [ 0 .. 2 ],
      decl([ T3 ],
         chain(
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
               )
            ),
            assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
         )
      )
   ),
   assign(nth(T1, V(0)), nth(T2, V(0))),
   chain(
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ T7 ],
               chain(
                  decl([ T8 ],
                     chain(
                        loop(i6, [ 0 .. 1 ],
                           decl([ T9 ],
                              chain(
                                 assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                 assign(nth(T8, i6), nth(T9, V(0)))
                              )
                           )
                        ),
                        assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                     )
                  ),
                  assign(s1, max(s1, nth(T7, V(0))))
               )
            )
         )
      ),
      assign(nth(T1, V(1)), s1)
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(nth(T2, V(0)), V(0.0)),
   loop(i5, [ 0 .. 2 ],
      decl([ T3 ],
         chain(
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
               )
            ),
            assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
         )
      )
   ),
   chain(
      assign(nth(T1, V(0)), nth(T2, V(0))),
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ T7 ],
               chain(
                  decl([ T8 ],
                     chain(
                        loop(i6, [ 0 .. 1 ],
                           decl([ T9 ],
                              chain(
                                 assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                 assign(nth(T8, i6), nth(T9, V(0)))
                              )
                           )
                        ),
                        assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                     )
                  ),
                  assign(s1, max(s1, nth(T7, V(0))))
               )
            )
         )
      ),
      assign(nth(T1, V(1)), s1)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(nth(T2, V(0)), V(0.0)),
   loop(i5, [ 0 .. 2 ],
      decl([ T3 ],
         chain(
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
               )
            ),
            assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
         )
      )
   ),
   chain(
      assign(nth(T1, V(0)), nth(T2, V(0))),
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ T7 ],
               chain(
                  decl([ T8 ],
                     chain(
                        loop(i6, [ 0 .. 1 ],
                           decl([ T9 ],
                              chain(
                                 assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                 assign(nth(T8, i6), nth(T9, V(0)))
                              )
                           )
                        ),
                        assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                     )
                  ),
                  assign(s1, max(s1, nth(T7, V(0))))
               )
            )
         )
      ),
      assign(nth(T1, V(1)), s1)
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(nth(T2, V(0)), V(0.0)),
   chain(
      loop(i5, [ 0 .. 2 ],
         decl([ T3 ],
            chain(
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                  )
               ),
               assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
            )
         )
      ),
      assign(nth(T1, V(0)), nth(T2, V(0))),
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ T7 ],
               chain(
                  decl([ T8 ],
                     chain(
                        loop(i6, [ 0 .. 1 ],
                           decl([ T9 ],
                              chain(
                                 assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                 assign(nth(T8, i6), nth(T9, V(0)))
                              )
                           )
                        ),
                        assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                     )
                  ),
                  assign(s1, max(s1, nth(T7, V(0))))
               )
            )
         )
      ),
      assign(nth(T1, V(1)), s1)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(nth(T2, V(0)), V(0.0)),
   chain(
      loop(i5, [ 0 .. 2 ],
         decl([ T3 ],
            chain(
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                  )
               ),
               assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
            )
         )
      ),
      assign(nth(T1, V(0)), nth(T2, V(0))),
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ T7 ],
               chain(
                  decl([ T8 ],
                     chain(
                        loop(i6, [ 0 .. 1 ],
                           decl([ T9 ],
                              chain(
                                 assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                 assign(nth(T8, i6), nth(T9, V(0)))
                              )
                           )
                        ),
                        assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                     )
                  ),
                  assign(s1, max(s1, nth(T7, V(0))))
               )
            )
         )
      ),
      assign(nth(T1, V(1)), s1)
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(nth(T2, V(0)), V(0.0)),
      loop(i5, [ 0 .. 2 ],
         decl([ T3 ],
            chain(
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                  )
               ),
               assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
            )
         )
      ),
      assign(nth(T1, V(0)), nth(T2, V(0))),
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ T7 ],
               chain(
                  decl([ T8 ],
                     chain(
                        loop(i6, [ 0 .. 1 ],
                           decl([ T9 ],
                              chain(
                                 assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                                 assign(nth(T8, i6), nth(T9, V(0)))
                              )
                           )
                        ),
                        assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                     )
                  ),
                  assign(s1, max(s1, nth(T7, V(0))))
               )
            )
         )
      ),
      assign(nth(T1, V(1)), s1)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(nth(T2, V(0)), V(0.0)),
   loop(i5, [ 0 .. 2 ],
      decl([ T3 ],
         chain(
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
               )
            ),
            assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
         )
      )
   ),
   assign(nth(T1, V(0)), nth(T2, V(0))),
   chain(
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         decl([ T7 ],
            chain(
               decl([ T8 ],
                  chain(
                     loop(i6, [ 0 .. 1 ],
                        decl([ T9 ],
                           chain(
                              assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                              assign(nth(T8, i6), nth(T9, V(0)))
                           )
                        )
                     ),
                     assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                  )
               ),
               assign(s1, max(s1, nth(T7, V(0))))
            )
         )
      )
   ),
   assign(nth(T1, V(1)), s1)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(nth(T2, V(0)), V(0.0)),
   loop(i5, [ 0 .. 2 ],
      decl([ T3 ],
         chain(
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
               )
            ),
            assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
         )
      )
   ),
   chain(
      assign(nth(T1, V(0)), nth(T2, V(0))),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         decl([ T7 ],
            chain(
               decl([ T8 ],
                  chain(
                     loop(i6, [ 0 .. 1 ],
                        decl([ T9 ],
                           chain(
                              assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                              assign(nth(T8, i6), nth(T9, V(0)))
                           )
                        )
                     ),
                     assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                  )
               ),
               assign(s1, max(s1, nth(T7, V(0))))
            )
         )
      )
   ),
   assign(nth(T1, V(1)), s1)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(nth(T2, V(0)), V(0.0)),
   loop(i5, [ 0 .. 2 ],
      decl([ T3 ],
         chain(
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
               )
            ),
            assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
         )
      )
   ),
   chain(
      assign(nth(T1, V(0)), nth(T2, V(0))),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         decl([ T7 ],
            chain(
               decl([ T8 ],
                  chain(
                     loop(i6, [ 0 .. 1 ],
                        decl([ T9 ],
                           chain(
                              assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                              assign(nth(T8, i6), nth(T9, V(0)))
                           )
                        )
                     ),
                     assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                  )
               ),
               assign(s1, max(s1, nth(T7, V(0))))
            )
         )
      )
   ),
   assign(nth(T1, V(1)), s1)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(nth(T2, V(0)), V(0.0)),
   chain(
      loop(i5, [ 0 .. 2 ],
         decl([ T3 ],
            chain(
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                  )
               ),
               assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
            )
         )
      ),
      assign(nth(T1, V(0)), nth(T2, V(0))),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         decl([ T7 ],
            chain(
               decl([ T8 ],
                  chain(
                     loop(i6, [ 0 .. 1 ],
                        decl([ T9 ],
                           chain(
                              assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                              assign(nth(T8, i6), nth(T9, V(0)))
                           )
                        )
                     ),
                     assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                  )
               ),
               assign(s1, max(s1, nth(T7, V(0))))
            )
         )
      )
   ),
   assign(nth(T1, V(1)), s1)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(nth(T2, V(0)), V(0.0)),
   chain(
      loop(i5, [ 0 .. 2 ],
         decl([ T3 ],
            chain(
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                  )
               ),
               assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
            )
         )
      ),
      assign(nth(T1, V(0)), nth(T2, V(0))),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         decl([ T7 ],
            chain(
               decl([ T8 ],
                  chain(
                     loop(i6, [ 0 .. 1 ],
                        decl([ T9 ],
                           chain(
                              assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                              assign(nth(T8, i6), nth(T9, V(0)))
                           )
                        )
                     ),
                     assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                  )
               ),
               assign(s1, max(s1, nth(T7, V(0))))
            )
         )
      )
   ),
   assign(nth(T1, V(1)), s1)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(nth(T2, V(0)), V(0.0)),
      loop(i5, [ 0 .. 2 ],
         decl([ T3 ],
            chain(
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                  )
               ),
               assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
            )
         )
      ),
      assign(nth(T1, V(0)), nth(T2, V(0))),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         decl([ T7 ],
            chain(
               decl([ T8 ],
                  chain(
                     loop(i6, [ 0 .. 1 ],
                        decl([ T9 ],
                           chain(
                              assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                              assign(nth(T8, i6), nth(T9, V(0)))
                           )
                        )
                     ),
                     assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                  )
               ),
               assign(s1, max(s1, nth(T7, V(0))))
            )
         )
      )
   ),
   assign(nth(T1, V(1)), s1)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain_xyz
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(nth(T2, V(0)), V(0.0)),
      loop(i5, [ 0 .. 2 ],
         decl([ T3 ],
            chain(
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                  )
               ),
               assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
            )
         )
      ),
      assign(nth(T1, V(0)), nth(T2, V(0))),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         decl([ T7 ],
            chain(
               decl([ T8 ],
                  chain(
                     loop(i6, [ 0 .. 1 ],
                        decl([ T9 ],
                           chain(
                              assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                              assign(nth(T8, i6), nth(T9, V(0)))
                           )
                        )
                     ),
                     assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                  )
               ),
               assign(s1, max(s1, nth(T7, V(0))))
            )
         )
      )
   ),
   assign(nth(T1, V(1)), s1)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(nth(T2, V(0)), V(0.0)),
      loop(i5, [ 0 .. 2 ],
         decl([ T3 ],
            chain(
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
                  )
               ),
               assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
            )
         )
      ),
      assign(nth(T1, V(0)), nth(T2, V(0))),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         decl([ T7 ],
            chain(
               decl([ T8 ],
                  chain(
                     loop(i6, [ 0 .. 1 ],
                        decl([ T9 ],
                           chain(
                              assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                              assign(nth(T8, i6), nth(T9, V(0)))
                           )
                        )
                     ),
                     assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
                  )
               ),
               assign(s1, max(s1, nth(T7, V(0))))
            )
         )
      ),
      assign(nth(T1, V(1)), s1)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: loop_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
loop(i5, [ 0 .. 2 ],
   decl([ T3 ],
      chain(
         decl([ T4, T5 ],
            chain(
               assign(nth(T5, V(0)), nth(X, V(0))),
               assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
               assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
            )
         ),
         assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ T3 ],
   loop(i5, [ 0 .. 2 ],
      chain(
         decl([ T4, T5 ],
            chain(
               assign(nth(T5, V(0)), nth(X, V(0))),
               assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
               assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
            )
         ),
         assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ T4, T5 ],
      chain(
         assign(nth(T5, V(0)), nth(X, V(0))),
         assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
         assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
      )
   ),
   assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ T4, T5 ],
   chain(
      chain(
         assign(nth(T5, V(0)), nth(X, V(0))),
         assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
         assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
      ),
      assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(nth(T5, V(0)), nth(X, V(0))),
      assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
      assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5)))
   ),
   assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(nth(T5, V(0)), nth(X, V(0))),
   assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
   assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
   assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: loop_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
loop(i3, [ 0 .. 1 ],
   decl([ T7 ],
      chain(
         decl([ T8 ],
            chain(
               loop(i6, [ 0 .. 1 ],
                  decl([ T9 ],
                     chain(
                        assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                        assign(nth(T8, i6), nth(T9, V(0)))
                     )
                  )
               ),
               assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
            )
         ),
         assign(s1, max(s1, nth(T7, V(0))))
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ T7 ],
   loop(i3, [ 0 .. 1 ],
      chain(
         decl([ T8 ],
            chain(
               loop(i6, [ 0 .. 1 ],
                  decl([ T9 ],
                     chain(
                        assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                        assign(nth(T8, i6), nth(T9, V(0)))
                     )
                  )
               ),
               assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
            )
         ),
         assign(s1, max(s1, nth(T7, V(0))))
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ T8 ],
      chain(
         loop(i6, [ 0 .. 1 ],
            decl([ T9 ],
               chain(
                  assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                  assign(nth(T8, i6), nth(T9, V(0)))
               )
            )
         ),
         assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
      )
   ),
   assign(s1, max(s1, nth(T7, V(0))))
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ T8 ],
   chain(
      chain(
         loop(i6, [ 0 .. 1 ],
            decl([ T9 ],
               chain(
                  assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
                  assign(nth(T8, i6), nth(T9, V(0)))
               )
            )
         ),
         assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
      ),
      assign(s1, max(s1, nth(T7, V(0))))
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      loop(i6, [ 0 .. 1 ],
         decl([ T9 ],
            chain(
               assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
               assign(nth(T8, i6), nth(T9, V(0)))
            )
         )
      ),
      assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
   ),
   assign(s1, max(s1, nth(T7, V(0))))
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   loop(i6, [ 0 .. 1 ],
      decl([ T9 ],
         chain(
            assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
            assign(nth(T8, i6), nth(T9, V(0)))
         )
      )
   ),
   assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1))))),
   assign(s1, max(s1, nth(T7, V(0))))
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unroll
------------------------------------------------------------------
old expression
------------------------------------------------------------------
loop(i6, [ 0 .. 1 ],
   decl([ T9 ],
      chain(
         assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), i6)))),
         assign(nth(T8, i6), nth(T9, V(0)))
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ T9 ],
      chain(
         assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), V(0))))),
         assign(nth(T8, V(0)), nth(T9, V(0)))
      )
   ),
   decl([ T9 ],
      chain(
         assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), V(1))))),
         assign(nth(T8, V(1)), nth(T9, V(0)))
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T9, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s2
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T9, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s2
------------------------------------------------------------------

------------------------------------------------------------------
RULE: scalarize1
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ T9 ],
   chain(
      assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), V(0))))),
      assign(nth(T8, V(0)), nth(T9, V(0)))
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ s2 ],
   chain(
      assign(s2, nth(X, add(i3, V(1)))),
      assign(nth(T8, V(0)), s2)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: assign_var_var
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s2, nth(X, add(i3, V(1)))),
   assign(nth(T8, V(0)), s2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T9, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s3
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T9, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s3
------------------------------------------------------------------

------------------------------------------------------------------
RULE: scalarize1
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ T9 ],
   chain(
      assign(nth(T9, V(0)), nth(X, add(add(i3, V(1)), mul(V(2), V(1))))),
      assign(nth(T8, V(1)), nth(T9, V(0)))
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ s3 ],
   chain(
      assign(s3, nth(X, add(add(i3, V(1)), V(2)))),
      assign(nth(T8, V(1)), s3)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: assign_var_var
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s3, nth(X, add(add(i3, V(1)), V(2)))),
   assign(nth(T8, V(1)), s3)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(nth(T8, V(1)), nth(X, add(add(i3, V(1)), V(2))))
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: add_assoc
------------------------------------------------------------------
old expression
------------------------------------------------------------------
add(add(i3, V(1)), V(2))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
add(V(3), i3)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: abs_cond
------------------------------------------------------------------
old expression
------------------------------------------------------------------
assign(nth(T7, V(0)), abs(sub(nth(T8, V(0)), nth(T8, V(1)))))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ w1 ],
   chain(
      assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
      assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: max_cond
------------------------------------------------------------------
old expression
------------------------------------------------------------------
max(s1, nth(T7, V(0)))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0)))
------------------------------------------------------------------

------------------------------------------------------------------
RULE: Y0_creturn
------------------------------------------------------------------
old expression
------------------------------------------------------------------
assign(nth(Y, V(0)), geq(nth(T1, add(V(0), V(1))), nth(T1, V(0))))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ w2 ],
   chain(
      assign(w2, geq(nth(T1, add(V(0), V(1))), nth(T1, V(0)))),
      creturn(w2)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: add_zero
------------------------------------------------------------------
old expression
------------------------------------------------------------------
add(V(0), V(1))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
V(1)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T1, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
q1
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T1, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
q1
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T1, V(1))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
q2
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T1, V(1))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
q2
------------------------------------------------------------------

------------------------------------------------------------------
RULE: scalarize_const
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ T1 ],
   chain(
      decl([ s1 ],
         decl([ T2 ],
            chain(
               chain(
                  chain(
                     assign(nth(T2, V(0)), V(0.0)),
                     decl([ T3 ],
                        loop(i5, [ 0 .. 2 ],
                           decl([ T4, T5 ],
                              chain(
                                 assign(nth(T5, V(0)), nth(X, V(0))),
                                 assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                                 assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                                 assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                              )
                           )
                        )
                     ),
                     assign(nth(T1, V(0)), nth(T2, V(0))),
                     assign(s1, V(0.0)),
                     decl([ T7 ],
                        loop(i3, [ 0 .. 1 ],
                           decl([ T8 ],
                              chain(
                                 chain(
                                    decl([ s2 ],
                                       chain(
                                          assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                       )
                                    ),
                                    decl([ s3 ],
                                       chain(
                                          assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                                       )
                                    )
                                 ),
                                 decl([ w1 ],
                                    chain(
                                       assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                       assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                                    )
                                 ),
                                 assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                              )
                           )
                        )
                     ),
                     assign(nth(T1, V(1)), s1)
                  )
               )
            )
         )
      ),
      decl([ w2 ],
         chain(
            assign(w2, geq(nth(T1, V(1)), nth(T1, V(0)))),
            creturn(w2)
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ q1, q2 ],
   chain(
      decl([ s1 ],
         decl([ T2 ],
            chain(
               chain(
                  chain(
                     assign(nth(T2, V(0)), V(0.0)),
                     decl([ T3 ],
                        loop(i5, [ 0 .. 2 ],
                           decl([ T4, T5 ],
                              chain(
                                 assign(nth(T5, V(0)), nth(X, V(0))),
                                 assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                                 assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                                 assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                              )
                           )
                        )
                     ),
                     assign(q1, nth(T2, V(0))),
                     assign(s1, V(0.0)),
                     decl([ T7 ],
                        loop(i3, [ 0 .. 1 ],
                           decl([ T8 ],
                              chain(
                                 chain(
                                    decl([ s2 ],
                                       chain(
                                          assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                       )
                                    ),
                                    decl([ s3 ],
                                       chain(
                                          assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                                       )
                                    )
                                 ),
                                 decl([ w1 ],
                                    chain(
                                       assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                       assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                                    )
                                 ),
                                 assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                              )
                           )
                        )
                     ),
                     assign(q2, s1)
                  )
               )
            )
         )
      ),
      decl([ w2 ],
         chain(
            assign(w2, geq(q2, q1)),
            creturn(w2)
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: copyprop_var_var
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ q1, q2 ],
   chain(
      decl([ s1 ],
         decl([ T2 ],
            chain(
               chain(
                  chain(
                     assign(nth(T2, V(0)), V(0.0)),
                     decl([ T3 ],
                        loop(i5, [ 0 .. 2 ],
                           decl([ T4, T5 ],
                              chain(
                                 assign(nth(T5, V(0)), nth(X, V(0))),
                                 assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                                 assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                                 assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                              )
                           )
                        )
                     ),
                     assign(q1, nth(T2, V(0))),
                     assign(s1, V(0.0)),
                     decl([ T7 ],
                        loop(i3, [ 0 .. 1 ],
                           decl([ T8 ],
                              chain(
                                 chain(
                                    decl([ s2 ],
                                       chain(
                                          assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                       )
                                    ),
                                    decl([ s3 ],
                                       chain(
                                          assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                                       )
                                    )
                                 ),
                                 decl([ w1 ],
                                    chain(
                                       assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                       assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                                    )
                                 ),
                                 assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                              )
                           )
                        )
                     ),
                     assign(q2, s1)
                  )
               )
            )
         )
      ),
      decl([ w2 ],
         chain(
            assign(w2, geq(q2, q1)),
            creturn(w2)
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ q1 ],
   chain(
      decl([ s1 ],
         decl([ T2 ],
            chain(
               chain(
                  chain(
                     assign(nth(T2, V(0)), V(0.0)),
                     decl([ T3 ],
                        loop(i5, [ 0 .. 2 ],
                           decl([ T4, T5 ],
                              chain(
                                 assign(nth(T5, V(0)), nth(X, V(0))),
                                 assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                                 assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                                 assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                              )
                           )
                        )
                     ),
                     assign(q1, nth(T2, V(0))),
                     assign(s1, V(0.0)),
                     decl([ T7 ],
                        loop(i3, [ 0 .. 1 ],
                           decl([ T8 ],
                              chain(
                                 chain(
                                    decl([ s2 ],
                                       chain(
                                          assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                       )
                                    ),
                                    decl([ s3 ],
                                       chain(
                                          assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                                       )
                                    )
                                 ),
                                 decl([ w1 ],
                                    chain(
                                       assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                       assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                                    )
                                 ),
                                 assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                              )
                           )
                        )
                     ),
                     assign(s1, s1)
                  )
               )
            )
         )
      ),
      decl([ w2 ],
         chain(
            assign(w2, geq(s1, q1)),
            creturn(w2)
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ s1 ],
      decl([ T2 ],
         chain(
            chain(
               chain(
                  assign(nth(T2, V(0)), V(0.0)),
                  decl([ T3 ],
                     loop(i5, [ 0 .. 2 ],
                        decl([ T4, T5 ],
                           chain(
                              assign(nth(T5, V(0)), nth(X, V(0))),
                              assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                              assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                              assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                           )
                        )
                     )
                  ),
                  assign(q1, nth(T2, V(0))),
                  assign(s1, V(0.0)),
                  decl([ T7 ],
                     loop(i3, [ 0 .. 1 ],
                        decl([ T8 ],
                           chain(
                              chain(
                                 decl([ s2 ],
                                    chain(
                                       assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                    )
                                 ),
                                 decl([ s3 ],
                                    chain(
                                       assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                                    )
                                 )
                              ),
                              decl([ w1 ],
                                 chain(
                                    assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                    assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                                 )
                              ),
                              assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                           )
                        )
                     )
                  ),
                  assign(s1, s1)
               )
            )
         )
      )
   ),
   decl([ w2 ],
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ s1 ],
   chain(
      decl([ T2 ],
         chain(
            chain(
               chain(
                  assign(nth(T2, V(0)), V(0.0)),
                  decl([ T3 ],
                     loop(i5, [ 0 .. 2 ],
                        decl([ T4, T5 ],
                           chain(
                              assign(nth(T5, V(0)), nth(X, V(0))),
                              assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                              assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                              assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                           )
                        )
                     )
                  ),
                  assign(q1, nth(T2, V(0))),
                  assign(s1, V(0.0)),
                  decl([ T7 ],
                     loop(i3, [ 0 .. 1 ],
                        decl([ T8 ],
                           chain(
                              chain(
                                 decl([ s2 ],
                                    chain(
                                       assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                    )
                                 ),
                                 decl([ s3 ],
                                    chain(
                                       assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                                    )
                                 )
                              ),
                              decl([ w1 ],
                                 chain(
                                    assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                    assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                                 )
                              ),
                              assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                           )
                        )
                     )
                  ),
                  assign(s1, s1)
               )
            )
         )
      ),
      decl([ w2 ],
         chain(
            assign(w2, geq(s1, q1)),
            creturn(w2)
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ T2 ],
      chain(
         chain(
            chain(
               assign(nth(T2, V(0)), V(0.0)),
               decl([ T3 ],
                  loop(i5, [ 0 .. 2 ],
                     decl([ T4, T5 ],
                        chain(
                           assign(nth(T5, V(0)), nth(X, V(0))),
                           assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                           assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                           assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                        )
                     )
                  )
               ),
               assign(q1, nth(T2, V(0))),
               assign(s1, V(0.0)),
               decl([ T7 ],
                  loop(i3, [ 0 .. 1 ],
                     decl([ T8 ],
                        chain(
                           chain(
                              decl([ s2 ],
                                 chain(
                                    assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                 )
                              ),
                              decl([ s3 ],
                                 chain(
                                    assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                                 )
                              )
                           ),
                           decl([ w1 ],
                              chain(
                                 assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                 assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                              )
                           ),
                           assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                        )
                     )
                  )
               ),
               assign(s1, s1)
            )
         )
      )
   ),
   decl([ w2 ],
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ T2 ],
   chain(
      chain(
         chain(
            chain(
               assign(nth(T2, V(0)), V(0.0)),
               decl([ T3 ],
                  loop(i5, [ 0 .. 2 ],
                     decl([ T4, T5 ],
                        chain(
                           assign(nth(T5, V(0)), nth(X, V(0))),
                           assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                           assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                           assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                        )
                     )
                  )
               ),
               assign(q1, nth(T2, V(0))),
               assign(s1, V(0.0)),
               decl([ T7 ],
                  loop(i3, [ 0 .. 1 ],
                     decl([ T8 ],
                        chain(
                           chain(
                              decl([ s2 ],
                                 chain(
                                    assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                 )
                              ),
                              decl([ s3 ],
                                 chain(
                                    assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                                 )
                              )
                           ),
                           decl([ w1 ],
                              chain(
                                 assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                 assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                              )
                           ),
                           assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                        )
                     )
                  )
               ),
               assign(s1, s1)
            )
         )
      ),
      decl([ w2 ],
         chain(
            assign(w2, geq(s1, q1)),
            creturn(w2)
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         chain(
            assign(nth(T2, V(0)), V(0.0)),
            decl([ T3 ],
               loop(i5, [ 0 .. 2 ],
                  decl([ T4, T5 ],
                     chain(
                        assign(nth(T5, V(0)), nth(X, V(0))),
                        assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                        assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                        assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                     )
                  )
               )
            ),
            assign(q1, nth(T2, V(0))),
            assign(s1, V(0.0)),
            decl([ T7 ],
               loop(i3, [ 0 .. 1 ],
                  decl([ T8 ],
                     chain(
                        chain(
                           decl([ s2 ],
                              chain(
                                 assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                              )
                           ),
                           decl([ s3 ],
                              chain(
                                 assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                              )
                           )
                        ),
                        decl([ w1 ],
                           chain(
                              assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                              assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                           )
                        ),
                        assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                     )
                  )
               )
            ),
            assign(s1, s1)
         )
      )
   ),
   decl([ w2 ],
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         assign(nth(T2, V(0)), V(0.0)),
         decl([ T3 ],
            loop(i5, [ 0 .. 2 ],
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                     assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                  )
               )
            )
         ),
         assign(q1, nth(T2, V(0))),
         assign(s1, V(0.0)),
         decl([ T7 ],
            loop(i3, [ 0 .. 1 ],
               decl([ T8 ],
                  chain(
                     chain(
                        decl([ s2 ],
                           chain(
                              assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                           )
                        ),
                        decl([ s3 ],
                           chain(
                              assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                           )
                        )
                     ),
                     decl([ w1 ],
                        chain(
                           assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                           assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                        )
                     ),
                     assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                  )
               )
            )
         ),
         assign(s1, s1)
      )
   ),
   decl([ w2 ],
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         assign(nth(T2, V(0)), V(0.0)),
         decl([ T3 ],
            loop(i5, [ 0 .. 2 ],
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                     assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                  )
               )
            )
         ),
         assign(q1, nth(T2, V(0))),
         assign(s1, V(0.0)),
         decl([ T7 ],
            loop(i3, [ 0 .. 1 ],
               decl([ T8 ],
                  chain(
                     chain(
                        decl([ s2 ],
                           chain(
                              assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                           )
                        ),
                        decl([ s3 ],
                           chain(
                              assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                           )
                        )
                     ),
                     decl([ w1 ],
                        chain(
                           assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                           assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                        )
                     ),
                     assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                  )
               )
            )
         ),
         assign(s1, s1)
      )
   ),
   decl([ w2 ],
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(nth(T2, V(0)), V(0.0)),
      decl([ T3 ],
         loop(i5, [ 0 .. 2 ],
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                  assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
               )
            )
         )
      ),
      assign(q1, nth(T2, V(0))),
      assign(s1, V(0.0)),
      decl([ T7 ],
         loop(i3, [ 0 .. 1 ],
            decl([ T8 ],
               chain(
                  chain(
                     decl([ s2 ],
                        chain(
                           assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                        )
                     ),
                     decl([ s3 ],
                        chain(
                           assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                        )
                     )
                  ),
                  decl([ w1 ],
                     chain(
                        assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  ),
                  assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
               )
            )
         )
      ),
      assign(s1, s1)
   ),
   decl([ w2 ],
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(nth(T2, V(0)), V(0.0)),
      decl([ T3 ],
         loop(i5, [ 0 .. 2 ],
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                  assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
               )
            )
         )
      ),
      assign(q1, nth(T2, V(0))),
      assign(s1, V(0.0)),
      decl([ T7 ],
         loop(i3, [ 0 .. 1 ],
            decl([ T8 ],
               chain(
                  chain(
                     decl([ s2 ],
                        chain(
                           assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                        )
                     ),
                     decl([ s3 ],
                        chain(
                           assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                        )
                     )
                  ),
                  decl([ w1 ],
                     chain(
                        assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  ),
                  assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
               )
            )
         )
      ),
      assign(s1, s1)
   ),
   decl([ w2 ],
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(nth(T2, V(0)), V(0.0)),
   decl([ T3 ],
      loop(i5, [ 0 .. 2 ],
         decl([ T4, T5 ],
            chain(
               assign(nth(T5, V(0)), nth(X, V(0))),
               assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
               assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
               assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
            )
         )
      )
   ),
   assign(q1, nth(T2, V(0))),
   assign(s1, V(0.0)),
   decl([ T7 ],
      loop(i3, [ 0 .. 1 ],
         decl([ T8 ],
            chain(
               chain(
                  decl([ s2 ],
                     chain(
                        assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                     )
                  ),
                  decl([ s3 ],
                     chain(
                        assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                     )
                  )
               ),
               decl([ w1 ],
                  chain(
                     assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                     assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   ),
   assign(s1, s1),
   decl([ w2 ],
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(nth(T2, V(0)), V(0.0)),
   decl([ T3 ],
      loop(i5, [ 0 .. 2 ],
         decl([ T4, T5 ],
            chain(
               assign(nth(T5, V(0)), nth(X, V(0))),
               assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
               assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
               assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
            )
         )
      )
   ),
   assign(q1, nth(T2, V(0))),
   assign(s1, V(0.0)),
   decl([ T7 ],
      loop(i3, [ 0 .. 1 ],
         decl([ T8 ],
            chain(
               chain(
                  decl([ s2 ],
                     chain(
                        assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                     )
                  ),
                  decl([ s3 ],
                     chain(
                        assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                     )
                  )
               ),
               decl([ w1 ],
                  chain(
                     assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                     assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   ),
   assign(s1, s1),
   decl([ w2 ],
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ T3 ],
      chain(
         assign(nth(T2, V(0)), V(0.0)),
         loop(i5, [ 0 .. 2 ],
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                  assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
               )
            )
         )
      )
   ),
   assign(q1, nth(T2, V(0))),
   assign(s1, V(0.0)),
   decl([ T7 ],
      loop(i3, [ 0 .. 1 ],
         decl([ T8 ],
            chain(
               chain(
                  decl([ s2 ],
                     chain(
                        assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                     )
                  ),
                  decl([ s3 ],
                     chain(
                        assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                     )
                  )
               ),
               decl([ w1 ],
                  chain(
                     assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                     assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   ),
   assign(s1, s1),
   decl([ w2 ],
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ T3 ],
      chain(
         assign(nth(T2, V(0)), V(0.0)),
         loop(i5, [ 0 .. 2 ],
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                  assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
               )
            )
         )
      )
   ),
   assign(q1, nth(T2, V(0))),
   assign(s1, V(0.0)),
   decl([ T7 ],
      loop(i3, [ 0 .. 1 ],
         decl([ T8 ],
            chain(
               chain(
                  decl([ s2 ],
                     chain(
                        assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                     )
                  ),
                  decl([ s3 ],
                     chain(
                        assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                     )
                  )
               ),
               decl([ w1 ],
                  chain(
                     assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                     assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   ),
   assign(s1, s1),
   decl([ w2 ],
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ T3 ],
      chain(
         assign(nth(T2, V(0)), V(0.0)),
         loop(i5, [ 0 .. 2 ],
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                  assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
               )
            )
         )
      )
   ),
   assign(q1, nth(T2, V(0))),
   decl([ T7 ],
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ T8 ],
               chain(
                  chain(
                     decl([ s2 ],
                        chain(
                           assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                        )
                     ),
                     decl([ s3 ],
                        chain(
                           assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                        )
                     )
                  ),
                  decl([ w1 ],
                     chain(
                        assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  ),
                  assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
               )
            )
         )
      )
   ),
   assign(s1, s1),
   decl([ w2 ],
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ T3 ],
      chain(
         assign(nth(T2, V(0)), V(0.0)),
         loop(i5, [ 0 .. 2 ],
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                  assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
               )
            )
         )
      )
   ),
   assign(q1, nth(T2, V(0))),
   decl([ T7 ],
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ T8 ],
               chain(
                  chain(
                     decl([ s2 ],
                        chain(
                           assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                        )
                     ),
                     decl([ s3 ],
                        chain(
                           assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                        )
                     )
                  ),
                  decl([ w1 ],
                     chain(
                        assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  ),
                  assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
               )
            )
         )
      )
   ),
   assign(s1, s1),
   decl([ w2 ],
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ T3 ],
      chain(
         assign(nth(T2, V(0)), V(0.0)),
         loop(i5, [ 0 .. 2 ],
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                  assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
               )
            )
         )
      )
   ),
   decl([ T7 ],
      chain(
         assign(q1, nth(T2, V(0))),
         chain(
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               decl([ T8 ],
                  chain(
                     chain(
                        decl([ s2 ],
                           chain(
                              assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                           )
                        ),
                        decl([ s3 ],
                           chain(
                              assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                           )
                        )
                     ),
                     decl([ w1 ],
                        chain(
                           assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                           assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                        )
                     ),
                     assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                  )
               )
            )
         )
      )
   ),
   assign(s1, s1),
   decl([ w2 ],
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ T3 ],
      chain(
         assign(nth(T2, V(0)), V(0.0)),
         loop(i5, [ 0 .. 2 ],
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                  assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
               )
            )
         )
      )
   ),
   decl([ T7 ],
      chain(
         assign(q1, nth(T2, V(0))),
         chain(
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               decl([ T8 ],
                  chain(
                     chain(
                        decl([ s2 ],
                           chain(
                              assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                           )
                        ),
                        decl([ s3 ],
                           chain(
                              assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                           )
                        )
                     ),
                     decl([ w1 ],
                        chain(
                           assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                           assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                        )
                     ),
                     assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                  )
               )
            )
         )
      )
   ),
   assign(s1, s1),
   decl([ w2 ],
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ T7 ],
      chain(
         decl([ T3 ],
            chain(
               assign(nth(T2, V(0)), V(0.0)),
               loop(i5, [ 0 .. 2 ],
                  decl([ T4, T5 ],
                     chain(
                        assign(nth(T5, V(0)), nth(X, V(0))),
                        assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                        assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                        assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                     )
                  )
               )
            )
         ),
         chain(
            assign(q1, nth(T2, V(0))),
            chain(
               assign(s1, V(0.0)),
               loop(i3, [ 0 .. 1 ],
                  decl([ T8 ],
                     chain(
                        chain(
                           decl([ s2 ],
                              chain(
                                 assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                              )
                           ),
                           decl([ s3 ],
                              chain(
                                 assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                              )
                           )
                        ),
                        decl([ w1 ],
                           chain(
                              assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                              assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                           )
                        ),
                        assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                     )
                  )
               )
            )
         )
      )
   ),
   assign(s1, s1),
   decl([ w2 ],
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ T7 ],
      chain(
         decl([ T3 ],
            chain(
               assign(nth(T2, V(0)), V(0.0)),
               loop(i5, [ 0 .. 2 ],
                  decl([ T4, T5 ],
                     chain(
                        assign(nth(T5, V(0)), nth(X, V(0))),
                        assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                        assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                        assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                     )
                  )
               )
            )
         ),
         chain(
            assign(q1, nth(T2, V(0))),
            chain(
               assign(s1, V(0.0)),
               loop(i3, [ 0 .. 1 ],
                  decl([ T8 ],
                     chain(
                        chain(
                           decl([ s2 ],
                              chain(
                                 assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                              )
                           ),
                           decl([ s3 ],
                              chain(
                                 assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                              )
                           )
                        ),
                        decl([ w1 ],
                           chain(
                              assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                              assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                           )
                        ),
                        assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                     )
                  )
               )
            )
         )
      )
   ),
   assign(s1, s1),
   decl([ w2 ],
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ T7 ],
      chain(
         decl([ T3 ],
            chain(
               assign(nth(T2, V(0)), V(0.0)),
               loop(i5, [ 0 .. 2 ],
                  decl([ T4, T5 ],
                     chain(
                        assign(nth(T5, V(0)), nth(X, V(0))),
                        assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                        assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                        assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                     )
                  )
               )
            )
         ),
         chain(
            assign(q1, nth(T2, V(0))),
            chain(
               assign(s1, V(0.0)),
               loop(i3, [ 0 .. 1 ],
                  decl([ T8 ],
                     chain(
                        chain(
                           decl([ s2 ],
                              chain(
                                 assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                              )
                           ),
                           decl([ s3 ],
                              chain(
                                 assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                              )
                           )
                        ),
                        decl([ w1 ],
                           chain(
                              assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                              assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                           )
                        ),
                        assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                     )
                  )
               )
            )
         )
      )
   ),
   decl([ w2 ],
      chain(
         assign(s1, s1),
         chain(
            assign(w2, geq(s1, q1)),
            creturn(w2)
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ T7 ],
      chain(
         decl([ T3 ],
            chain(
               assign(nth(T2, V(0)), V(0.0)),
               loop(i5, [ 0 .. 2 ],
                  decl([ T4, T5 ],
                     chain(
                        assign(nth(T5, V(0)), nth(X, V(0))),
                        assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                        assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                        assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                     )
                  )
               )
            )
         ),
         chain(
            assign(q1, nth(T2, V(0))),
            chain(
               assign(s1, V(0.0)),
               loop(i3, [ 0 .. 1 ],
                  decl([ T8 ],
                     chain(
                        chain(
                           decl([ s2 ],
                              chain(
                                 assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                              )
                           ),
                           decl([ s3 ],
                              chain(
                                 assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                              )
                           )
                        ),
                        decl([ w1 ],
                           chain(
                              assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                              assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                           )
                        ),
                        assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                     )
                  )
               )
            )
         )
      )
   ),
   decl([ w2 ],
      chain(
         assign(s1, s1),
         chain(
            assign(w2, geq(s1, q1)),
            creturn(w2)
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ w2 ],
      chain(
         decl([ T7 ],
            chain(
               decl([ T3 ],
                  chain(
                     assign(nth(T2, V(0)), V(0.0)),
                     loop(i5, [ 0 .. 2 ],
                        decl([ T4, T5 ],
                           chain(
                              assign(nth(T5, V(0)), nth(X, V(0))),
                              assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                              assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                              assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                           )
                        )
                     )
                  )
               ),
               chain(
                  assign(q1, nth(T2, V(0))),
                  chain(
                     assign(s1, V(0.0)),
                     loop(i3, [ 0 .. 1 ],
                        decl([ T8 ],
                           chain(
                              chain(
                                 decl([ s2 ],
                                    chain(
                                       assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                    )
                                 ),
                                 decl([ s3 ],
                                    chain(
                                       assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                                    )
                                 )
                              ),
                              decl([ w1 ],
                                 chain(
                                    assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                    assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                                 )
                              ),
                              assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                           )
                        )
                     )
                  )
               )
            )
         ),
         chain(
            assign(s1, s1),
            chain(
               assign(w2, geq(s1, q1)),
               creturn(w2)
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ T7 ],
      chain(
         decl([ T3 ],
            chain(
               assign(nth(T2, V(0)), V(0.0)),
               loop(i5, [ 0 .. 2 ],
                  decl([ T4, T5 ],
                     chain(
                        assign(nth(T5, V(0)), nth(X, V(0))),
                        assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                        assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                        assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                     )
                  )
               )
            )
         ),
         chain(
            assign(q1, nth(T2, V(0))),
            chain(
               assign(s1, V(0.0)),
               loop(i3, [ 0 .. 1 ],
                  decl([ T8 ],
                     chain(
                        chain(
                           decl([ s2 ],
                              chain(
                                 assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                              )
                           ),
                           decl([ s3 ],
                              chain(
                                 assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                              )
                           )
                        ),
                        decl([ w1 ],
                           chain(
                              assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                              assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                           )
                        ),
                        assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                     )
                  )
               )
            )
         )
      )
   ),
   chain(
      assign(s1, s1),
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ T7 ],
   chain(
      chain(
         decl([ T3 ],
            chain(
               assign(nth(T2, V(0)), V(0.0)),
               loop(i5, [ 0 .. 2 ],
                  decl([ T4, T5 ],
                     chain(
                        assign(nth(T5, V(0)), nth(X, V(0))),
                        assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                        assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                        assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                     )
                  )
               )
            )
         ),
         chain(
            assign(q1, nth(T2, V(0))),
            chain(
               assign(s1, V(0.0)),
               loop(i3, [ 0 .. 1 ],
                  decl([ T8 ],
                     chain(
                        chain(
                           decl([ s2 ],
                              chain(
                                 assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                              )
                           ),
                           decl([ s3 ],
                              chain(
                                 assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                              )
                           )
                        ),
                        decl([ w1 ],
                           chain(
                              assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                              assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                           )
                        ),
                        assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                     )
                  )
               )
            )
         )
      ),
      chain(
         assign(s1, s1),
         chain(
            assign(w2, geq(s1, q1)),
            creturn(w2)
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      decl([ T3 ],
         chain(
            assign(nth(T2, V(0)), V(0.0)),
            loop(i5, [ 0 .. 2 ],
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                     assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                  )
               )
            )
         )
      ),
      chain(
         assign(q1, nth(T2, V(0))),
         chain(
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               decl([ T8 ],
                  chain(
                     chain(
                        decl([ s2 ],
                           chain(
                              assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                           )
                        ),
                        decl([ s3 ],
                           chain(
                              assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                           )
                        )
                     ),
                     decl([ w1 ],
                        chain(
                           assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                           assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                        )
                     ),
                     assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                  )
               )
            )
         )
      )
   ),
   chain(
      assign(s1, s1),
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ T3 ],
      chain(
         assign(nth(T2, V(0)), V(0.0)),
         loop(i5, [ 0 .. 2 ],
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                  assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
               )
            )
         )
      )
   ),
   chain(
      assign(q1, nth(T2, V(0))),
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ T8 ],
               chain(
                  chain(
                     decl([ s2 ],
                        chain(
                           assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                        )
                     ),
                     decl([ s3 ],
                        chain(
                           assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                        )
                     )
                  ),
                  decl([ w1 ],
                     chain(
                        assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  ),
                  assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
               )
            )
         )
      )
   ),
   chain(
      assign(s1, s1),
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ T3 ],
      chain(
         assign(nth(T2, V(0)), V(0.0)),
         loop(i5, [ 0 .. 2 ],
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                  assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
               )
            )
         )
      )
   ),
   chain(
      assign(q1, nth(T2, V(0))),
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ T8 ],
               chain(
                  chain(
                     decl([ s2 ],
                        chain(
                           assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                        )
                     ),
                     decl([ s3 ],
                        chain(
                           assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                        )
                     )
                  ),
                  decl([ w1 ],
                     chain(
                        assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  ),
                  assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
               )
            )
         )
      )
   ),
   chain(
      assign(s1, s1),
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      decl([ T3 ],
         chain(
            assign(nth(T2, V(0)), V(0.0)),
            loop(i5, [ 0 .. 2 ],
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                     assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                  )
               )
            )
         )
      ),
      assign(q1, nth(T2, V(0))),
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ T8 ],
               chain(
                  chain(
                     decl([ s2 ],
                        chain(
                           assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                        )
                     ),
                     decl([ s3 ],
                        chain(
                           assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                        )
                     )
                  ),
                  decl([ w1 ],
                     chain(
                        assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  ),
                  assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
               )
            )
         )
      )
   ),
   chain(
      assign(s1, s1),
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      decl([ T3 ],
         chain(
            assign(nth(T2, V(0)), V(0.0)),
            loop(i5, [ 0 .. 2 ],
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                     assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                  )
               )
            )
         )
      ),
      assign(q1, nth(T2, V(0))),
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ T8 ],
               chain(
                  chain(
                     decl([ s2 ],
                        chain(
                           assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                        )
                     ),
                     decl([ s3 ],
                        chain(
                           assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                        )
                     )
                  ),
                  decl([ w1 ],
                     chain(
                        assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  ),
                  assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
               )
            )
         )
      )
   ),
   chain(
      assign(s1, s1),
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         decl([ T3 ],
            chain(
               assign(nth(T2, V(0)), V(0.0)),
               loop(i5, [ 0 .. 2 ],
                  decl([ T4, T5 ],
                     chain(
                        assign(nth(T5, V(0)), nth(X, V(0))),
                        assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                        assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                        assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                     )
                  )
               )
            )
         ),
         assign(q1, nth(T2, V(0))),
         chain(
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               decl([ T8 ],
                  chain(
                     chain(
                        decl([ s2 ],
                           chain(
                              assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                           )
                        ),
                        decl([ s3 ],
                           chain(
                              assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                           )
                        )
                     ),
                     decl([ w1 ],
                        chain(
                           assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                           assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                        )
                     ),
                     assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                  )
               )
            )
         )
      ),
      assign(s1, s1),
      chain(
         assign(w2, geq(s1, q1)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      decl([ T3 ],
         chain(
            assign(nth(T2, V(0)), V(0.0)),
            loop(i5, [ 0 .. 2 ],
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                     assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                  )
               )
            )
         )
      ),
      assign(q1, nth(T2, V(0))),
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ T8 ],
               chain(
                  chain(
                     decl([ s2 ],
                        chain(
                           assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                        )
                     ),
                     decl([ s3 ],
                        chain(
                           assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                        )
                     )
                  ),
                  decl([ w1 ],
                     chain(
                        assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  ),
                  assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
               )
            )
         )
      )
   ),
   assign(s1, s1),
   chain(
      assign(w2, geq(s1, q1)),
      creturn(w2)
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ T3 ],
      chain(
         assign(nth(T2, V(0)), V(0.0)),
         loop(i5, [ 0 .. 2 ],
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                  assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
               )
            )
         )
      )
   ),
   assign(q1, nth(T2, V(0))),
   chain(
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         decl([ T8 ],
            chain(
               chain(
                  decl([ s2 ],
                     chain(
                        assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                     )
                  ),
                  decl([ s3 ],
                     chain(
                        assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                     )
                  )
               ),
               decl([ w1 ],
                  chain(
                     assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                     assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   ),
   assign(s1, s1),
   chain(
      assign(w2, geq(s1, q1)),
      creturn(w2)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ T3 ],
      chain(
         assign(nth(T2, V(0)), V(0.0)),
         loop(i5, [ 0 .. 2 ],
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                  assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
               )
            )
         )
      )
   ),
   assign(q1, nth(T2, V(0))),
   chain(
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         decl([ T8 ],
            chain(
               chain(
                  decl([ s2 ],
                     chain(
                        assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                     )
                  ),
                  decl([ s3 ],
                     chain(
                        assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                     )
                  )
               ),
               decl([ w1 ],
                  chain(
                     assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                     assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   ),
   assign(s1, s1),
   chain(
      assign(w2, geq(s1, q1)),
      creturn(w2)
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ T3 ],
      chain(
         assign(nth(T2, V(0)), V(0.0)),
         loop(i5, [ 0 .. 2 ],
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                  assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
               )
            )
         )
      )
   ),
   chain(
      assign(q1, nth(T2, V(0))),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         decl([ T8 ],
            chain(
               chain(
                  decl([ s2 ],
                     chain(
                        assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                     )
                  ),
                  decl([ s3 ],
                     chain(
                        assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                     )
                  )
               ),
               decl([ w1 ],
                  chain(
                     assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                     assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   ),
   assign(s1, s1),
   chain(
      assign(w2, geq(s1, q1)),
      creturn(w2)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ T3 ],
      chain(
         assign(nth(T2, V(0)), V(0.0)),
         loop(i5, [ 0 .. 2 ],
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                  assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
               )
            )
         )
      )
   ),
   chain(
      assign(q1, nth(T2, V(0))),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         decl([ T8 ],
            chain(
               chain(
                  decl([ s2 ],
                     chain(
                        assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                     )
                  ),
                  decl([ s3 ],
                     chain(
                        assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                     )
                  )
               ),
               decl([ w1 ],
                  chain(
                     assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                     assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   ),
   assign(s1, s1),
   chain(
      assign(w2, geq(s1, q1)),
      creturn(w2)
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      decl([ T3 ],
         chain(
            assign(nth(T2, V(0)), V(0.0)),
            loop(i5, [ 0 .. 2 ],
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                     assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                  )
               )
            )
         )
      ),
      assign(q1, nth(T2, V(0))),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         decl([ T8 ],
            chain(
               chain(
                  decl([ s2 ],
                     chain(
                        assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                     )
                  ),
                  decl([ s3 ],
                     chain(
                        assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                     )
                  )
               ),
               decl([ w1 ],
                  chain(
                     assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                     assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   ),
   assign(s1, s1),
   chain(
      assign(w2, geq(s1, q1)),
      creturn(w2)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      decl([ T3 ],
         chain(
            assign(nth(T2, V(0)), V(0.0)),
            loop(i5, [ 0 .. 2 ],
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                     assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                  )
               )
            )
         )
      ),
      assign(q1, nth(T2, V(0))),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         decl([ T8 ],
            chain(
               chain(
                  decl([ s2 ],
                     chain(
                        assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                     )
                  ),
                  decl([ s3 ],
                     chain(
                        assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                     )
                  )
               ),
               decl([ w1 ],
                  chain(
                     assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                     assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   ),
   assign(s1, s1),
   chain(
      assign(w2, geq(s1, q1)),
      creturn(w2)
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      decl([ T3 ],
         chain(
            assign(nth(T2, V(0)), V(0.0)),
            loop(i5, [ 0 .. 2 ],
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                     assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                  )
               )
            )
         )
      ),
      assign(q1, nth(T2, V(0))),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         decl([ T8 ],
            chain(
               chain(
                  decl([ s2 ],
                     chain(
                        assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                     )
                  ),
                  decl([ s3 ],
                     chain(
                        assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                     )
                  )
               ),
               decl([ w1 ],
                  chain(
                     assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                     assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   ),
   chain(
      assign(s1, s1),
      assign(w2, geq(s1, q1)),
      creturn(w2)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      decl([ T3 ],
         chain(
            assign(nth(T2, V(0)), V(0.0)),
            loop(i5, [ 0 .. 2 ],
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                     assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                  )
               )
            )
         )
      ),
      assign(q1, nth(T2, V(0))),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         decl([ T8 ],
            chain(
               chain(
                  decl([ s2 ],
                     chain(
                        assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                     )
                  ),
                  decl([ s3 ],
                     chain(
                        assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                     )
                  )
               ),
               decl([ w1 ],
                  chain(
                     assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                     assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   ),
   chain(
      assign(s1, s1),
      assign(w2, geq(s1, q1)),
      creturn(w2)
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         decl([ T3 ],
            chain(
               assign(nth(T2, V(0)), V(0.0)),
               loop(i5, [ 0 .. 2 ],
                  decl([ T4, T5 ],
                     chain(
                        assign(nth(T5, V(0)), nth(X, V(0))),
                        assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                        assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                        assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                     )
                  )
               )
            )
         ),
         assign(q1, nth(T2, V(0))),
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ T8 ],
               chain(
                  chain(
                     decl([ s2 ],
                        chain(
                           assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                        )
                     ),
                     decl([ s3 ],
                        chain(
                           assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                        )
                     )
                  ),
                  decl([ w1 ],
                     chain(
                        assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  ),
                  assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
               )
            )
         )
      ),
      assign(s1, s1),
      assign(w2, geq(s1, q1)),
      creturn(w2)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      decl([ T3 ],
         chain(
            assign(nth(T2, V(0)), V(0.0)),
            loop(i5, [ 0 .. 2 ],
               decl([ T4, T5 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                     assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
                  )
               )
            )
         )
      ),
      assign(q1, nth(T2, V(0))),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         decl([ T8 ],
            chain(
               chain(
                  decl([ s2 ],
                     chain(
                        assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                     )
                  ),
                  decl([ s3 ],
                     chain(
                        assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                     )
                  )
               ),
               decl([ w1 ],
                  chain(
                     assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                     assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   ),
   assign(s1, s1),
   assign(w2, geq(s1, q1)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ T3 ],
      chain(
         assign(nth(T2, V(0)), V(0.0)),
         loop(i5, [ 0 .. 2 ],
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                  assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
               )
            )
         )
      )
   ),
   assign(q1, nth(T2, V(0))),
   assign(s1, V(0.0)),
   loop(i3, [ 0 .. 1 ],
      decl([ T8 ],
         chain(
            chain(
               decl([ s2 ],
                  chain(
                     assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                  )
               ),
               decl([ s3 ],
                  chain(
                     assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                  )
               )
            ),
            decl([ w1 ],
               chain(
                  assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                  assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
               )
            ),
            assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
         )
      )
   ),
   assign(s1, s1),
   assign(w2, geq(s1, q1)),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: drop_selfassign
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ T3 ],
      chain(
         assign(nth(T2, V(0)), V(0.0)),
         loop(i5, [ 0 .. 2 ],
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                  assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
               )
            )
         )
      )
   ),
   assign(q1, nth(T2, V(0))),
   assign(s1, V(0.0)),
   loop(i3, [ 0 .. 1 ],
      decl([ T8 ],
         chain(
            chain(
               decl([ s2 ],
                  chain(
                     assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                  )
               ),
               decl([ s3 ],
                  chain(
                     assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                  )
               )
            ),
            decl([ w1 ],
               chain(
                  assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                  assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
               )
            ),
            assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
         )
      )
   ),
   assign(s1, s1),
   assign(w2, geq(s1, q1)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ T3 ],
      chain(
         assign(nth(T2, V(0)), V(0.0)),
         loop(i5, [ 0 .. 2 ],
            decl([ T4, T5 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
                  assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
               )
            )
         )
      )
   ),
   assign(q1, nth(T2, V(0))),
   assign(s1, V(0.0)),
   loop(i3, [ 0 .. 1 ],
      decl([ T8 ],
         chain(
            chain(
               decl([ s2 ],
                  chain(
                     assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                  )
               ),
               decl([ s3 ],
                  chain(
                     assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
                  )
               )
            ),
            decl([ w1 ],
               chain(
                  assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                  assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
               )
            ),
            assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
         )
      )
   ),
   assign(w2, geq(s1, q1)),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T3, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s4
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T3, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s4
------------------------------------------------------------------

------------------------------------------------------------------
RULE: scalarize1
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ T3 ],
   chain(
      assign(nth(T2, V(0)), V(0.0)),
      loop(i5, [ 0 .. 2 ],
         decl([ T4, T5 ],
            chain(
               assign(nth(T5, V(0)), nth(X, V(0))),
               assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
               assign(nth(T3, V(0)), mul(nth(T4, V(0)), nth(D, i5))),
               assign(nth(T2, V(0)), add(nth(T2, V(0)), nth(T3, V(0))))
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ s4 ],
   chain(
      assign(nth(T2, V(0)), V(0.0)),
      loop(i5, [ 0 .. 2 ],
         decl([ T4, T5 ],
            chain(
               assign(nth(T5, V(0)), nth(X, V(0))),
               assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
               assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
               assign(nth(T2, V(0)), add(nth(T2, V(0)), s4))
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: loop_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
loop(i5, [ 0 .. 2 ],
   decl([ T4, T5 ],
      chain(
         assign(nth(T5, V(0)), nth(X, V(0))),
         assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
         assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
         assign(nth(T2, V(0)), add(nth(T2, V(0)), s4))
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ T4, T5 ],
   loop(i5, [ 0 .. 2 ],
      chain(
         assign(nth(T5, V(0)), nth(X, V(0))),
         assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
         assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
         assign(nth(T2, V(0)), add(nth(T2, V(0)), s4))
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: loop_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
loop(i3, [ 0 .. 1 ],
   decl([ T8 ],
      chain(
         chain(
            decl([ s2 ],
               chain(
                  assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
               )
            ),
            decl([ s3 ],
               chain(
                  assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
               )
            )
         ),
         decl([ w1 ],
            chain(
               assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
               assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
            )
         ),
         assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ T8 ],
   loop(i3, [ 0 .. 1 ],
      chain(
         chain(
            decl([ s2 ],
               chain(
                  assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
               )
            ),
            decl([ s3 ],
               chain(
                  assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
               )
            )
         ),
         decl([ w1 ],
            chain(
               assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
               assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
            )
         ),
         assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      decl([ s2 ],
         chain(
            assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
         )
      ),
      decl([ s3 ],
         chain(
            assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
         )
      )
   ),
   decl([ w1 ],
      chain(
         assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
         assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
      )
   ),
   assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ s2 ],
      chain(
         assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
      )
   ),
   decl([ s3 ],
      chain(
         assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
      )
   ),
   decl([ w1 ],
      chain(
         assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
         assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
      )
   ),
   assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ s2 ],
      chain(
         assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
      )
   ),
   decl([ s3 ],
      chain(
         assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
      )
   ),
   decl([ w1 ],
      chain(
         assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
         assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
      )
   ),
   assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ s3 ],
      chain(
         decl([ s2 ],
            chain(
               assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
            )
         ),
         chain(
            assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
         )
      )
   ),
   decl([ w1 ],
      chain(
         assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
         assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
      )
   ),
   assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ s3 ],
      chain(
         decl([ s2 ],
            chain(
               assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
            )
         ),
         chain(
            assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
         )
      )
   ),
   decl([ w1 ],
      chain(
         assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
         assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
      )
   ),
   assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ w1 ],
      chain(
         decl([ s3 ],
            chain(
               decl([ s2 ],
                  chain(
                     assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                  )
               ),
               chain(
                  assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
               )
            )
         ),
         chain(
            assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
            assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
         )
      )
   ),
   assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ s3 ],
      chain(
         decl([ s2 ],
            chain(
               assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
            )
         ),
         chain(
            assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
         )
      )
   ),
   chain(
      assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
      assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ s3 ],
   chain(
      chain(
         decl([ s2 ],
            chain(
               assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
            )
         ),
         chain(
            assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
         )
      ),
      chain(
         assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
         assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      decl([ s2 ],
         chain(
            assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
         )
      ),
      chain(
         assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
      )
   ),
   chain(
      assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
      assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ s2 ],
      chain(
         assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
      )
   ),
   chain(
      assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
   ),
   chain(
      assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
      assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ s2 ],
      chain(
         assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
      )
   ),
   chain(
      assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
   ),
   chain(
      assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
      assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      decl([ s2 ],
         chain(
            assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
         )
      ),
      assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
   ),
   chain(
      assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
      assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      decl([ s2 ],
         chain(
            assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
         )
      ),
      assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
   ),
   chain(
      assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
      assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         decl([ s2 ],
            chain(
               assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
            )
         ),
         assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
      ),
      assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
      assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      decl([ s2 ],
         chain(
            assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
         )
      ),
      assign(nth(T8, V(1)), nth(X, add(V(3), i3)))
   ),
   assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
   assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ s2 ],
      chain(
         assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
      )
   ),
   assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
   assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
   assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: drop_unused
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ s2 ],
   chain(
      assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: decl_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ q1 ],
   decl([ s1 ],
      decl([ T2 ],
         chain(
            decl([ w2 ],
               decl([ T7 ],
                  chain(
                     chain(
                        chain(
                           decl([ s4 ],
                              chain(
                                 assign(nth(T2, V(0)), V(0.0)),
                                 decl([ T4, T5 ],
                                    loop(i5, [ 0 .. 2 ],
                                       chain(
                                          assign(nth(T5, V(0)), nth(X, V(0))),
                                          assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                                          assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                                          assign(nth(T2, V(0)), add(nth(T2, V(0)), s4))
                                       )
                                    )
                                 )
                              )
                           ),
                           assign(q1, nth(T2, V(0))),
                           assign(s1, V(0.0)),
                           decl([ T8 ],
                              loop(i3, [ 0 .. 1 ],
                                 chain(
                                    decl([ w1 ],
                                       decl([ s3 ],
                                          chain(
                                             chain(
                                                chain(
                                                   assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                                ),
                                                assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                                                assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                                assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                                             )
                                          )
                                       )
                                    ),
                                    assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                                 )
                              )
                           ),
                           assign(w2, geq(s1, q1)),
                           creturn(w2)
                        )
                     )
                  )
               )
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ q1, s1 ],
   decl([ T2 ],
      chain(
         decl([ w2 ],
            decl([ T7 ],
               chain(
                  chain(
                     chain(
                        decl([ s4 ],
                           chain(
                              assign(nth(T2, V(0)), V(0.0)),
                              decl([ T4, T5 ],
                                 loop(i5, [ 0 .. 2 ],
                                    chain(
                                       assign(nth(T5, V(0)), nth(X, V(0))),
                                       assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                                       assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                                       assign(nth(T2, V(0)), add(nth(T2, V(0)), s4))
                                    )
                                 )
                              )
                           )
                        ),
                        assign(q1, nth(T2, V(0))),
                        assign(s1, V(0.0)),
                        decl([ T8 ],
                           loop(i3, [ 0 .. 1 ],
                              chain(
                                 decl([ w1 ],
                                    decl([ s3 ],
                                       chain(
                                          chain(
                                             chain(
                                                assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                             ),
                                             assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                                             assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                             assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                                          )
                                       )
                                    )
                                 ),
                                 assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                              )
                           )
                        ),
                        assign(w2, geq(s1, q1)),
                        creturn(w2)
                     )
                  )
               )
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: decl_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ q1, s1 ],
   decl([ T2 ],
      chain(
         decl([ w2 ],
            decl([ T7 ],
               chain(
                  chain(
                     chain(
                        decl([ s4 ],
                           chain(
                              assign(nth(T2, V(0)), V(0.0)),
                              decl([ T4, T5 ],
                                 loop(i5, [ 0 .. 2 ],
                                    chain(
                                       assign(nth(T5, V(0)), nth(X, V(0))),
                                       assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                                       assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                                       assign(nth(T2, V(0)), add(nth(T2, V(0)), s4))
                                    )
                                 )
                              )
                           )
                        ),
                        assign(q1, nth(T2, V(0))),
                        assign(s1, V(0.0)),
                        decl([ T8 ],
                           loop(i3, [ 0 .. 1 ],
                              chain(
                                 decl([ w1 ],
                                    decl([ s3 ],
                                       chain(
                                          chain(
                                             chain(
                                                assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                             ),
                                             assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                                             assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                             assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                                          )
                                       )
                                    )
                                 ),
                                 assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                              )
                           )
                        ),
                        assign(w2, geq(s1, q1)),
                        creturn(w2)
                     )
                  )
               )
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ T2, q1, s1 ],
   chain(
      decl([ w2 ],
         decl([ T7 ],
            chain(
               chain(
                  chain(
                     decl([ s4 ],
                        chain(
                           assign(nth(T2, V(0)), V(0.0)),
                           decl([ T4, T5 ],
                              loop(i5, [ 0 .. 2 ],
                                 chain(
                                    assign(nth(T5, V(0)), nth(X, V(0))),
                                    assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                                    assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                                    assign(nth(T2, V(0)), add(nth(T2, V(0)), s4))
                                 )
                              )
                           )
                        )
                     ),
                     assign(q1, nth(T2, V(0))),
                     assign(s1, V(0.0)),
                     decl([ T8 ],
                        loop(i3, [ 0 .. 1 ],
                           chain(
                              decl([ w1 ],
                                 decl([ s3 ],
                                    chain(
                                       chain(
                                          chain(
                                             assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                          ),
                                          assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                                          assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                          assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                                       )
                                    )
                                 )
                              ),
                              assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                           )
                        )
                     ),
                     assign(w2, geq(s1, q1)),
                     creturn(w2)
                  )
               )
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T2, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s5
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T2, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s5
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T2, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s5
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T2, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s5
------------------------------------------------------------------

------------------------------------------------------------------
RULE: scalarize1
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ T2, q1, s1 ],
   chain(
      decl([ w2 ],
         decl([ T7 ],
            chain(
               chain(
                  chain(
                     decl([ s4 ],
                        chain(
                           assign(nth(T2, V(0)), V(0.0)),
                           decl([ T4, T5 ],
                              loop(i5, [ 0 .. 2 ],
                                 chain(
                                    assign(nth(T5, V(0)), nth(X, V(0))),
                                    assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                                    assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                                    assign(nth(T2, V(0)), add(nth(T2, V(0)), s4))
                                 )
                              )
                           )
                        )
                     ),
                     assign(q1, nth(T2, V(0))),
                     assign(s1, V(0.0)),
                     decl([ T8 ],
                        loop(i3, [ 0 .. 1 ],
                           chain(
                              decl([ w1 ],
                                 decl([ s3 ],
                                    chain(
                                       chain(
                                          chain(
                                             assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                          ),
                                          assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                                          assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                          assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                                       )
                                    )
                                 )
                              ),
                              assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                           )
                        )
                     ),
                     assign(w2, geq(s1, q1)),
                     creturn(w2)
                  )
               )
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ q1, s1, s5 ],
   chain(
      decl([ w2 ],
         decl([ T7 ],
            chain(
               chain(
                  chain(
                     decl([ s4 ],
                        chain(
                           assign(s5, V(0.0)),
                           decl([ T4, T5 ],
                              loop(i5, [ 0 .. 2 ],
                                 chain(
                                    assign(nth(T5, V(0)), nth(X, V(0))),
                                    assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                                    assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                                    assign(s5, add(s5, s4))
                                 )
                              )
                           )
                        )
                     ),
                     assign(q1, s5),
                     assign(s1, V(0.0)),
                     decl([ T8 ],
                        loop(i3, [ 0 .. 1 ],
                           chain(
                              decl([ w1 ],
                                 decl([ s3 ],
                                    chain(
                                       chain(
                                          chain(
                                             assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                          ),
                                          assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                                          assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                          assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                                       )
                                    )
                                 )
                              ),
                              assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                           )
                        )
                     ),
                     assign(w2, geq(s1, q1)),
                     creturn(w2)
                  )
               )
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: copyprop_var_var
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ q1, s1, s5 ],
   chain(
      decl([ w2 ],
         decl([ T7 ],
            chain(
               chain(
                  chain(
                     decl([ s4 ],
                        chain(
                           assign(s5, V(0.0)),
                           decl([ T4, T5 ],
                              loop(i5, [ 0 .. 2 ],
                                 chain(
                                    assign(nth(T5, V(0)), nth(X, V(0))),
                                    assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                                    assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                                    assign(s5, add(s5, s4))
                                 )
                              )
                           )
                        )
                     ),
                     assign(q1, s5),
                     assign(s1, V(0.0)),
                     decl([ T8 ],
                        loop(i3, [ 0 .. 1 ],
                           chain(
                              decl([ w1 ],
                                 decl([ s3 ],
                                    chain(
                                       chain(
                                          chain(
                                             assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                          ),
                                          assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                                          assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                          assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                                       )
                                    )
                                 )
                              ),
                              assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                           )
                        )
                     ),
                     assign(w2, geq(s1, q1)),
                     creturn(w2)
                  )
               )
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ s1, s5 ],
   chain(
      decl([ w2 ],
         decl([ T7 ],
            chain(
               chain(
                  chain(
                     decl([ s4 ],
                        chain(
                           assign(s5, V(0.0)),
                           decl([ T4, T5 ],
                              loop(i5, [ 0 .. 2 ],
                                 chain(
                                    assign(nth(T5, V(0)), nth(X, V(0))),
                                    assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                                    assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                                    assign(s5, add(s5, s4))
                                 )
                              )
                           )
                        )
                     ),
                     assign(s5, s5),
                     assign(s1, V(0.0)),
                     decl([ T8 ],
                        loop(i3, [ 0 .. 1 ],
                           chain(
                              decl([ w1 ],
                                 decl([ s3 ],
                                    chain(
                                       chain(
                                          chain(
                                             assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                          ),
                                          assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                                          assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                          assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                                       )
                                    )
                                 )
                              ),
                              assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                           )
                        )
                     ),
                     assign(w2, geq(s1, s5)),
                     creturn(w2)
                  )
               )
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ w2 ],
      decl([ T7 ],
         chain(
            chain(
               chain(
                  decl([ s4 ],
                     chain(
                        assign(s5, V(0.0)),
                        decl([ T4, T5 ],
                           loop(i5, [ 0 .. 2 ],
                              chain(
                                 assign(nth(T5, V(0)), nth(X, V(0))),
                                 assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                                 assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                                 assign(s5, add(s5, s4))
                              )
                           )
                        )
                     )
                  ),
                  assign(s5, s5),
                  assign(s1, V(0.0)),
                  decl([ T8 ],
                     loop(i3, [ 0 .. 1 ],
                        chain(
                           decl([ w1 ],
                              decl([ s3 ],
                                 chain(
                                    chain(
                                       chain(
                                          assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                       ),
                                       assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                                       assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                       assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                                    )
                                 )
                              )
                           ),
                           assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                        )
                     )
                  ),
                  assign(w2, geq(s1, s5)),
                  creturn(w2)
               )
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ w2 ],
   chain(
      decl([ T7 ],
         chain(
            chain(
               chain(
                  decl([ s4 ],
                     chain(
                        assign(s5, V(0.0)),
                        decl([ T4, T5 ],
                           loop(i5, [ 0 .. 2 ],
                              chain(
                                 assign(nth(T5, V(0)), nth(X, V(0))),
                                 assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                                 assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                                 assign(s5, add(s5, s4))
                              )
                           )
                        )
                     )
                  ),
                  assign(s5, s5),
                  assign(s1, V(0.0)),
                  decl([ T8 ],
                     loop(i3, [ 0 .. 1 ],
                        chain(
                           decl([ w1 ],
                              decl([ s3 ],
                                 chain(
                                    chain(
                                       chain(
                                          assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                       ),
                                       assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                                       assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                       assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                                    )
                                 )
                              )
                           ),
                           assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                        )
                     )
                  ),
                  assign(w2, geq(s1, s5)),
                  creturn(w2)
               )
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ T7 ],
      chain(
         chain(
            chain(
               decl([ s4 ],
                  chain(
                     assign(s5, V(0.0)),
                     decl([ T4, T5 ],
                        loop(i5, [ 0 .. 2 ],
                           chain(
                              assign(nth(T5, V(0)), nth(X, V(0))),
                              assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                              assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                              assign(s5, add(s5, s4))
                           )
                        )
                     )
                  )
               ),
               assign(s5, s5),
               assign(s1, V(0.0)),
               decl([ T8 ],
                  loop(i3, [ 0 .. 1 ],
                     chain(
                        decl([ w1 ],
                           decl([ s3 ],
                              chain(
                                 chain(
                                    chain(
                                       assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                    ),
                                    assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                                    assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                    assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                                 )
                              )
                           )
                        ),
                        assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                     )
                  )
               ),
               assign(w2, geq(s1, s5)),
               creturn(w2)
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ T7 ],
   chain(
      chain(
         chain(
            chain(
               decl([ s4 ],
                  chain(
                     assign(s5, V(0.0)),
                     decl([ T4, T5 ],
                        loop(i5, [ 0 .. 2 ],
                           chain(
                              assign(nth(T5, V(0)), nth(X, V(0))),
                              assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                              assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                              assign(s5, add(s5, s4))
                           )
                        )
                     )
                  )
               ),
               assign(s5, s5),
               assign(s1, V(0.0)),
               decl([ T8 ],
                  loop(i3, [ 0 .. 1 ],
                     chain(
                        decl([ w1 ],
                           decl([ s3 ],
                              chain(
                                 chain(
                                    chain(
                                       assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                    ),
                                    assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                                    assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                    assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                                 )
                              )
                           )
                        ),
                        assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                     )
                  )
               ),
               assign(w2, geq(s1, s5)),
               creturn(w2)
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         chain(
            decl([ s4 ],
               chain(
                  assign(s5, V(0.0)),
                  decl([ T4, T5 ],
                     loop(i5, [ 0 .. 2 ],
                        chain(
                           assign(nth(T5, V(0)), nth(X, V(0))),
                           assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                           assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                           assign(s5, add(s5, s4))
                        )
                     )
                  )
               )
            ),
            assign(s5, s5),
            assign(s1, V(0.0)),
            decl([ T8 ],
               loop(i3, [ 0 .. 1 ],
                  chain(
                     decl([ w1 ],
                        decl([ s3 ],
                           chain(
                              chain(
                                 chain(
                                    assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                 ),
                                 assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                                 assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                 assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                              )
                           )
                        )
                     ),
                     assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                  )
               )
            ),
            assign(w2, geq(s1, s5)),
            creturn(w2)
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         decl([ s4 ],
            chain(
               assign(s5, V(0.0)),
               decl([ T4, T5 ],
                  loop(i5, [ 0 .. 2 ],
                     chain(
                        assign(nth(T5, V(0)), nth(X, V(0))),
                        assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                        assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                        assign(s5, add(s5, s4))
                     )
                  )
               )
            )
         ),
         assign(s5, s5),
         assign(s1, V(0.0)),
         decl([ T8 ],
            loop(i3, [ 0 .. 1 ],
               chain(
                  decl([ w1 ],
                     decl([ s3 ],
                        chain(
                           chain(
                              chain(
                                 assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                              ),
                              assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                              assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                              assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                           )
                        )
                     )
                  ),
                  assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
               )
            )
         ),
         assign(w2, geq(s1, s5)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         decl([ s4 ],
            chain(
               assign(s5, V(0.0)),
               decl([ T4, T5 ],
                  loop(i5, [ 0 .. 2 ],
                     chain(
                        assign(nth(T5, V(0)), nth(X, V(0))),
                        assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                        assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                        assign(s5, add(s5, s4))
                     )
                  )
               )
            )
         ),
         assign(s5, s5),
         assign(s1, V(0.0)),
         decl([ T8 ],
            loop(i3, [ 0 .. 1 ],
               chain(
                  decl([ w1 ],
                     decl([ s3 ],
                        chain(
                           chain(
                              chain(
                                 assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                              ),
                              assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                              assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                              assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                           )
                        )
                     )
                  ),
                  assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
               )
            )
         ),
         assign(w2, geq(s1, s5)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      decl([ s4 ],
         chain(
            assign(s5, V(0.0)),
            decl([ T4, T5 ],
               loop(i5, [ 0 .. 2 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                     assign(s5, add(s5, s4))
                  )
               )
            )
         )
      ),
      assign(s5, s5),
      assign(s1, V(0.0)),
      decl([ T8 ],
         loop(i3, [ 0 .. 1 ],
            chain(
               decl([ w1 ],
                  decl([ s3 ],
                     chain(
                        chain(
                           chain(
                              assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                           ),
                           assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                           assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                           assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                        )
                     )
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      ),
      assign(w2, geq(s1, s5)),
      creturn(w2)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      decl([ s4 ],
         chain(
            assign(s5, V(0.0)),
            decl([ T4, T5 ],
               loop(i5, [ 0 .. 2 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                     assign(s5, add(s5, s4))
                  )
               )
            )
         )
      ),
      assign(s5, s5),
      assign(s1, V(0.0)),
      decl([ T8 ],
         loop(i3, [ 0 .. 1 ],
            chain(
               decl([ w1 ],
                  decl([ s3 ],
                     chain(
                        chain(
                           chain(
                              assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                           ),
                           assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                           assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                           assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                        )
                     )
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      ),
      assign(w2, geq(s1, s5)),
      creturn(w2)
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ s4 ],
      chain(
         assign(s5, V(0.0)),
         decl([ T4, T5 ],
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                  assign(s5, add(s5, s4))
               )
            )
         )
      )
   ),
   assign(s5, s5),
   assign(s1, V(0.0)),
   decl([ T8 ],
      loop(i3, [ 0 .. 1 ],
         chain(
            decl([ w1 ],
               decl([ s3 ],
                  chain(
                     chain(
                        chain(
                           assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                        ),
                        assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                        assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  )
               )
            ),
            assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ s4 ],
      chain(
         assign(s5, V(0.0)),
         decl([ T4, T5 ],
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                  assign(s5, add(s5, s4))
               )
            )
         )
      )
   ),
   assign(s5, s5),
   assign(s1, V(0.0)),
   decl([ T8 ],
      loop(i3, [ 0 .. 1 ],
         chain(
            decl([ w1 ],
               decl([ s3 ],
                  chain(
                     chain(
                        chain(
                           assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                        ),
                        assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                        assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  )
               )
            ),
            assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ s4 ],
      chain(
         assign(s5, V(0.0)),
         decl([ T4, T5 ],
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                  assign(s5, add(s5, s4))
               )
            )
         )
      )
   ),
   assign(s5, s5),
   decl([ T8 ],
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               decl([ w1 ],
                  decl([ s3 ],
                     chain(
                        chain(
                           chain(
                              assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                           ),
                           assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                           assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                           assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                        )
                     )
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ s4 ],
      chain(
         assign(s5, V(0.0)),
         decl([ T4, T5 ],
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                  assign(s5, add(s5, s4))
               )
            )
         )
      )
   ),
   assign(s5, s5),
   decl([ T8 ],
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               decl([ w1 ],
                  decl([ s3 ],
                     chain(
                        chain(
                           chain(
                              assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                           ),
                           assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                           assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                           assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                        )
                     )
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ s4 ],
      chain(
         assign(s5, V(0.0)),
         decl([ T4, T5 ],
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                  assign(s5, add(s5, s4))
               )
            )
         )
      )
   ),
   decl([ T8 ],
      chain(
         assign(s5, s5),
         chain(
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               chain(
                  decl([ w1 ],
                     decl([ s3 ],
                        chain(
                           chain(
                              chain(
                                 assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                              ),
                              assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                              assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                              assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                           )
                        )
                     )
                  ),
                  assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ s4 ],
      chain(
         assign(s5, V(0.0)),
         decl([ T4, T5 ],
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                  assign(s5, add(s5, s4))
               )
            )
         )
      )
   ),
   decl([ T8 ],
      chain(
         assign(s5, s5),
         chain(
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               chain(
                  decl([ w1 ],
                     decl([ s3 ],
                        chain(
                           chain(
                              chain(
                                 assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                              ),
                              assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                              assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                              assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                           )
                        )
                     )
                  ),
                  assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ T8 ],
      chain(
         decl([ s4 ],
            chain(
               assign(s5, V(0.0)),
               decl([ T4, T5 ],
                  loop(i5, [ 0 .. 2 ],
                     chain(
                        assign(nth(T5, V(0)), nth(X, V(0))),
                        assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                        assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                        assign(s5, add(s5, s4))
                     )
                  )
               )
            )
         ),
         chain(
            assign(s5, s5),
            chain(
               assign(s1, V(0.0)),
               loop(i3, [ 0 .. 1 ],
                  chain(
                     decl([ w1 ],
                        decl([ s3 ],
                           chain(
                              chain(
                                 chain(
                                    assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                                 ),
                                 assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                                 assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                                 assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                              )
                           )
                        )
                     ),
                     assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                  )
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T8, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
q3
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T8, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
q3
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T8, V(1))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
q4
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T8, V(1))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
q4
------------------------------------------------------------------

------------------------------------------------------------------
RULE: scalarize_const
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ T8 ],
   chain(
      decl([ s4 ],
         chain(
            assign(s5, V(0.0)),
            decl([ T4, T5 ],
               loop(i5, [ 0 .. 2 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                     assign(s5, add(s5, s4))
                  )
               )
            )
         )
      ),
      chain(
         assign(s5, s5),
         chain(
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               chain(
                  decl([ w1 ],
                     decl([ s3 ],
                        chain(
                           chain(
                              chain(
                                 assign(nth(T8, V(0)), nth(X, add(i3, V(1))))
                              ),
                              assign(nth(T8, V(1)), nth(X, add(V(3), i3))),
                              assign(w1, sub(nth(T8, V(0)), nth(T8, V(1)))),
                              assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                           )
                        )
                     )
                  ),
                  assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
               )
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ q3, q4 ],
   chain(
      decl([ s4 ],
         chain(
            assign(s5, V(0.0)),
            decl([ T4, T5 ],
               loop(i5, [ 0 .. 2 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                     assign(s5, add(s5, s4))
                  )
               )
            )
         )
      ),
      chain(
         assign(s5, s5),
         chain(
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               chain(
                  decl([ w1 ],
                     decl([ s3 ],
                        chain(
                           chain(
                              chain(
                                 assign(q3, nth(X, add(i3, V(1))))
                              ),
                              assign(q4, nth(X, add(V(3), i3))),
                              assign(w1, sub(q3, q4)),
                              assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                           )
                        )
                     )
                  ),
                  assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
               )
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ s4 ],
      chain(
         assign(s5, V(0.0)),
         decl([ T4, T5 ],
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                  assign(s5, add(s5, s4))
               )
            )
         )
      )
   ),
   chain(
      assign(s5, s5),
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               decl([ w1 ],
                  decl([ s3 ],
                     chain(
                        chain(
                           chain(
                              assign(q3, nth(X, add(i3, V(1))))
                           ),
                           assign(q4, nth(X, add(V(3), i3))),
                           assign(w1, sub(q3, q4)),
                           assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                        )
                     )
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ s4 ],
   chain(
      chain(
         assign(s5, V(0.0)),
         decl([ T4, T5 ],
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                  assign(s5, add(s5, s4))
               )
            )
         )
      ),
      chain(
         assign(s5, s5),
         chain(
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               chain(
                  decl([ w1 ],
                     decl([ s3 ],
                        chain(
                           chain(
                              chain(
                                 assign(q3, nth(X, add(i3, V(1))))
                              ),
                              assign(q4, nth(X, add(V(3), i3))),
                              assign(w1, sub(q3, q4)),
                              assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                           )
                        )
                     )
                  ),
                  assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
               )
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      decl([ T4, T5 ],
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(nth(T5, V(0)), nth(X, V(0))),
               assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
               assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
               assign(s5, add(s5, s4))
            )
         )
      )
   ),
   chain(
      assign(s5, s5),
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               decl([ w1 ],
                  decl([ s3 ],
                     chain(
                        chain(
                           chain(
                              assign(q3, nth(X, add(i3, V(1))))
                           ),
                           assign(q4, nth(X, add(V(3), i3))),
                           assign(w1, sub(q3, q4)),
                           assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                        )
                     )
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   decl([ T4, T5 ],
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(nth(T5, V(0)), nth(X, V(0))),
            assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
            assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
            assign(s5, add(s5, s4))
         )
      )
   ),
   chain(
      assign(s5, s5),
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               decl([ w1 ],
                  decl([ s3 ],
                     chain(
                        chain(
                           chain(
                              assign(q3, nth(X, add(i3, V(1))))
                           ),
                           assign(q4, nth(X, add(V(3), i3))),
                           assign(w1, sub(q3, q4)),
                           assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                        )
                     )
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   decl([ T4, T5 ],
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(nth(T5, V(0)), nth(X, V(0))),
            assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
            assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
            assign(s5, add(s5, s4))
         )
      )
   ),
   chain(
      assign(s5, s5),
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               decl([ w1 ],
                  decl([ s3 ],
                     chain(
                        chain(
                           chain(
                              assign(q3, nth(X, add(i3, V(1))))
                           ),
                           assign(q4, nth(X, add(V(3), i3))),
                           assign(w1, sub(q3, q4)),
                           assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                        )
                     )
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ T4, T5 ],
      chain(
         assign(s5, V(0.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(nth(T5, V(0)), nth(X, V(0))),
               assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
               assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
               assign(s5, add(s5, s4))
            )
         )
      )
   ),
   chain(
      assign(s5, s5),
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               decl([ w1 ],
                  decl([ s3 ],
                     chain(
                        chain(
                           chain(
                              assign(q3, nth(X, add(i3, V(1))))
                           ),
                           assign(q4, nth(X, add(V(3), i3))),
                           assign(w1, sub(q3, q4)),
                           assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                        )
                     )
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ T4, T5 ],
      chain(
         assign(s5, V(0.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(nth(T5, V(0)), nth(X, V(0))),
               assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
               assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
               assign(s5, add(s5, s4))
            )
         )
      )
   ),
   chain(
      assign(s5, s5),
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               decl([ w1 ],
                  decl([ s3 ],
                     chain(
                        chain(
                           chain(
                              assign(q3, nth(X, add(i3, V(1))))
                           ),
                           assign(q4, nth(X, add(V(3), i3))),
                           assign(w1, sub(q3, q4)),
                           assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                        )
                     )
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      decl([ T4, T5 ],
         chain(
            assign(s5, V(0.0)),
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                  assign(s5, add(s5, s4))
               )
            )
         )
      ),
      assign(s5, s5),
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               decl([ w1 ],
                  decl([ s3 ],
                     chain(
                        chain(
                           chain(
                              assign(q3, nth(X, add(i3, V(1))))
                           ),
                           assign(q4, nth(X, add(V(3), i3))),
                           assign(w1, sub(q3, q4)),
                           assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                        )
                     )
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ T4, T5 ],
      chain(
         assign(s5, V(0.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(nth(T5, V(0)), nth(X, V(0))),
               assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
               assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
               assign(s5, add(s5, s4))
            )
         )
      )
   ),
   assign(s5, s5),
   chain(
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            decl([ w1 ],
               decl([ s3 ],
                  chain(
                     chain(
                        chain(
                           assign(q3, nth(X, add(i3, V(1))))
                        ),
                        assign(q4, nth(X, add(V(3), i3))),
                        assign(w1, sub(q3, q4)),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  )
               )
            ),
            assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ T4, T5 ],
   chain(
      chain(
         assign(s5, V(0.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(nth(T5, V(0)), nth(X, V(0))),
               assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
               assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
               assign(s5, add(s5, s4))
            )
         )
      ),
      assign(s5, s5),
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               decl([ w1 ],
                  decl([ s3 ],
                     chain(
                        chain(
                           chain(
                              assign(q3, nth(X, add(i3, V(1))))
                           ),
                           assign(q4, nth(X, add(V(3), i3))),
                           assign(w1, sub(q3, q4)),
                           assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                        )
                     )
                  )
               ),
               assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(nth(T5, V(0)), nth(X, V(0))),
            assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
            assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
            assign(s5, add(s5, s4))
         )
      )
   ),
   assign(s5, s5),
   chain(
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            decl([ w1 ],
               decl([ s3 ],
                  chain(
                     chain(
                        chain(
                           assign(q3, nth(X, add(i3, V(1))))
                        ),
                        assign(q4, nth(X, add(V(3), i3))),
                        assign(w1, sub(q3, q4)),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  )
               )
            ),
            assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   loop(i5, [ 0 .. 2 ],
      chain(
         assign(nth(T5, V(0)), nth(X, V(0))),
         assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
         assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
         assign(s5, add(s5, s4))
      )
   ),
   assign(s5, s5),
   chain(
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            decl([ w1 ],
               decl([ s3 ],
                  chain(
                     chain(
                        chain(
                           assign(q3, nth(X, add(i3, V(1))))
                        ),
                        assign(q4, nth(X, add(V(3), i3))),
                        assign(w1, sub(q3, q4)),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  )
               )
            ),
            assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   loop(i5, [ 0 .. 2 ],
      chain(
         assign(nth(T5, V(0)), nth(X, V(0))),
         assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
         assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
         assign(s5, add(s5, s4))
      )
   ),
   assign(s5, s5),
   chain(
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            decl([ w1 ],
               decl([ s3 ],
                  chain(
                     chain(
                        chain(
                           assign(q3, nth(X, add(i3, V(1))))
                        ),
                        assign(q4, nth(X, add(V(3), i3))),
                        assign(w1, sub(q3, q4)),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  )
               )
            ),
            assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   loop(i5, [ 0 .. 2 ],
      chain(
         assign(nth(T5, V(0)), nth(X, V(0))),
         assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
         assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
         assign(s5, add(s5, s4))
      )
   ),
   chain(
      assign(s5, s5),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            decl([ w1 ],
               decl([ s3 ],
                  chain(
                     chain(
                        chain(
                           assign(q3, nth(X, add(i3, V(1))))
                        ),
                        assign(q4, nth(X, add(V(3), i3))),
                        assign(w1, sub(q3, q4)),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  )
               )
            ),
            assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   loop(i5, [ 0 .. 2 ],
      chain(
         assign(nth(T5, V(0)), nth(X, V(0))),
         assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
         assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
         assign(s5, add(s5, s4))
      )
   ),
   chain(
      assign(s5, s5),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            decl([ w1 ],
               decl([ s3 ],
                  chain(
                     chain(
                        chain(
                           assign(q3, nth(X, add(i3, V(1))))
                        ),
                        assign(q4, nth(X, add(V(3), i3))),
                        assign(w1, sub(q3, q4)),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  )
               )
            ),
            assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   chain(
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(nth(T5, V(0)), nth(X, V(0))),
            assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
            assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
            assign(s5, add(s5, s4))
         )
      ),
      assign(s5, s5),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            decl([ w1 ],
               decl([ s3 ],
                  chain(
                     chain(
                        chain(
                           assign(q3, nth(X, add(i3, V(1))))
                        ),
                        assign(q4, nth(X, add(V(3), i3))),
                        assign(w1, sub(q3, q4)),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  )
               )
            ),
            assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   chain(
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(nth(T5, V(0)), nth(X, V(0))),
            assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
            assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
            assign(s5, add(s5, s4))
         )
      ),
      assign(s5, s5),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            decl([ w1 ],
               decl([ s3 ],
                  chain(
                     chain(
                        chain(
                           assign(q3, nth(X, add(i3, V(1))))
                        ),
                        assign(q4, nth(X, add(V(3), i3))),
                        assign(w1, sub(q3, q4)),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  )
               )
            ),
            assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(nth(T5, V(0)), nth(X, V(0))),
            assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
            assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
            assign(s5, add(s5, s4))
         )
      ),
      assign(s5, s5),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            decl([ w1 ],
               decl([ s3 ],
                  chain(
                     chain(
                        chain(
                           assign(q3, nth(X, add(i3, V(1))))
                        ),
                        assign(q4, nth(X, add(V(3), i3))),
                        assign(w1, sub(q3, q4)),
                        assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                     )
                  )
               )
            ),
            assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: drop_selfassign
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   loop(i5, [ 0 .. 2 ],
      chain(
         assign(nth(T5, V(0)), nth(X, V(0))),
         assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
         assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
         assign(s5, add(s5, s4))
      )
   ),
   assign(s5, s5),
   assign(s1, V(0.0)),
   loop(i3, [ 0 .. 1 ],
      chain(
         decl([ w1 ],
            decl([ s3 ],
               chain(
                  chain(
                     chain(
                        assign(q3, nth(X, add(i3, V(1))))
                     ),
                     assign(q4, nth(X, add(V(3), i3))),
                     assign(w1, sub(q3, q4)),
                     assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                  )
               )
            )
         ),
         assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   loop(i5, [ 0 .. 2 ],
      chain(
         assign(nth(T5, V(0)), nth(X, V(0))),
         assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
         assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
         assign(s5, add(s5, s4))
      )
   ),
   assign(s1, V(0.0)),
   loop(i3, [ 0 .. 1 ],
      chain(
         decl([ w1 ],
            decl([ s3 ],
               chain(
                  chain(
                     chain(
                        assign(q3, nth(X, add(i3, V(1))))
                     ),
                     assign(q4, nth(X, add(V(3), i3))),
                     assign(w1, sub(q3, q4)),
                     assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
                  )
               )
            )
         ),
         assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ w1 ],
      decl([ s3 ],
         chain(
            chain(
               chain(
                  assign(q3, nth(X, add(i3, V(1))))
               ),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
            )
         )
      )
   ),
   assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ w1 ],
   chain(
      decl([ s3 ],
         chain(
            chain(
               chain(
                  assign(q3, nth(X, add(i3, V(1))))
               ),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
            )
         )
      ),
      assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ s3 ],
      chain(
         chain(
            chain(
               assign(q3, nth(X, add(i3, V(1))))
            ),
            assign(q4, nth(X, add(V(3), i3))),
            assign(w1, sub(q3, q4)),
            assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
         )
      )
   ),
   assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ s3 ],
   chain(
      chain(
         chain(
            chain(
               assign(q3, nth(X, add(i3, V(1))))
            ),
            assign(q4, nth(X, add(V(3), i3))),
            assign(w1, sub(q3, q4)),
            assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
         )
      ),
      assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         chain(
            assign(q3, nth(X, add(i3, V(1))))
         ),
         assign(q4, nth(X, add(V(3), i3))),
         assign(w1, sub(q3, q4)),
         assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
      )
   ),
   assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         assign(q3, nth(X, add(i3, V(1))))
      ),
      assign(q4, nth(X, add(V(3), i3))),
      assign(w1, sub(q3, q4)),
      assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
   ),
   assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         assign(q3, nth(X, add(i3, V(1))))
      ),
      assign(q4, nth(X, add(V(3), i3))),
      assign(w1, sub(q3, q4)),
      assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1)))
   ),
   assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(q3, nth(X, add(i3, V(1))))
   ),
   assign(q4, nth(X, add(V(3), i3))),
   assign(w1, sub(q3, q4)),
   assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1))),
   assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(q3, nth(X, add(i3, V(1))))
   ),
   assign(q4, nth(X, add(V(3), i3))),
   assign(w1, sub(q3, q4)),
   assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1))),
   assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(q3, nth(X, add(i3, V(1)))),
   assign(q4, nth(X, add(V(3), i3))),
   assign(w1, sub(q3, q4)),
   assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1))),
   assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: decl_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ s1, s5 ],
   decl([ w2 ],
      decl([ T7 ],
         chain(
            decl([ q3, q4 ],
               decl([ s4 ],
                  chain(
                     decl([ T4, T5 ],
                        chain(
                           chain(
                              assign(s5, V(0.0)),
                              loop(i5, [ 0 .. 2 ],
                                 chain(
                                    assign(nth(T5, V(0)), nth(X, V(0))),
                                    assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                                    assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                                    assign(s5, add(s5, s4))
                                 )
                              ),
                              assign(s1, V(0.0)),
                              loop(i3, [ 0 .. 1 ],
                                 decl([ w1 ],
                                    decl([ s3 ],
                                       chain(
                                          assign(q3, nth(X, add(i3, V(1)))),
                                          assign(q4, nth(X, add(V(3), i3))),
                                          assign(w1, sub(q3, q4)),
                                          assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1))),
                                          assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            ),
            assign(w2, geq(s1, s5)),
            creturn(w2)
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ s1, s5, w2 ],
   decl([ T7 ],
      chain(
         decl([ q3, q4 ],
            decl([ s4 ],
               chain(
                  decl([ T4, T5 ],
                     chain(
                        chain(
                           assign(s5, V(0.0)),
                           loop(i5, [ 0 .. 2 ],
                              chain(
                                 assign(nth(T5, V(0)), nth(X, V(0))),
                                 assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                                 assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                                 assign(s5, add(s5, s4))
                              )
                           ),
                           assign(s1, V(0.0)),
                           loop(i3, [ 0 .. 1 ],
                              decl([ w1 ],
                                 decl([ s3 ],
                                    chain(
                                       assign(q3, nth(X, add(i3, V(1)))),
                                       assign(q4, nth(X, add(V(3), i3))),
                                       assign(w1, sub(q3, q4)),
                                       assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1))),
                                       assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         ),
         assign(w2, geq(s1, s5)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: decl_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ s1, s5, w2 ],
   decl([ T7 ],
      chain(
         decl([ q3, q4 ],
            decl([ s4 ],
               chain(
                  decl([ T4, T5 ],
                     chain(
                        chain(
                           assign(s5, V(0.0)),
                           loop(i5, [ 0 .. 2 ],
                              chain(
                                 assign(nth(T5, V(0)), nth(X, V(0))),
                                 assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                                 assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                                 assign(s5, add(s5, s4))
                              )
                           ),
                           assign(s1, V(0.0)),
                           loop(i3, [ 0 .. 1 ],
                              decl([ w1 ],
                                 decl([ s3 ],
                                    chain(
                                       assign(q3, nth(X, add(i3, V(1)))),
                                       assign(q4, nth(X, add(V(3), i3))),
                                       assign(w1, sub(q3, q4)),
                                       assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1))),
                                       assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         ),
         assign(w2, geq(s1, s5)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ T7, s1, s5, w2 ],
   chain(
      decl([ q3, q4 ],
         decl([ s4 ],
            chain(
               decl([ T4, T5 ],
                  chain(
                     chain(
                        assign(s5, V(0.0)),
                        loop(i5, [ 0 .. 2 ],
                           chain(
                              assign(nth(T5, V(0)), nth(X, V(0))),
                              assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                              assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                              assign(s5, add(s5, s4))
                           )
                        ),
                        assign(s1, V(0.0)),
                        loop(i3, [ 0 .. 1 ],
                           decl([ w1 ],
                              decl([ s3 ],
                                 chain(
                                    assign(q3, nth(X, add(i3, V(1)))),
                                    assign(q4, nth(X, add(V(3), i3))),
                                    assign(w1, sub(q3, q4)),
                                    assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1))),
                                    assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      ),
      assign(w2, geq(s1, s5)),
      creturn(w2)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T7, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s6
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T7, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s6
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T7, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s6
------------------------------------------------------------------

------------------------------------------------------------------
RULE: scalarize1
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ T7, s1, s5, w2 ],
   chain(
      decl([ q3, q4 ],
         decl([ s4 ],
            chain(
               decl([ T4, T5 ],
                  chain(
                     chain(
                        assign(s5, V(0.0)),
                        loop(i5, [ 0 .. 2 ],
                           chain(
                              assign(nth(T5, V(0)), nth(X, V(0))),
                              assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                              assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                              assign(s5, add(s5, s4))
                           )
                        ),
                        assign(s1, V(0.0)),
                        loop(i3, [ 0 .. 1 ],
                           decl([ w1 ],
                              decl([ s3 ],
                                 chain(
                                    assign(q3, nth(X, add(i3, V(1)))),
                                    assign(q4, nth(X, add(V(3), i3))),
                                    assign(w1, sub(q3, q4)),
                                    assign(nth(T7, V(0)), cond(geq(w1, V(0)), w1, neg(w1))),
                                    assign(s1, cond(geq(s1, nth(T7, V(0))), s1, nth(T7, V(0))))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      ),
      assign(w2, geq(s1, s5)),
      creturn(w2)
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ s1, s5, s6, w2 ],
   chain(
      decl([ q3, q4 ],
         decl([ s4 ],
            chain(
               decl([ T4, T5 ],
                  chain(
                     chain(
                        assign(s5, V(0.0)),
                        loop(i5, [ 0 .. 2 ],
                           chain(
                              assign(nth(T5, V(0)), nth(X, V(0))),
                              assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                              assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                              assign(s5, add(s5, s4))
                           )
                        ),
                        assign(s1, V(0.0)),
                        loop(i3, [ 0 .. 1 ],
                           decl([ w1 ],
                              decl([ s3 ],
                                 chain(
                                    assign(q3, nth(X, add(i3, V(1)))),
                                    assign(q4, nth(X, add(V(3), i3))),
                                    assign(w1, sub(q3, q4)),
                                    assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                                    assign(s1, cond(geq(s1, s6), s1, s6))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      ),
      assign(w2, geq(s1, s5)),
      creturn(w2)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ q3, q4 ],
      decl([ s4 ],
         chain(
            decl([ T4, T5 ],
               chain(
                  chain(
                     assign(s5, V(0.0)),
                     loop(i5, [ 0 .. 2 ],
                        chain(
                           assign(nth(T5, V(0)), nth(X, V(0))),
                           assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                           assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                           assign(s5, add(s5, s4))
                        )
                     ),
                     assign(s1, V(0.0)),
                     loop(i3, [ 0 .. 1 ],
                        decl([ w1 ],
                           decl([ s3 ],
                              chain(
                                 assign(q3, nth(X, add(i3, V(1)))),
                                 assign(q4, nth(X, add(V(3), i3))),
                                 assign(w1, sub(q3, q4)),
                                 assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                                 assign(s1, cond(geq(s1, s6), s1, s6))
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ q3, q4 ],
   chain(
      decl([ s4 ],
         chain(
            decl([ T4, T5 ],
               chain(
                  chain(
                     assign(s5, V(0.0)),
                     loop(i5, [ 0 .. 2 ],
                        chain(
                           assign(nth(T5, V(0)), nth(X, V(0))),
                           assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                           assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                           assign(s5, add(s5, s4))
                        )
                     ),
                     assign(s1, V(0.0)),
                     loop(i3, [ 0 .. 1 ],
                        decl([ w1 ],
                           decl([ s3 ],
                              chain(
                                 assign(q3, nth(X, add(i3, V(1)))),
                                 assign(q4, nth(X, add(V(3), i3))),
                                 assign(w1, sub(q3, q4)),
                                 assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                                 assign(s1, cond(geq(s1, s6), s1, s6))
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      ),
      assign(w2, geq(s1, s5)),
      creturn(w2)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ s4 ],
      chain(
         decl([ T4, T5 ],
            chain(
               chain(
                  assign(s5, V(0.0)),
                  loop(i5, [ 0 .. 2 ],
                     chain(
                        assign(nth(T5, V(0)), nth(X, V(0))),
                        assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                        assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                        assign(s5, add(s5, s4))
                     )
                  ),
                  assign(s1, V(0.0)),
                  loop(i3, [ 0 .. 1 ],
                     decl([ w1 ],
                        decl([ s3 ],
                           chain(
                              assign(q3, nth(X, add(i3, V(1)))),
                              assign(q4, nth(X, add(V(3), i3))),
                              assign(w1, sub(q3, q4)),
                              assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                              assign(s1, cond(geq(s1, s6), s1, s6))
                           )
                        )
                     )
                  )
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ s4 ],
   chain(
      chain(
         decl([ T4, T5 ],
            chain(
               chain(
                  assign(s5, V(0.0)),
                  loop(i5, [ 0 .. 2 ],
                     chain(
                        assign(nth(T5, V(0)), nth(X, V(0))),
                        assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                        assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                        assign(s5, add(s5, s4))
                     )
                  ),
                  assign(s1, V(0.0)),
                  loop(i3, [ 0 .. 1 ],
                     decl([ w1 ],
                        decl([ s3 ],
                           chain(
                              assign(q3, nth(X, add(i3, V(1)))),
                              assign(q4, nth(X, add(V(3), i3))),
                              assign(w1, sub(q3, q4)),
                              assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                              assign(s1, cond(geq(s1, s6), s1, s6))
                           )
                        )
                     )
                  )
               )
            )
         )
      ),
      assign(w2, geq(s1, s5)),
      creturn(w2)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      decl([ T4, T5 ],
         chain(
            chain(
               assign(s5, V(0.0)),
               loop(i5, [ 0 .. 2 ],
                  chain(
                     assign(nth(T5, V(0)), nth(X, V(0))),
                     assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                     assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                     assign(s5, add(s5, s4))
                  )
               ),
               assign(s1, V(0.0)),
               loop(i3, [ 0 .. 1 ],
                  decl([ w1 ],
                     decl([ s3 ],
                        chain(
                           assign(q3, nth(X, add(i3, V(1)))),
                           assign(q4, nth(X, add(V(3), i3))),
                           assign(w1, sub(q3, q4)),
                           assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                           assign(s1, cond(geq(s1, s6), s1, s6))
                        )
                     )
                  )
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ T4, T5 ],
      chain(
         chain(
            assign(s5, V(0.0)),
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(nth(T5, V(0)), nth(X, V(0))),
                  assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
                  assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
                  assign(s5, add(s5, s4))
               )
            ),
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               decl([ w1 ],
                  decl([ s3 ],
                     chain(
                        assign(q3, nth(X, add(i3, V(1)))),
                        assign(q4, nth(X, add(V(3), i3))),
                        assign(w1, sub(q3, q4)),
                        assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                        assign(s1, cond(geq(s1, s6), s1, s6))
                     )
                  )
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T4, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s7
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T4, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s7
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T4, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s7
------------------------------------------------------------------

------------------------------------------------------------------
RULE: scalarize1
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ T4, T5 ],
   chain(
      chain(
         assign(s5, V(0.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(nth(T5, V(0)), nth(X, V(0))),
               assign(nth(T4, V(0)), cond(eq(i5, V(0)), V(1.0), mul(nth(T4, V(0)), nth(T5, V(0))))),
               assign(s4, mul(nth(T4, V(0)), nth(D, i5))),
               assign(s5, add(s5, s4))
            )
         ),
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ w1 ],
               decl([ s3 ],
                  chain(
                     assign(q3, nth(X, add(i3, V(1)))),
                     assign(q4, nth(X, add(V(3), i3))),
                     assign(w1, sub(q3, q4)),
                     assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                     assign(s1, cond(geq(s1, s6), s1, s6))
                  )
               )
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ T5, s7 ],
   chain(
      chain(
         assign(s5, V(0.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(nth(T5, V(0)), nth(X, V(0))),
               assign(s7, cond(eq(i5, V(0)), V(1.0), mul(s7, nth(T5, V(0))))),
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4))
            )
         ),
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ w1 ],
               decl([ s3 ],
                  chain(
                     assign(q3, nth(X, add(i3, V(1)))),
                     assign(q4, nth(X, add(V(3), i3))),
                     assign(w1, sub(q3, q4)),
                     assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                     assign(s1, cond(geq(s1, s6), s1, s6))
                  )
               )
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T5, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s8
------------------------------------------------------------------

------------------------------------------------------------------
RULE: unnamed(SubstTopDown)
------------------------------------------------------------------
old expression
------------------------------------------------------------------
nth(T5, V(0))
------------------------------------------------------------------
new expression
------------------------------------------------------------------
s8
------------------------------------------------------------------

------------------------------------------------------------------
RULE: scalarize1
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ T5, s7 ],
   chain(
      chain(
         assign(s5, V(0.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(nth(T5, V(0)), nth(X, V(0))),
               assign(s7, cond(eq(i5, V(0)), V(1.0), mul(s7, nth(T5, V(0))))),
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4))
            )
         ),
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ w1 ],
               decl([ s3 ],
                  chain(
                     assign(q3, nth(X, add(i3, V(1)))),
                     assign(q4, nth(X, add(V(3), i3))),
                     assign(w1, sub(q3, q4)),
                     assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                     assign(s1, cond(geq(s1, s6), s1, s6))
                  )
               )
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ s7, s8 ],
   chain(
      chain(
         assign(s5, V(0.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s8, nth(X, V(0))),
               assign(s7, cond(eq(i5, V(0)), V(1.0), mul(s7, s8))),
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4))
            )
         ),
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            decl([ w1 ],
               decl([ s3 ],
                  chain(
                     assign(q3, nth(X, add(i3, V(1)))),
                     assign(q4, nth(X, add(V(3), i3))),
                     assign(w1, sub(q3, q4)),
                     assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                     assign(s1, cond(geq(s1, s6), s1, s6))
                  )
               )
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(s8, nth(X, V(0))),
            assign(s7, cond(eq(i5, V(0)), V(1.0), mul(s7, s8))),
            assign(s4, mul(s7, nth(D, i5))),
            assign(s5, add(s5, s4))
         )
      ),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         decl([ w1 ],
            decl([ s3 ],
               chain(
                  assign(q3, nth(X, add(i3, V(1)))),
                  assign(q4, nth(X, add(V(3), i3))),
                  assign(w1, sub(q3, q4)),
                  assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                  assign(s1, cond(geq(s1, s6), s1, s6))
               )
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   loop(i5, [ 0 .. 2 ],
      chain(
         assign(s8, nth(X, V(0))),
         assign(s7, cond(eq(i5, V(0)), V(1.0), mul(s7, s8))),
         assign(s4, mul(s7, nth(D, i5))),
         assign(s5, add(s5, s4))
      )
   ),
   assign(s1, V(0.0)),
   loop(i3, [ 0 .. 1 ],
      decl([ w1 ],
         decl([ s3 ],
            chain(
               assign(q3, nth(X, add(i3, V(1)))),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
               assign(s1, cond(geq(s1, s6), s1, s6))
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: loop_pull_const_array
------------------------------------------------------------------
old expression
------------------------------------------------------------------
loop(i5, [ 0 .. 2 ],
   chain(
      assign(s8, nth(X, V(0))),
      assign(s7, cond(eq(i5, V(0)), V(1.0), mul(s7, s8))),
      assign(s4, mul(s7, nth(D, i5))),
      assign(s5, add(s5, s4))
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(s8, nth(X, V(0))),
   loop(i5, [ 0 .. 2 ],
      chain(
         assign(s7, cond(eq(i5, V(0)), V(1.0), mul(s7, s8))),
         assign(s4, mul(s7, nth(D, i5))),
         assign(s5, add(s5, s4))
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: loop_pull_cond
------------------------------------------------------------------
old expression
------------------------------------------------------------------
loop(i5, [ 0 .. 2 ],
   chain(
      assign(s7, cond(eq(i5, V(0)), V(1.0), mul(s7, s8))),
      assign(s4, mul(s7, nth(D, i5))),
      assign(s5, add(s5, s4))
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(s7, V(1.0)),
   loop(i5, [ 0 .. 2 ],
      chain(
         assign(s4, mul(s7, nth(D, i5))),
         assign(s5, add(s5, s4)),
         assign(s7, mul(s7, s8))
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: loop_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
loop(i3, [ 0 .. 1 ],
   decl([ w1 ],
      decl([ s3 ],
         chain(
            assign(q3, nth(X, add(i3, V(1)))),
            assign(q4, nth(X, add(V(3), i3))),
            assign(w1, sub(q3, q4)),
            assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
            assign(s1, cond(geq(s1, s6), s1, s6))
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ w1 ],
   loop(i3, [ 0 .. 1 ],
      decl([ s3 ],
         chain(
            assign(q3, nth(X, add(i3, V(1)))),
            assign(q4, nth(X, add(V(3), i3))),
            assign(w1, sub(q3, q4)),
            assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
            assign(s1, cond(geq(s1, s6), s1, s6))
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: loop_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
loop(i3, [ 0 .. 1 ],
   decl([ s3 ],
      chain(
         assign(q3, nth(X, add(i3, V(1)))),
         assign(q4, nth(X, add(V(3), i3))),
         assign(w1, sub(q3, q4)),
         assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
         assign(s1, cond(geq(s1, s6), s1, s6))
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ s3 ],
   loop(i3, [ 0 .. 1 ],
      chain(
         assign(q3, nth(X, add(i3, V(1)))),
         assign(q4, nth(X, add(V(3), i3))),
         assign(w1, sub(q3, q4)),
         assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
         assign(s1, cond(geq(s1, s6), s1, s6))
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: decl_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ s1, s5, s6, w2 ],
   decl([ q3, q4 ],
      decl([ s4 ],
         chain(
            decl([ s7, s8 ],
               chain(
                  assign(s5, V(0.0)),
                  chain(
                     assign(s8, nth(X, V(0))),
                     chain(
                        assign(s7, V(1.0)),
                        loop(i5, [ 0 .. 2 ],
                           chain(
                              assign(s4, mul(s7, nth(D, i5))),
                              assign(s5, add(s5, s4)),
                              assign(s7, mul(s7, s8))
                           )
                        )
                     )
                  ),
                  assign(s1, V(0.0)),
                  decl([ w1 ],
                     decl([ s3 ],
                        loop(i3, [ 0 .. 1 ],
                           chain(
                              assign(q3, nth(X, add(i3, V(1)))),
                              assign(q4, nth(X, add(V(3), i3))),
                              assign(w1, sub(q3, q4)),
                              assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                              assign(s1, cond(geq(s1, s6), s1, s6))
                           )
                        )
                     )
                  )
               )
            ),
            assign(w2, geq(s1, s5)),
            creturn(w2)
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ q3, q4, s1, s5, s6, w2 ],
   decl([ s4 ],
      chain(
         decl([ s7, s8 ],
            chain(
               assign(s5, V(0.0)),
               chain(
                  assign(s8, nth(X, V(0))),
                  chain(
                     assign(s7, V(1.0)),
                     loop(i5, [ 0 .. 2 ],
                        chain(
                           assign(s4, mul(s7, nth(D, i5))),
                           assign(s5, add(s5, s4)),
                           assign(s7, mul(s7, s8))
                        )
                     )
                  )
               ),
               assign(s1, V(0.0)),
               decl([ w1 ],
                  decl([ s3 ],
                     loop(i3, [ 0 .. 1 ],
                        chain(
                           assign(q3, nth(X, add(i3, V(1)))),
                           assign(q4, nth(X, add(V(3), i3))),
                           assign(w1, sub(q3, q4)),
                           assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                           assign(s1, cond(geq(s1, s6), s1, s6))
                        )
                     )
                  )
               )
            )
         ),
         assign(w2, geq(s1, s5)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: decl_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ q3, q4, s1, s5, s6, w2 ],
   decl([ s4 ],
      chain(
         decl([ s7, s8 ],
            chain(
               assign(s5, V(0.0)),
               chain(
                  assign(s8, nth(X, V(0))),
                  chain(
                     assign(s7, V(1.0)),
                     loop(i5, [ 0 .. 2 ],
                        chain(
                           assign(s4, mul(s7, nth(D, i5))),
                           assign(s5, add(s5, s4)),
                           assign(s7, mul(s7, s8))
                        )
                     )
                  )
               ),
               assign(s1, V(0.0)),
               decl([ w1 ],
                  decl([ s3 ],
                     loop(i3, [ 0 .. 1 ],
                        chain(
                           assign(q3, nth(X, add(i3, V(1)))),
                           assign(q4, nth(X, add(V(3), i3))),
                           assign(w1, sub(q3, q4)),
                           assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                           assign(s1, cond(geq(s1, s6), s1, s6))
                        )
                     )
                  )
               )
            )
         ),
         assign(w2, geq(s1, s5)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ q3, q4, s1, s4, s5, s6, w2 ],
   chain(
      decl([ s7, s8 ],
         chain(
            assign(s5, V(0.0)),
            chain(
               assign(s8, nth(X, V(0))),
               chain(
                  assign(s7, V(1.0)),
                  loop(i5, [ 0 .. 2 ],
                     chain(
                        assign(s4, mul(s7, nth(D, i5))),
                        assign(s5, add(s5, s4)),
                        assign(s7, mul(s7, s8))
                     )
                  )
               )
            ),
            assign(s1, V(0.0)),
            decl([ w1 ],
               decl([ s3 ],
                  loop(i3, [ 0 .. 1 ],
                     chain(
                        assign(q3, nth(X, add(i3, V(1)))),
                        assign(q4, nth(X, add(V(3), i3))),
                        assign(w1, sub(q3, q4)),
                        assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                        assign(s1, cond(geq(s1, s6), s1, s6))
                     )
                  )
               )
            )
         )
      ),
      assign(w2, geq(s1, s5)),
      creturn(w2)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ s7, s8 ],
      chain(
         assign(s5, V(0.0)),
         chain(
            assign(s8, nth(X, V(0))),
            chain(
               assign(s7, V(1.0)),
               loop(i5, [ 0 .. 2 ],
                  chain(
                     assign(s4, mul(s7, nth(D, i5))),
                     assign(s5, add(s5, s4)),
                     assign(s7, mul(s7, s8))
                  )
               )
            )
         ),
         assign(s1, V(0.0)),
         decl([ w1 ],
            decl([ s3 ],
               loop(i3, [ 0 .. 1 ],
                  chain(
                     assign(q3, nth(X, add(i3, V(1)))),
                     assign(q4, nth(X, add(V(3), i3))),
                     assign(w1, sub(q3, q4)),
                     assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                     assign(s1, cond(geq(s1, s6), s1, s6))
                  )
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ s7, s8 ],
   chain(
      chain(
         assign(s5, V(0.0)),
         chain(
            assign(s8, nth(X, V(0))),
            chain(
               assign(s7, V(1.0)),
               loop(i5, [ 0 .. 2 ],
                  chain(
                     assign(s4, mul(s7, nth(D, i5))),
                     assign(s5, add(s5, s4)),
                     assign(s7, mul(s7, s8))
                  )
               )
            )
         ),
         assign(s1, V(0.0)),
         decl([ w1 ],
            decl([ s3 ],
               loop(i3, [ 0 .. 1 ],
                  chain(
                     assign(q3, nth(X, add(i3, V(1)))),
                     assign(q4, nth(X, add(V(3), i3))),
                     assign(w1, sub(q3, q4)),
                     assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                     assign(s1, cond(geq(s1, s6), s1, s6))
                  )
               )
            )
         )
      ),
      assign(w2, geq(s1, s5)),
      creturn(w2)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      chain(
         assign(s8, nth(X, V(0))),
         chain(
            assign(s7, V(1.0)),
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(s4, mul(s7, nth(D, i5))),
                  assign(s5, add(s5, s4)),
                  assign(s7, mul(s7, s8))
               )
            )
         )
      ),
      assign(s1, V(0.0)),
      decl([ w1 ],
         decl([ s3 ],
            loop(i3, [ 0 .. 1 ],
               chain(
                  assign(q3, nth(X, add(i3, V(1)))),
                  assign(q4, nth(X, add(V(3), i3))),
                  assign(w1, sub(q3, q4)),
                  assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                  assign(s1, cond(geq(s1, s6), s1, s6))
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   chain(
      assign(s8, nth(X, V(0))),
      chain(
         assign(s7, V(1.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4)),
               assign(s7, mul(s7, s8))
            )
         )
      )
   ),
   assign(s1, V(0.0)),
   decl([ w1 ],
      decl([ s3 ],
         loop(i3, [ 0 .. 1 ],
            chain(
               assign(q3, nth(X, add(i3, V(1)))),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
               assign(s1, cond(geq(s1, s6), s1, s6))
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   chain(
      assign(s8, nth(X, V(0))),
      chain(
         assign(s7, V(1.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4)),
               assign(s7, mul(s7, s8))
            )
         )
      )
   ),
   assign(s1, V(0.0)),
   decl([ w1 ],
      decl([ s3 ],
         loop(i3, [ 0 .. 1 ],
            chain(
               assign(q3, nth(X, add(i3, V(1)))),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
               assign(s1, cond(geq(s1, s6), s1, s6))
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   chain(
      assign(s8, nth(X, V(0))),
      chain(
         assign(s7, V(1.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4)),
               assign(s7, mul(s7, s8))
            )
         )
      )
   ),
   decl([ w1 ],
      chain(
         assign(s1, V(0.0)),
         decl([ s3 ],
            loop(i3, [ 0 .. 1 ],
               chain(
                  assign(q3, nth(X, add(i3, V(1)))),
                  assign(q4, nth(X, add(V(3), i3))),
                  assign(w1, sub(q3, q4)),
                  assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                  assign(s1, cond(geq(s1, s6), s1, s6))
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   chain(
      assign(s8, nth(X, V(0))),
      chain(
         assign(s7, V(1.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4)),
               assign(s7, mul(s7, s8))
            )
         )
      )
   ),
   decl([ w1 ],
      chain(
         assign(s1, V(0.0)),
         decl([ s3 ],
            loop(i3, [ 0 .. 1 ],
               chain(
                  assign(q3, nth(X, add(i3, V(1)))),
                  assign(q4, nth(X, add(V(3), i3))),
                  assign(w1, sub(q3, q4)),
                  assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                  assign(s1, cond(geq(s1, s6), s1, s6))
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   decl([ w1 ],
      chain(
         chain(
            assign(s8, nth(X, V(0))),
            chain(
               assign(s7, V(1.0)),
               loop(i5, [ 0 .. 2 ],
                  chain(
                     assign(s4, mul(s7, nth(D, i5))),
                     assign(s5, add(s5, s4)),
                     assign(s7, mul(s7, s8))
                  )
               )
            )
         ),
         chain(
            assign(s1, V(0.0)),
            decl([ s3 ],
               loop(i3, [ 0 .. 1 ],
                  chain(
                     assign(q3, nth(X, add(i3, V(1)))),
                     assign(q4, nth(X, add(V(3), i3))),
                     assign(w1, sub(q3, q4)),
                     assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                     assign(s1, cond(geq(s1, s6), s1, s6))
                  )
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   decl([ w1 ],
      chain(
         chain(
            assign(s8, nth(X, V(0))),
            chain(
               assign(s7, V(1.0)),
               loop(i5, [ 0 .. 2 ],
                  chain(
                     assign(s4, mul(s7, nth(D, i5))),
                     assign(s5, add(s5, s4)),
                     assign(s7, mul(s7, s8))
                  )
               )
            )
         ),
         chain(
            assign(s1, V(0.0)),
            decl([ s3 ],
               loop(i3, [ 0 .. 1 ],
                  chain(
                     assign(q3, nth(X, add(i3, V(1)))),
                     assign(q4, nth(X, add(V(3), i3))),
                     assign(w1, sub(q3, q4)),
                     assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                     assign(s1, cond(geq(s1, s6), s1, s6))
                  )
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ w1 ],
      chain(
         assign(s5, V(0.0)),
         chain(
            chain(
               assign(s8, nth(X, V(0))),
               chain(
                  assign(s7, V(1.0)),
                  loop(i5, [ 0 .. 2 ],
                     chain(
                        assign(s4, mul(s7, nth(D, i5))),
                        assign(s5, add(s5, s4)),
                        assign(s7, mul(s7, s8))
                     )
                  )
               )
            ),
            chain(
               assign(s1, V(0.0)),
               decl([ s3 ],
                  loop(i3, [ 0 .. 1 ],
                     chain(
                        assign(q3, nth(X, add(i3, V(1)))),
                        assign(q4, nth(X, add(V(3), i3))),
                        assign(w1, sub(q3, q4)),
                        assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                        assign(s1, cond(geq(s1, s6), s1, s6))
                     )
                  )
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   chain(
      chain(
         assign(s8, nth(X, V(0))),
         chain(
            assign(s7, V(1.0)),
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(s4, mul(s7, nth(D, i5))),
                  assign(s5, add(s5, s4)),
                  assign(s7, mul(s7, s8))
               )
            )
         )
      ),
      chain(
         assign(s1, V(0.0)),
         decl([ s3 ],
            loop(i3, [ 0 .. 1 ],
               chain(
                  assign(q3, nth(X, add(i3, V(1)))),
                  assign(q4, nth(X, add(V(3), i3))),
                  assign(w1, sub(q3, q4)),
                  assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                  assign(s1, cond(geq(s1, s6), s1, s6))
               )
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      chain(
         assign(s8, nth(X, V(0))),
         chain(
            assign(s7, V(1.0)),
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(s4, mul(s7, nth(D, i5))),
                  assign(s5, add(s5, s4)),
                  assign(s7, mul(s7, s8))
               )
            )
         )
      ),
      chain(
         assign(s1, V(0.0)),
         decl([ s3 ],
            loop(i3, [ 0 .. 1 ],
               chain(
                  assign(q3, nth(X, add(i3, V(1)))),
                  assign(q4, nth(X, add(V(3), i3))),
                  assign(w1, sub(q3, q4)),
                  assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                  assign(s1, cond(geq(s1, s6), s1, s6))
               )
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   chain(
      assign(s8, nth(X, V(0))),
      chain(
         assign(s7, V(1.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4)),
               assign(s7, mul(s7, s8))
            )
         )
      )
   ),
   chain(
      assign(s1, V(0.0)),
      decl([ s3 ],
         loop(i3, [ 0 .. 1 ],
            chain(
               assign(q3, nth(X, add(i3, V(1)))),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
               assign(s1, cond(geq(s1, s6), s1, s6))
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      assign(s8, nth(X, V(0))),
      chain(
         assign(s7, V(1.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4)),
               assign(s7, mul(s7, s8))
            )
         )
      )
   ),
   chain(
      assign(s1, V(0.0)),
      decl([ s3 ],
         loop(i3, [ 0 .. 1 ],
            chain(
               assign(q3, nth(X, add(i3, V(1)))),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
               assign(s1, cond(geq(s1, s6), s1, s6))
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      assign(s8, nth(X, V(0))),
      chain(
         assign(s7, V(1.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4)),
               assign(s7, mul(s7, s8))
            )
         )
      )
   ),
   chain(
      assign(s1, V(0.0)),
      decl([ s3 ],
         loop(i3, [ 0 .. 1 ],
            chain(
               assign(q3, nth(X, add(i3, V(1)))),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
               assign(s1, cond(geq(s1, s6), s1, s6))
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         assign(s5, V(0.0)),
         assign(s8, nth(X, V(0))),
         chain(
            assign(s7, V(1.0)),
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(s4, mul(s7, nth(D, i5))),
                  assign(s5, add(s5, s4)),
                  assign(s7, mul(s7, s8))
               )
            )
         )
      ),
      assign(s1, V(0.0)),
      decl([ s3 ],
         loop(i3, [ 0 .. 1 ],
            chain(
               assign(q3, nth(X, add(i3, V(1)))),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
               assign(s1, cond(geq(s1, s6), s1, s6))
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      assign(s8, nth(X, V(0))),
      chain(
         assign(s7, V(1.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4)),
               assign(s7, mul(s7, s8))
            )
         )
      )
   ),
   assign(s1, V(0.0)),
   decl([ s3 ],
      loop(i3, [ 0 .. 1 ],
         chain(
            assign(q3, nth(X, add(i3, V(1)))),
            assign(q4, nth(X, add(V(3), i3))),
            assign(w1, sub(q3, q4)),
            assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
            assign(s1, cond(geq(s1, s6), s1, s6))
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   assign(s8, nth(X, V(0))),
   chain(
      assign(s7, V(1.0)),
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(s4, mul(s7, nth(D, i5))),
            assign(s5, add(s5, s4)),
            assign(s7, mul(s7, s8))
         )
      )
   ),
   assign(s1, V(0.0)),
   decl([ s3 ],
      loop(i3, [ 0 .. 1 ],
         chain(
            assign(q3, nth(X, add(i3, V(1)))),
            assign(q4, nth(X, add(V(3), i3))),
            assign(w1, sub(q3, q4)),
            assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
            assign(s1, cond(geq(s1, s6), s1, s6))
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   assign(s8, nth(X, V(0))),
   chain(
      assign(s7, V(1.0)),
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(s4, mul(s7, nth(D, i5))),
            assign(s5, add(s5, s4)),
            assign(s7, mul(s7, s8))
         )
      )
   ),
   assign(s1, V(0.0)),
   decl([ s3 ],
      loop(i3, [ 0 .. 1 ],
         chain(
            assign(q3, nth(X, add(i3, V(1)))),
            assign(q4, nth(X, add(V(3), i3))),
            assign(w1, sub(q3, q4)),
            assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
            assign(s1, cond(geq(s1, s6), s1, s6))
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   assign(s8, nth(X, V(0))),
   chain(
      assign(s7, V(1.0)),
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(s4, mul(s7, nth(D, i5))),
            assign(s5, add(s5, s4)),
            assign(s7, mul(s7, s8))
         )
      )
   ),
   decl([ s3 ],
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               assign(q3, nth(X, add(i3, V(1)))),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
               assign(s1, cond(geq(s1, s6), s1, s6))
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   assign(s8, nth(X, V(0))),
   chain(
      assign(s7, V(1.0)),
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(s4, mul(s7, nth(D, i5))),
            assign(s5, add(s5, s4)),
            assign(s7, mul(s7, s8))
         )
      )
   ),
   decl([ s3 ],
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               assign(q3, nth(X, add(i3, V(1)))),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
               assign(s1, cond(geq(s1, s6), s1, s6))
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   assign(s8, nth(X, V(0))),
   decl([ s3 ],
      chain(
         chain(
            assign(s7, V(1.0)),
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(s4, mul(s7, nth(D, i5))),
                  assign(s5, add(s5, s4)),
                  assign(s7, mul(s7, s8))
               )
            )
         ),
         chain(
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               chain(
                  assign(q3, nth(X, add(i3, V(1)))),
                  assign(q4, nth(X, add(V(3), i3))),
                  assign(w1, sub(q3, q4)),
                  assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                  assign(s1, cond(geq(s1, s6), s1, s6))
               )
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   assign(s8, nth(X, V(0))),
   decl([ s3 ],
      chain(
         chain(
            assign(s7, V(1.0)),
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(s4, mul(s7, nth(D, i5))),
                  assign(s5, add(s5, s4)),
                  assign(s7, mul(s7, s8))
               )
            )
         ),
         chain(
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               chain(
                  assign(q3, nth(X, add(i3, V(1)))),
                  assign(q4, nth(X, add(V(3), i3))),
                  assign(w1, sub(q3, q4)),
                  assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                  assign(s1, cond(geq(s1, s6), s1, s6))
               )
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   decl([ s3 ],
      chain(
         assign(s8, nth(X, V(0))),
         chain(
            chain(
               assign(s7, V(1.0)),
               loop(i5, [ 0 .. 2 ],
                  chain(
                     assign(s4, mul(s7, nth(D, i5))),
                     assign(s5, add(s5, s4)),
                     assign(s7, mul(s7, s8))
                  )
               )
            ),
            chain(
               assign(s1, V(0.0)),
               loop(i3, [ 0 .. 1 ],
                  chain(
                     assign(q3, nth(X, add(i3, V(1)))),
                     assign(q4, nth(X, add(V(3), i3))),
                     assign(w1, sub(q3, q4)),
                     assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                     assign(s1, cond(geq(s1, s6), s1, s6))
                  )
               )
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   decl([ s3 ],
      chain(
         assign(s8, nth(X, V(0))),
         chain(
            chain(
               assign(s7, V(1.0)),
               loop(i5, [ 0 .. 2 ],
                  chain(
                     assign(s4, mul(s7, nth(D, i5))),
                     assign(s5, add(s5, s4)),
                     assign(s7, mul(s7, s8))
                  )
               )
            ),
            chain(
               assign(s1, V(0.0)),
               loop(i3, [ 0 .. 1 ],
                  chain(
                     assign(q3, nth(X, add(i3, V(1)))),
                     assign(q4, nth(X, add(V(3), i3))),
                     assign(w1, sub(q3, q4)),
                     assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                     assign(s1, cond(geq(s1, s6), s1, s6))
                  )
               )
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   decl([ s3 ],
      chain(
         assign(s5, V(0.0)),
         chain(
            assign(s8, nth(X, V(0))),
            chain(
               chain(
                  assign(s7, V(1.0)),
                  loop(i5, [ 0 .. 2 ],
                     chain(
                        assign(s4, mul(s7, nth(D, i5))),
                        assign(s5, add(s5, s4)),
                        assign(s7, mul(s7, s8))
                     )
                  )
               ),
               chain(
                  assign(s1, V(0.0)),
                  loop(i3, [ 0 .. 1 ],
                     chain(
                        assign(q3, nth(X, add(i3, V(1)))),
                        assign(q4, nth(X, add(V(3), i3))),
                        assign(w1, sub(q3, q4)),
                        assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                        assign(s1, cond(geq(s1, s6), s1, s6))
                     )
                  )
               )
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: drop_unused
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ s3 ],
   chain(
      assign(s5, V(0.0)),
      chain(
         assign(s8, nth(X, V(0))),
         chain(
            chain(
               assign(s7, V(1.0)),
               loop(i5, [ 0 .. 2 ],
                  chain(
                     assign(s4, mul(s7, nth(D, i5))),
                     assign(s5, add(s5, s4)),
                     assign(s7, mul(s7, s8))
                  )
               )
            ),
            chain(
               assign(s1, V(0.0)),
               loop(i3, [ 0 .. 1 ],
                  chain(
                     assign(q3, nth(X, add(i3, V(1)))),
                     assign(q4, nth(X, add(V(3), i3))),
                     assign(w1, sub(q3, q4)),
                     assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                     assign(s1, cond(geq(s1, s6), s1, s6))
                  )
               )
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   chain(
      assign(s8, nth(X, V(0))),
      chain(
         chain(
            assign(s7, V(1.0)),
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(s4, mul(s7, nth(D, i5))),
                  assign(s5, add(s5, s4)),
                  assign(s7, mul(s7, s8))
               )
            )
         ),
         chain(
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               chain(
                  assign(q3, nth(X, add(i3, V(1)))),
                  assign(q4, nth(X, add(V(3), i3))),
                  assign(w1, sub(q3, q4)),
                  assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                  assign(s1, cond(geq(s1, s6), s1, s6))
               )
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s8, nth(X, V(0))),
   chain(
      chain(
         assign(s7, V(1.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4)),
               assign(s7, mul(s7, s8))
            )
         )
      ),
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               assign(q3, nth(X, add(i3, V(1)))),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
               assign(s1, cond(geq(s1, s6), s1, s6))
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(s8, nth(X, V(0))),
      chain(
         assign(s7, V(1.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4)),
               assign(s7, mul(s7, s8))
            )
         )
      ),
      chain(
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               assign(q3, nth(X, add(i3, V(1)))),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
               assign(s1, cond(geq(s1, s6), s1, s6))
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s8, nth(X, V(0))),
   chain(
      assign(s7, V(1.0)),
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(s4, mul(s7, nth(D, i5))),
            assign(s5, add(s5, s4)),
            assign(s7, mul(s7, s8))
         )
      )
   ),
   chain(
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            assign(q3, nth(X, add(i3, V(1)))),
            assign(q4, nth(X, add(V(3), i3))),
            assign(w1, sub(q3, q4)),
            assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
            assign(s1, cond(geq(s1, s6), s1, s6))
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(s8, nth(X, V(0))),
      assign(s7, V(1.0)),
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(s4, mul(s7, nth(D, i5))),
            assign(s5, add(s5, s4)),
            assign(s7, mul(s7, s8))
         )
      )
   ),
   chain(
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            assign(q3, nth(X, add(i3, V(1)))),
            assign(q4, nth(X, add(V(3), i3))),
            assign(w1, sub(q3, q4)),
            assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
            assign(s1, cond(geq(s1, s6), s1, s6))
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(s8, nth(X, V(0))),
      assign(s7, V(1.0)),
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(s4, mul(s7, nth(D, i5))),
            assign(s5, add(s5, s4)),
            assign(s7, mul(s7, s8))
         )
      )
   ),
   chain(
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            assign(q3, nth(X, add(i3, V(1)))),
            assign(q4, nth(X, add(V(3), i3))),
            assign(w1, sub(q3, q4)),
            assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
            assign(s1, cond(geq(s1, s6), s1, s6))
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         assign(s8, nth(X, V(0))),
         assign(s7, V(1.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4)),
               assign(s7, mul(s7, s8))
            )
         )
      ),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            assign(q3, nth(X, add(i3, V(1)))),
            assign(q4, nth(X, add(V(3), i3))),
            assign(w1, sub(q3, q4)),
            assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
            assign(s1, cond(geq(s1, s6), s1, s6))
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(s8, nth(X, V(0))),
      assign(s7, V(1.0)),
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(s4, mul(s7, nth(D, i5))),
            assign(s5, add(s5, s4)),
            assign(s7, mul(s7, s8))
         )
      )
   ),
   assign(s1, V(0.0)),
   loop(i3, [ 0 .. 1 ],
      chain(
         assign(q3, nth(X, add(i3, V(1)))),
         assign(q4, nth(X, add(V(3), i3))),
         assign(w1, sub(q3, q4)),
         assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
         assign(s1, cond(geq(s1, s6), s1, s6))
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(s8, nth(X, V(0))),
   assign(s7, V(1.0)),
   loop(i5, [ 0 .. 2 ],
      chain(
         assign(s4, mul(s7, nth(D, i5))),
         assign(s5, add(s5, s4)),
         assign(s7, mul(s7, s8))
      )
   ),
   assign(s1, V(0.0)),
   loop(i3, [ 0 .. 1 ],
      chain(
         assign(q3, nth(X, add(i3, V(1)))),
         assign(q4, nth(X, add(V(3), i3))),
         assign(w1, sub(q3, q4)),
         assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
         assign(s1, cond(geq(s1, s6), s1, s6))
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: decl_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ q3, q4, s1, s4, s5, s6, w2 ],
   decl([ s7, s8 ],
      chain(
         decl([ w1 ],
            chain(
               chain(
                  chain(
                     chain(
                        assign(s5, V(0.0)),
                        chain(
                           chain(
                              chain(
                                 assign(s8, nth(X, V(0))),
                                 assign(s7, V(1.0)),
                                 loop(i5, [ 0 .. 2 ],
                                    chain(
                                       assign(s4, mul(s7, nth(D, i5))),
                                       assign(s5, add(s5, s4)),
                                       assign(s7, mul(s7, s8))
                                    )
                                 ),
                                 assign(s1, V(0.0)),
                                 loop(i3, [ 0 .. 1 ],
                                    chain(
                                       assign(q3, nth(X, add(i3, V(1)))),
                                       assign(q4, nth(X, add(V(3), i3))),
                                       assign(w1, sub(q3, q4)),
                                       assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                                       assign(s1, cond(geq(s1, s6), s1, s6))
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         ),
         assign(w2, geq(s1, s5)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ q3, q4, s1, s4, s5, s6, s7, s8, w2 ],
   chain(
      decl([ w1 ],
         chain(
            chain(
               chain(
                  chain(
                     assign(s5, V(0.0)),
                     chain(
                        chain(
                           chain(
                              assign(s8, nth(X, V(0))),
                              assign(s7, V(1.0)),
                              loop(i5, [ 0 .. 2 ],
                                 chain(
                                    assign(s4, mul(s7, nth(D, i5))),
                                    assign(s5, add(s5, s4)),
                                    assign(s7, mul(s7, s8))
                                 )
                              ),
                              assign(s1, V(0.0)),
                              loop(i3, [ 0 .. 1 ],
                                 chain(
                                    assign(q3, nth(X, add(i3, V(1)))),
                                    assign(q4, nth(X, add(V(3), i3))),
                                    assign(w1, sub(q3, q4)),
                                    assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                                    assign(s1, cond(geq(s1, s6), s1, s6))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      ),
      assign(w2, geq(s1, s5)),
      creturn(w2)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   decl([ w1 ],
      chain(
         chain(
            chain(
               chain(
                  assign(s5, V(0.0)),
                  chain(
                     chain(
                        chain(
                           assign(s8, nth(X, V(0))),
                           assign(s7, V(1.0)),
                           loop(i5, [ 0 .. 2 ],
                              chain(
                                 assign(s4, mul(s7, nth(D, i5))),
                                 assign(s5, add(s5, s4)),
                                 assign(s7, mul(s7, s8))
                              )
                           ),
                           assign(s1, V(0.0)),
                           loop(i3, [ 0 .. 1 ],
                              chain(
                                 assign(q3, nth(X, add(i3, V(1)))),
                                 assign(q4, nth(X, add(V(3), i3))),
                                 assign(w1, sub(q3, q4)),
                                 assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                                 assign(s1, cond(geq(s1, s6), s1, s6))
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ w1 ],
   chain(
      chain(
         chain(
            chain(
               chain(
                  assign(s5, V(0.0)),
                  chain(
                     chain(
                        chain(
                           assign(s8, nth(X, V(0))),
                           assign(s7, V(1.0)),
                           loop(i5, [ 0 .. 2 ],
                              chain(
                                 assign(s4, mul(s7, nth(D, i5))),
                                 assign(s5, add(s5, s4)),
                                 assign(s7, mul(s7, s8))
                              )
                           ),
                           assign(s1, V(0.0)),
                           loop(i3, [ 0 .. 1 ],
                              chain(
                                 assign(q3, nth(X, add(i3, V(1)))),
                                 assign(q4, nth(X, add(V(3), i3))),
                                 assign(w1, sub(q3, q4)),
                                 assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                                 assign(s1, cond(geq(s1, s6), s1, s6))
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      ),
      assign(w2, geq(s1, s5)),
      creturn(w2)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         chain(
            chain(
               assign(s5, V(0.0)),
               chain(
                  chain(
                     chain(
                        assign(s8, nth(X, V(0))),
                        assign(s7, V(1.0)),
                        loop(i5, [ 0 .. 2 ],
                           chain(
                              assign(s4, mul(s7, nth(D, i5))),
                              assign(s5, add(s5, s4)),
                              assign(s7, mul(s7, s8))
                           )
                        ),
                        assign(s1, V(0.0)),
                        loop(i3, [ 0 .. 1 ],
                           chain(
                              assign(q3, nth(X, add(i3, V(1)))),
                              assign(q4, nth(X, add(V(3), i3))),
                              assign(w1, sub(q3, q4)),
                              assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                              assign(s1, cond(geq(s1, s6), s1, s6))
                           )
                        )
                     )
                  )
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         chain(
            assign(s5, V(0.0)),
            chain(
               chain(
                  chain(
                     assign(s8, nth(X, V(0))),
                     assign(s7, V(1.0)),
                     loop(i5, [ 0 .. 2 ],
                        chain(
                           assign(s4, mul(s7, nth(D, i5))),
                           assign(s5, add(s5, s4)),
                           assign(s7, mul(s7, s8))
                        )
                     ),
                     assign(s1, V(0.0)),
                     loop(i3, [ 0 .. 1 ],
                        chain(
                           assign(q3, nth(X, add(i3, V(1)))),
                           assign(q4, nth(X, add(V(3), i3))),
                           assign(w1, sub(q3, q4)),
                           assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                           assign(s1, cond(geq(s1, s6), s1, s6))
                        )
                     )
                  )
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         chain(
            assign(s5, V(0.0)),
            chain(
               chain(
                  chain(
                     assign(s8, nth(X, V(0))),
                     assign(s7, V(1.0)),
                     loop(i5, [ 0 .. 2 ],
                        chain(
                           assign(s4, mul(s7, nth(D, i5))),
                           assign(s5, add(s5, s4)),
                           assign(s7, mul(s7, s8))
                        )
                     ),
                     assign(s1, V(0.0)),
                     loop(i3, [ 0 .. 1 ],
                        chain(
                           assign(q3, nth(X, add(i3, V(1)))),
                           assign(q4, nth(X, add(V(3), i3))),
                           assign(w1, sub(q3, q4)),
                           assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                           assign(s1, cond(geq(s1, s6), s1, s6))
                        )
                     )
                  )
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         assign(s5, V(0.0)),
         chain(
            chain(
               chain(
                  assign(s8, nth(X, V(0))),
                  assign(s7, V(1.0)),
                  loop(i5, [ 0 .. 2 ],
                     chain(
                        assign(s4, mul(s7, nth(D, i5))),
                        assign(s5, add(s5, s4)),
                        assign(s7, mul(s7, s8))
                     )
                  ),
                  assign(s1, V(0.0)),
                  loop(i3, [ 0 .. 1 ],
                     chain(
                        assign(q3, nth(X, add(i3, V(1)))),
                        assign(q4, nth(X, add(V(3), i3))),
                        assign(w1, sub(q3, q4)),
                        assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                        assign(s1, cond(geq(s1, s6), s1, s6))
                     )
                  )
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         assign(s5, V(0.0)),
         chain(
            chain(
               chain(
                  assign(s8, nth(X, V(0))),
                  assign(s7, V(1.0)),
                  loop(i5, [ 0 .. 2 ],
                     chain(
                        assign(s4, mul(s7, nth(D, i5))),
                        assign(s5, add(s5, s4)),
                        assign(s7, mul(s7, s8))
                     )
                  ),
                  assign(s1, V(0.0)),
                  loop(i3, [ 0 .. 1 ],
                     chain(
                        assign(q3, nth(X, add(i3, V(1)))),
                        assign(q4, nth(X, add(V(3), i3))),
                        assign(w1, sub(q3, q4)),
                        assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                        assign(s1, cond(geq(s1, s6), s1, s6))
                     )
                  )
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      chain(
         chain(
            chain(
               assign(s8, nth(X, V(0))),
               assign(s7, V(1.0)),
               loop(i5, [ 0 .. 2 ],
                  chain(
                     assign(s4, mul(s7, nth(D, i5))),
                     assign(s5, add(s5, s4)),
                     assign(s7, mul(s7, s8))
                  )
               ),
               assign(s1, V(0.0)),
               loop(i3, [ 0 .. 1 ],
                  chain(
                     assign(q3, nth(X, add(i3, V(1)))),
                     assign(q4, nth(X, add(V(3), i3))),
                     assign(w1, sub(q3, q4)),
                     assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                     assign(s1, cond(geq(s1, s6), s1, s6))
                  )
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      chain(
         chain(
            chain(
               assign(s8, nth(X, V(0))),
               assign(s7, V(1.0)),
               loop(i5, [ 0 .. 2 ],
                  chain(
                     assign(s4, mul(s7, nth(D, i5))),
                     assign(s5, add(s5, s4)),
                     assign(s7, mul(s7, s8))
                  )
               ),
               assign(s1, V(0.0)),
               loop(i3, [ 0 .. 1 ],
                  chain(
                     assign(q3, nth(X, add(i3, V(1)))),
                     assign(q4, nth(X, add(V(3), i3))),
                     assign(w1, sub(q3, q4)),
                     assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                     assign(s1, cond(geq(s1, s6), s1, s6))
                  )
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   chain(
      chain(
         chain(
            assign(s8, nth(X, V(0))),
            assign(s7, V(1.0)),
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(s4, mul(s7, nth(D, i5))),
                  assign(s5, add(s5, s4)),
                  assign(s7, mul(s7, s8))
               )
            ),
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               chain(
                  assign(q3, nth(X, add(i3, V(1)))),
                  assign(q4, nth(X, add(V(3), i3))),
                  assign(w1, sub(q3, q4)),
                  assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                  assign(s1, cond(geq(s1, s6), s1, s6))
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   chain(
      chain(
         chain(
            assign(s8, nth(X, V(0))),
            assign(s7, V(1.0)),
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(s4, mul(s7, nth(D, i5))),
                  assign(s5, add(s5, s4)),
                  assign(s7, mul(s7, s8))
               )
            ),
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               chain(
                  assign(q3, nth(X, add(i3, V(1)))),
                  assign(q4, nth(X, add(V(3), i3))),
                  assign(w1, sub(q3, q4)),
                  assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                  assign(s1, cond(geq(s1, s6), s1, s6))
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      chain(
         chain(
            assign(s8, nth(X, V(0))),
            assign(s7, V(1.0)),
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(s4, mul(s7, nth(D, i5))),
                  assign(s5, add(s5, s4)),
                  assign(s7, mul(s7, s8))
               )
            ),
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               chain(
                  assign(q3, nth(X, add(i3, V(1)))),
                  assign(q4, nth(X, add(V(3), i3))),
                  assign(w1, sub(q3, q4)),
                  assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                  assign(s1, cond(geq(s1, s6), s1, s6))
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain_xyz
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      chain(
         chain(
            assign(s8, nth(X, V(0))),
            assign(s7, V(1.0)),
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(s4, mul(s7, nth(D, i5))),
                  assign(s5, add(s5, s4)),
                  assign(s7, mul(s7, s8))
               )
            ),
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               chain(
                  assign(q3, nth(X, add(i3, V(1)))),
                  assign(q4, nth(X, add(V(3), i3))),
                  assign(w1, sub(q3, q4)),
                  assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                  assign(s1, cond(geq(s1, s6), s1, s6))
               )
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      chain(
         chain(
            assign(s8, nth(X, V(0))),
            assign(s7, V(1.0)),
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(s4, mul(s7, nth(D, i5))),
                  assign(s5, add(s5, s4)),
                  assign(s7, mul(s7, s8))
               )
            ),
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               chain(
                  assign(q3, nth(X, add(i3, V(1)))),
                  assign(q4, nth(X, add(V(3), i3))),
                  assign(w1, sub(q3, q4)),
                  assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                  assign(s1, cond(geq(s1, s6), s1, s6))
               )
            )
         )
      ),
      assign(w2, geq(s1, s5))
   ),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain_xyz
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      chain(
         chain(
            assign(s8, nth(X, V(0))),
            assign(s7, V(1.0)),
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(s4, mul(s7, nth(D, i5))),
                  assign(s5, add(s5, s4)),
                  assign(s7, mul(s7, s8))
               )
            ),
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               chain(
                  assign(q3, nth(X, add(i3, V(1)))),
                  assign(q4, nth(X, add(V(3), i3))),
                  assign(w1, sub(q3, q4)),
                  assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                  assign(s1, cond(geq(s1, s6), s1, s6))
               )
            )
         )
      ),
      assign(w2, geq(s1, s5))
   ),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      chain(
         chain(
            assign(s8, nth(X, V(0))),
            assign(s7, V(1.0)),
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(s4, mul(s7, nth(D, i5))),
                  assign(s5, add(s5, s4)),
                  assign(s7, mul(s7, s8))
               )
            ),
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               chain(
                  assign(q3, nth(X, add(i3, V(1)))),
                  assign(q4, nth(X, add(V(3), i3))),
                  assign(w1, sub(q3, q4)),
                  assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                  assign(s1, cond(geq(s1, s6), s1, s6))
               )
            )
         )
      ),
      assign(w2, geq(s1, s5)),
      creturn(w2)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   chain(
      chain(
         assign(s8, nth(X, V(0))),
         assign(s7, V(1.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4)),
               assign(s7, mul(s7, s8))
            )
         ),
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               assign(q3, nth(X, add(i3, V(1)))),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
               assign(s1, cond(geq(s1, s6), s1, s6))
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      chain(
         assign(s8, nth(X, V(0))),
         assign(s7, V(1.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4)),
               assign(s7, mul(s7, s8))
            )
         ),
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               assign(q3, nth(X, add(i3, V(1)))),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
               assign(s1, cond(geq(s1, s6), s1, s6))
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain_xyz
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      chain(
         assign(s8, nth(X, V(0))),
         assign(s7, V(1.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4)),
               assign(s7, mul(s7, s8))
            )
         ),
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               assign(q3, nth(X, add(i3, V(1)))),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
               assign(s1, cond(geq(s1, s6), s1, s6))
            )
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      chain(
         assign(s8, nth(X, V(0))),
         assign(s7, V(1.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4)),
               assign(s7, mul(s7, s8))
            )
         ),
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               assign(q3, nth(X, add(i3, V(1)))),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
               assign(s1, cond(geq(s1, s6), s1, s6))
            )
         )
      ),
      assign(w2, geq(s1, s5))
   ),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain_xyz
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      chain(
         assign(s8, nth(X, V(0))),
         assign(s7, V(1.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4)),
               assign(s7, mul(s7, s8))
            )
         ),
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               assign(q3, nth(X, add(i3, V(1)))),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
               assign(s1, cond(geq(s1, s6), s1, s6))
            )
         )
      ),
      assign(w2, geq(s1, s5))
   ),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      chain(
         assign(s8, nth(X, V(0))),
         assign(s7, V(1.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4)),
               assign(s7, mul(s7, s8))
            )
         ),
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               assign(q3, nth(X, add(i3, V(1)))),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
               assign(s1, cond(geq(s1, s6), s1, s6))
            )
         )
      ),
      assign(w2, geq(s1, s5)),
      creturn(w2)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_xyz_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   chain(
      assign(s8, nth(X, V(0))),
      assign(s7, V(1.0)),
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(s4, mul(s7, nth(D, i5))),
            assign(s5, add(s5, s4)),
            assign(s7, mul(s7, s8))
         )
      ),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            assign(q3, nth(X, add(i3, V(1)))),
            assign(q4, nth(X, add(V(3), i3))),
            assign(w1, sub(q3, q4)),
            assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
            assign(s1, cond(geq(s1, s6), s1, s6))
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      assign(s8, nth(X, V(0))),
      assign(s7, V(1.0)),
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(s4, mul(s7, nth(D, i5))),
            assign(s5, add(s5, s4)),
            assign(s7, mul(s7, s8))
         )
      ),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            assign(q3, nth(X, add(i3, V(1)))),
            assign(q4, nth(X, add(V(3), i3))),
            assign(w1, sub(q3, q4)),
            assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
            assign(s1, cond(geq(s1, s6), s1, s6))
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain_xyz
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      assign(s8, nth(X, V(0))),
      assign(s7, V(1.0)),
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(s4, mul(s7, nth(D, i5))),
            assign(s5, add(s5, s4)),
            assign(s7, mul(s7, s8))
         )
      ),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            assign(q3, nth(X, add(i3, V(1)))),
            assign(q4, nth(X, add(V(3), i3))),
            assign(w1, sub(q3, q4)),
            assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
            assign(s1, cond(geq(s1, s6), s1, s6))
         )
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      assign(s8, nth(X, V(0))),
      assign(s7, V(1.0)),
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(s4, mul(s7, nth(D, i5))),
            assign(s5, add(s5, s4)),
            assign(s7, mul(s7, s8))
         )
      ),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            assign(q3, nth(X, add(i3, V(1)))),
            assign(q4, nth(X, add(V(3), i3))),
            assign(w1, sub(q3, q4)),
            assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
            assign(s1, cond(geq(s1, s6), s1, s6))
         )
      ),
      assign(w2, geq(s1, s5))
   ),
   creturn(w2)
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain_xyz
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      assign(s8, nth(X, V(0))),
      assign(s7, V(1.0)),
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(s4, mul(s7, nth(D, i5))),
            assign(s5, add(s5, s4)),
            assign(s7, mul(s7, s8))
         )
      ),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            assign(q3, nth(X, add(i3, V(1)))),
            assign(q4, nth(X, add(V(3), i3))),
            assign(w1, sub(q3, q4)),
            assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
            assign(s1, cond(geq(s1, s6), s1, s6))
         )
      ),
      assign(w2, geq(s1, s5))
   ),
   creturn(w2)
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      assign(s8, nth(X, V(0))),
      assign(s7, V(1.0)),
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(s4, mul(s7, nth(D, i5))),
            assign(s5, add(s5, s4)),
            assign(s7, mul(s7, s8))
         )
      ),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            assign(q3, nth(X, add(i3, V(1)))),
            assign(q4, nth(X, add(V(3), i3))),
            assign(w1, sub(q3, q4)),
            assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
            assign(s1, cond(geq(s1, s6), s1, s6))
         )
      ),
      assign(w2, geq(s1, s5)),
      creturn(w2)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: decl_decl
------------------------------------------------------------------
old expression
------------------------------------------------------------------
decl([ q3, q4, s1, s4, s5, s6, s7, s8, w2 ],
   decl([ w1 ],
      chain(
         chain(
            chain(
               chain(
                  assign(s5, V(0.0)),
                  assign(s8, nth(X, V(0))),
                  assign(s7, V(1.0)),
                  loop(i5, [ 0 .. 2 ],
                     chain(
                        assign(s4, mul(s7, nth(D, i5))),
                        assign(s5, add(s5, s4)),
                        assign(s7, mul(s7, s8))
                     )
                  ),
                  assign(s1, V(0.0)),
                  loop(i3, [ 0 .. 1 ],
                     chain(
                        assign(q3, nth(X, add(i3, V(1)))),
                        assign(q4, nth(X, add(V(3), i3))),
                        assign(w1, sub(q3, q4)),
                        assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                        assign(s1, cond(geq(s1, s6), s1, s6))
                     )
                  ),
                  assign(w2, geq(s1, s5)),
                  creturn(w2)
               )
            )
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
decl([ q3, q4, s1, s4, s5, s6, s7, s8, w1, w2 ],
   chain(
      chain(
         chain(
            chain(
               assign(s5, V(0.0)),
               assign(s8, nth(X, V(0))),
               assign(s7, V(1.0)),
               loop(i5, [ 0 .. 2 ],
                  chain(
                     assign(s4, mul(s7, nth(D, i5))),
                     assign(s5, add(s5, s4)),
                     assign(s7, mul(s7, s8))
                  )
               ),
               assign(s1, V(0.0)),
               loop(i3, [ 0 .. 1 ],
                  chain(
                     assign(q3, nth(X, add(i3, V(1)))),
                     assign(q4, nth(X, add(V(3), i3))),
                     assign(w1, sub(q3, q4)),
                     assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                     assign(s1, cond(geq(s1, s6), s1, s6))
                  )
               ),
               assign(w2, geq(s1, s5)),
               creturn(w2)
            )
         )
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         chain(
            assign(s5, V(0.0)),
            assign(s8, nth(X, V(0))),
            assign(s7, V(1.0)),
            loop(i5, [ 0 .. 2 ],
               chain(
                  assign(s4, mul(s7, nth(D, i5))),
                  assign(s5, add(s5, s4)),
                  assign(s7, mul(s7, s8))
               )
            ),
            assign(s1, V(0.0)),
            loop(i3, [ 0 .. 1 ],
               chain(
                  assign(q3, nth(X, add(i3, V(1)))),
                  assign(q4, nth(X, add(V(3), i3))),
                  assign(w1, sub(q3, q4)),
                  assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
                  assign(s1, cond(geq(s1, s6), s1, s6))
               )
            ),
            assign(w2, geq(s1, s5)),
            creturn(w2)
         )
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         assign(s5, V(0.0)),
         assign(s8, nth(X, V(0))),
         assign(s7, V(1.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4)),
               assign(s7, mul(s7, s8))
            )
         ),
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               assign(q3, nth(X, add(i3, V(1)))),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
               assign(s1, cond(geq(s1, s6), s1, s6))
            )
         ),
         assign(w2, geq(s1, s5)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      chain(
         assign(s5, V(0.0)),
         assign(s8, nth(X, V(0))),
         assign(s7, V(1.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4)),
               assign(s7, mul(s7, s8))
            )
         ),
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               assign(q3, nth(X, add(i3, V(1)))),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
               assign(s1, cond(geq(s1, s6), s1, s6))
            )
         ),
         assign(w2, geq(s1, s5)),
         creturn(w2)
      )
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      assign(s8, nth(X, V(0))),
      assign(s7, V(1.0)),
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(s4, mul(s7, nth(D, i5))),
            assign(s5, add(s5, s4)),
            assign(s7, mul(s7, s8))
         )
      ),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            assign(q3, nth(X, add(i3, V(1)))),
            assign(q4, nth(X, add(V(3), i3))),
            assign(w1, sub(q3, q4)),
            assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
            assign(s1, cond(geq(s1, s6), s1, s6))
         )
      ),
      assign(w2, geq(s1, s5)),
      creturn(w2)
   )
)
------------------------------------------------------------------

------------------------------------------------------------------
RULE: chain_chain
------------------------------------------------------------------
old expression
------------------------------------------------------------------
chain(
   chain(
      assign(s5, V(0.0)),
      assign(s8, nth(X, V(0))),
      assign(s7, V(1.0)),
      loop(i5, [ 0 .. 2 ],
         chain(
            assign(s4, mul(s7, nth(D, i5))),
            assign(s5, add(s5, s4)),
            assign(s7, mul(s7, s8))
         )
      ),
      assign(s1, V(0.0)),
      loop(i3, [ 0 .. 1 ],
         chain(
            assign(q3, nth(X, add(i3, V(1)))),
            assign(q4, nth(X, add(V(3), i3))),
            assign(w1, sub(q3, q4)),
            assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
            assign(s1, cond(geq(s1, s6), s1, s6))
         )
      ),
      assign(w2, geq(s1, s5)),
      creturn(w2)
   )
)
------------------------------------------------------------------
new expression
------------------------------------------------------------------
chain(
   assign(s5, V(0.0)),
   assign(s8, nth(X, V(0))),
   assign(s7, V(1.0)),
   loop(i5, [ 0 .. 2 ],
      chain(
         assign(s4, mul(s7, nth(D, i5))),
         assign(s5, add(s5, s4)),
         assign(s7, mul(s7, s8))
      )
   ),
   assign(s1, V(0.0)),
   loop(i3, [ 0 .. 1 ],
      chain(
         assign(q3, nth(X, add(i3, V(1)))),
         assign(q4, nth(X, add(V(3), i3))),
         assign(w1, sub(q3, q4)),
         assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
         assign(s1, cond(geq(s1, s6), s1, s6))
      )
   ),
   assign(w2, geq(s1, s5)),
   creturn(w2)
)
------------------------------------------------------------------

******************************************************************
END RULESET: iCode -> iCode
------------------------------------------------------------------
Final iCode
------------------------------------------------------------------
func(TInt, "transform", [ X, D ], 
   decl([ q3, q4, s1, s4, s5, s6, s7, s8, w1, w2 ],
      chain(
         assign(s5, V(0.0)),
         assign(s8, nth(X, V(0))),
         assign(s7, V(1.0)),
         loop(i5, [ 0 .. 2 ],
            chain(
               assign(s4, mul(s7, nth(D, i5))),
               assign(s5, add(s5, s4)),
               assign(s7, mul(s7, s8))
            )
         ),
         assign(s1, V(0.0)),
         loop(i3, [ 0 .. 1 ],
            chain(
               assign(q3, nth(X, add(i3, V(1)))),
               assign(q4, nth(X, add(V(3), i3))),
               assign(w1, sub(q3, q4)),
               assign(s6, cond(geq(w1, V(0)), w1, neg(w1))),
               assign(s1, cond(geq(s1, s6), s1, s6))
            )
         ),
         assign(w2, geq(s1, s5)),
         creturn(w2)
      )
   )
)
******************************************************************

