Require Import Helix.LLVMGen.Correctness_Prelude.
Require Import Helix.LLVMGen.Correctness_Invariants.
Require Import Helix.LLVMGen.VariableBinding.
Require Import Helix.LLVMGen.IdLemmas.


Section LidBound.  
  (* Says that a given local id would have been generated by an earlier IRState *)
  Definition lid_bound (s : IRState) (lid: local_id) : Prop
    := state_bound local_count incLocalNamed s lid.

  Definition lid_bound_between (s1 s2 : IRState) (lid : local_id) : Prop
    := state_bound_between local_count incLocalNamed s1 s2 lid.

  Lemma incLocalNamed_count_gen_injective :
    count_gen_injective local_count incLocalNamed.
  Proof.
    unfold count_gen_injective.
    intros s1 s1' s2 s2' name1 name2 id1 id2 GEN1 GEN2 H1 H2 H3.

    inversion GEN1.
    inversion GEN2.
    cbn in *.
    subst.

    intros CONTRA.
    apply Name_inj in CONTRA.

    match goal with
    | H : ?s1 @@ string_of_nat ?n â‰¡ ?s2 @@ string_of_nat ?k,
          NS1 : not_ends_with_nat ?s1,
                NS2 : not_ends_with_nat ?s2
      |- _ =>
      eapply (@not_ends_with_nat_neq s1 s2 n k NS1 NS2); eauto
    end.
  Qed.
End LidBound.
