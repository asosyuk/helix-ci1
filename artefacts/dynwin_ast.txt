dast = 
tLambda (nNamed "a")
  (tApp
     (tInd
        {| inductive_mind := "Coq.Vectors.VectorDef.t"; inductive_ind := 0 |}
        [])
     [tConst "Helix.HCOL.CarrierType.CarrierA" [];
     tApp
       (tConstruct
          {|
          inductive_mind := "Coq.Init.Datatypes.nat";
          inductive_ind := 0 |} 1 [])
       [tApp
          (tConstruct
             {|
             inductive_mind := "Coq.Init.Datatypes.nat";
             inductive_ind := 0 |} 1 [])
          [tApp
             (tConstruct
                {|
                inductive_mind := "Coq.Init.Datatypes.nat";
                inductive_ind := 0 |} 1 [])
             [tConstruct
                {|
                inductive_mind := "Coq.Init.Datatypes.nat";
                inductive_ind := 0 |} 0 []]]]])
  (tApp (tConst "Helix.SigmaHCOL.SigmaHCOL.SHCompose" [])
     [tConst "Helix.SigmaHCOL.Rtheta.Monoid_RthetaFlags" [];
     tApp (tConst "Coq.Init.Nat.add" [])
       [tApp
          (tConstruct
             {|
             inductive_mind := "Coq.Init.Datatypes.nat";
             inductive_ind := 0 |} 1 [])
          [tConstruct
             {|
             inductive_mind := "Coq.Init.Datatypes.nat";
             inductive_ind := 0 |} 0 []];
       tApp
         (tConstruct
            {|
            inductive_mind := "Coq.Init.Datatypes.nat";
            inductive_ind := 0 |} 1 [])
         [tApp
            (tConstruct
               {|
               inductive_mind := "Coq.Init.Datatypes.nat";
               inductive_ind := 0 |} 1 [])
            [tApp
               (tConstruct
                  {|
                  inductive_mind := "Coq.Init.Datatypes.nat";
                  inductive_ind := 0 |} 1 [])
               [tApp
                  (tConstruct
                     {|
                     inductive_mind := "Coq.Init.Datatypes.nat";
                     inductive_ind := 0 |} 1 [])
                  [tConstruct
                     {|
                     inductive_mind := "Coq.Init.Datatypes.nat";
                     inductive_ind := 0 |} 0 []]]]]];
     tApp (tConst "Coq.Init.Nat.add" [])
       [tApp
          (tConstruct
             {|
             inductive_mind := "Coq.Init.Datatypes.nat";
             inductive_ind := 0 |} 1 [])
          [tConstruct
             {|
             inductive_mind := "Coq.Init.Datatypes.nat";
             inductive_ind := 0 |} 0 []];
       tApp
         (tConstruct
            {|
            inductive_mind := "Coq.Init.Datatypes.nat";
            inductive_ind := 0 |} 1 [])
         [tConstruct
            {|
            inductive_mind := "Coq.Init.Datatypes.nat";
            inductive_ind := 0 |} 0 []]];
     tApp
       (tConstruct
          {|
          inductive_mind := "Coq.Init.Datatypes.nat";
          inductive_ind := 0 |} 1 [])
       [tConstruct
          {|
          inductive_mind := "Coq.Init.Datatypes.nat";
          inductive_ind := 0 |} 0 []];
     tApp (tConst "Helix.SigmaHCOL.TSigmaHCOL.SafeCast" [])
       [tApp (tConst "Coq.Init.Nat.add" [])
          [tApp
             (tConstruct
                {|
                inductive_mind := "Coq.Init.Datatypes.nat";
                inductive_ind := 0 |} 1 [])
             [tConstruct
                {|
                inductive_mind := "Coq.Init.Datatypes.nat";
                inductive_ind := 0 |} 0 []];
          tApp
            (tConstruct
               {|
               inductive_mind := "Coq.Init.Datatypes.nat";
               inductive_ind := 0 |} 1 [])
            [tConstruct
               {|
               inductive_mind := "Coq.Init.Datatypes.nat";
               inductive_ind := 0 |} 0 []]];
       tApp
         (tConstruct
            {|
            inductive_mind := "Coq.Init.Datatypes.nat";
            inductive_ind := 0 |} 1 [])
         [tConstruct
            {|
            inductive_mind := "Coq.Init.Datatypes.nat";
            inductive_ind := 0 |} 0 []];
       tApp (tConst "Helix.SigmaHCOL.SigmaHCOL.SHBinOp" [])
         [tConst "Helix.SigmaHCOL.Rtheta.Monoid_RthetaSafeFlags" [];
         tApp
           (tConstruct
              {|
              inductive_mind := "Coq.Init.Datatypes.nat";
              inductive_ind := 0 |} 1 [])
           [tConstruct
              {|
              inductive_mind := "Coq.Init.Datatypes.nat";
              inductive_ind := 0 |} 0 []];
         tLambda nAnon
           (tApp
              (tInd
                 {|
                 inductive_mind := "Coq.Init.Specif.sig";
                 inductive_ind := 0 |} [])
              [tInd
                 {|
                 inductive_mind := "Coq.Init.Datatypes.nat";
                 inductive_ind := 0 |} [];
              tLambda (nNamed "n")
                (tInd
                   {|
                   inductive_mind := "Coq.Init.Datatypes.nat";
                   inductive_ind := 0 |} [])
                (tApp (tConst "Coq.Init.Peano.lt" [])
                   [tRel 0;
                   tApp
                     (tConstruct
                        {|
                        inductive_mind := "Coq.Init.Datatypes.nat";
                        inductive_ind := 0 |} 1 [])
                     [tConstruct
                        {|
                        inductive_mind := "Coq.Init.Datatypes.nat";
                        inductive_ind := 0 |} 0 []]])])
           (tConst "Helix.HCOL.CarrierType.Zless" []);
         tApp
           (tConst "Coq.Classes.Morphisms.Reflexive_partial_app_morphism" [])
           [tProd nAnon (tConst "Helix.HCOL.CarrierType.CarrierA" [])
              (tProd nAnon (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                 (tConst "Helix.HCOL.CarrierType.CarrierA" []));
           tProd nAnon
             (tApp
                (tInd
                   {|
                   inductive_mind := "Coq.Init.Specif.sig";
                   inductive_ind := 0 |} [])
                [tInd
                   {|
                   inductive_mind := "Coq.Init.Datatypes.nat";
                   inductive_ind := 0 |} [];
                tLambda (nNamed "n")
                  (tInd
                     {|
                     inductive_mind := "Coq.Init.Datatypes.nat";
                     inductive_ind := 0 |} [])
                  (tApp (tConst "Coq.Init.Peano.lt" [])
                     [tRel 0;
                     tApp
                       (tConstruct
                          {|
                          inductive_mind := "Coq.Init.Datatypes.nat";
                          inductive_ind := 0 |} 1 [])
                       [tConstruct
                          {|
                          inductive_mind := "Coq.Init.Datatypes.nat";
                          inductive_ind := 0 |} 0 []]])])
             (tProd nAnon (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                (tProd nAnon (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                   (tConst "Helix.HCOL.CarrierType.CarrierA" [])));
           tApp (tConst "Coq.Classes.Morphisms.respectful" [])
             [tConst "Helix.HCOL.CarrierType.CarrierA" [];
             tProd nAnon (tConst "Helix.HCOL.CarrierType.CarrierA" [])
               (tConst "Helix.HCOL.CarrierType.CarrierA" []);
             tApp (tConst "MathClasses.interfaces.canonical_names.equiv" [])
               [tConst "Helix.HCOL.CarrierType.CarrierA" [];
               tConst "Helix.HCOL.CarrierType.CarrierAe" []];
             tApp (tConst "MathClasses.interfaces.canonical_names.equiv" [])
               [tProd nAnon (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                  (tConst "Helix.HCOL.CarrierType.CarrierA" []);
               tApp
                 (tConst "MathClasses.interfaces.canonical_names.ext_equiv"
                    [])
                 [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                 tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                 tConst "Helix.HCOL.CarrierType.CarrierA" [];
                 tConst "Helix.HCOL.CarrierType.CarrierAe" []]]];
           tApp (tConst "Coq.Classes.Morphisms.respectful" [])
             [tApp
                (tInd
                   {|
                   inductive_mind := "Coq.Init.Specif.sig";
                   inductive_ind := 0 |} [])
                [tInd
                   {|
                   inductive_mind := "Coq.Init.Datatypes.nat";
                   inductive_ind := 0 |} [];
                tLambda (nNamed "n")
                  (tInd
                     {|
                     inductive_mind := "Coq.Init.Datatypes.nat";
                     inductive_ind := 0 |} [])
                  (tApp (tConst "Coq.Init.Peano.lt" [])
                     [tRel 0;
                     tApp
                       (tConstruct
                          {|
                          inductive_mind := "Coq.Init.Datatypes.nat";
                          inductive_ind := 0 |} 1 [])
                       [tConstruct
                          {|
                          inductive_mind := "Coq.Init.Datatypes.nat";
                          inductive_ind := 0 |} 0 []]])];
             tProd nAnon (tConst "Helix.HCOL.CarrierType.CarrierA" [])
               (tProd nAnon (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                  (tConst "Helix.HCOL.CarrierType.CarrierA" []));
             tApp (tConst "MathClasses.interfaces.canonical_names.equiv" [])
               [tApp
                  (tInd
                     {|
                     inductive_mind := "Coq.Init.Specif.sig";
                     inductive_ind := 0 |} [])
                  [tInd
                     {|
                     inductive_mind := "Coq.Init.Datatypes.nat";
                     inductive_ind := 0 |} [];
                  tLambda (nNamed "n")
                    (tInd
                       {|
                       inductive_mind := "Coq.Init.Datatypes.nat";
                       inductive_ind := 0 |} [])
                    (tApp (tConst "Coq.Init.Peano.lt" [])
                       [tRel 0;
                       tApp
                         (tConstruct
                            {|
                            inductive_mind := "Coq.Init.Datatypes.nat";
                            inductive_ind := 0 |} 1 [])
                         [tConstruct
                            {|
                            inductive_mind := "Coq.Init.Datatypes.nat";
                            inductive_ind := 0 |} 0 []]])];
               tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                 [tInd
                    {|
                    inductive_mind := "Coq.Init.Datatypes.nat";
                    inductive_ind := 0 |} [];
                 tConst
                   "MathClasses.implementations.peano_naturals.nat_equiv" [];
                 tLambda (nNamed "n")
                   (tInd
                      {|
                      inductive_mind := "Coq.Init.Datatypes.nat";
                      inductive_ind := 0 |} [])
                   (tApp (tConst "Coq.Init.Peano.lt" [])
                      [tRel 0;
                      tApp
                        (tConstruct
                           {|
                           inductive_mind := "Coq.Init.Datatypes.nat";
                           inductive_ind := 0 |} 1 [])
                        [tConstruct
                           {|
                           inductive_mind := "Coq.Init.Datatypes.nat";
                           inductive_ind := 0 |} 0 []]])]];
             tApp (tConst "Coq.Classes.Morphisms.respectful" [])
               [tConst "Helix.HCOL.CarrierType.CarrierA" [];
               tProd nAnon (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                 (tConst "Helix.HCOL.CarrierType.CarrierA" []);
               tApp
                 (tConst "MathClasses.interfaces.canonical_names.equiv" [])
                 [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                 tConst "Helix.HCOL.CarrierType.CarrierAe" []];
               tApp (tConst "Coq.Classes.Morphisms.respectful" [])
                 [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                 tConst "Helix.HCOL.CarrierType.CarrierA" [];
                 tApp
                   (tConst "MathClasses.interfaces.canonical_names.equiv" [])
                   [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                   tConst "Helix.HCOL.CarrierType.CarrierAe" []];
                 tApp
                   (tConst "MathClasses.interfaces.canonical_names.equiv" [])
                   [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                   tConst "Helix.HCOL.CarrierType.CarrierAe" []]]]];
           tLambda (nNamed "f")
             (tProd nAnon (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                (tProd nAnon (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                   (tConst "Helix.HCOL.CarrierType.CarrierA" [])))
             (tLambda nAnon
                (tApp
                   (tInd
                      {|
                      inductive_mind := "Coq.Init.Specif.sig";
                      inductive_ind := 0 |} [])
                   [tInd
                      {|
                      inductive_mind := "Coq.Init.Datatypes.nat";
                      inductive_ind := 0 |} [];
                   tLambda (nNamed "n")
                     (tInd
                        {|
                        inductive_mind := "Coq.Init.Datatypes.nat";
                        inductive_ind := 0 |} [])
                     (tApp (tConst "Coq.Init.Peano.lt" [])
                        [tRel 0;
                        tApp
                          (tConstruct
                             {|
                             inductive_mind := "Coq.Init.Datatypes.nat";
                             inductive_ind := 0 |} 1 [])
                          [tConstruct
                             {|
                             inductive_mind := "Coq.Init.Datatypes.nat";
                             inductive_ind := 0 |} 0 []]])]) (tRel 1));
           tApp (tConst "Helix.HCOL.HCOL.IgnoreIndex2_proper" [])
             [tConst "Helix.HCOL.CarrierType.CarrierA" [];
             tConst "Helix.HCOL.CarrierType.CarrierAe" [];
             tApp
               (tInd
                  {|
                  inductive_mind := "Coq.Init.Specif.sig";
                  inductive_ind := 0 |} [])
               [tInd
                  {|
                  inductive_mind := "Coq.Init.Datatypes.nat";
                  inductive_ind := 0 |} [];
               tLambda (nNamed "n")
                 (tInd
                    {|
                    inductive_mind := "Coq.Init.Datatypes.nat";
                    inductive_ind := 0 |} [])
                 (tApp (tConst "Coq.Init.Peano.lt" [])
                    [tRel 0;
                    tApp
                      (tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 1 [])
                      [tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 0 []]])];
             tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
               [tInd
                  {|
                  inductive_mind := "Coq.Init.Datatypes.nat";
                  inductive_ind := 0 |} [];
               tConst "MathClasses.implementations.peano_naturals.nat_equiv"
                 [];
               tLambda (nNamed "n")
                 (tInd
                    {|
                    inductive_mind := "Coq.Init.Datatypes.nat";
                    inductive_ind := 0 |} [])
                 (tApp (tConst "Coq.Init.Peano.lt" [])
                    [tRel 0;
                    tApp
                      (tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 1 [])
                      [tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 0 []]])]];
           tConst "Helix.HCOL.CarrierType.Zless" [];
           tApp (tConst "Coq.Classes.Morphisms.proper_proper_proxy" [])
             [tProd nAnon (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                (tProd nAnon (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                   (tConst "Helix.HCOL.CarrierType.CarrierA" []));
             tConst "Helix.HCOL.CarrierType.Zless" [];
             tApp (tConst "Coq.Classes.Morphisms.respectful" [])
               [tConst "Helix.HCOL.CarrierType.CarrierA" [];
               tProd nAnon (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                 (tConst "Helix.HCOL.CarrierType.CarrierA" []);
               tApp
                 (tConst "MathClasses.interfaces.canonical_names.equiv" [])
                 [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                 tConst "Helix.HCOL.CarrierType.CarrierAe" []];
               tApp
                 (tConst "MathClasses.interfaces.canonical_names.equiv" [])
                 [tProd nAnon (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                    (tConst "Helix.HCOL.CarrierType.CarrierA" []);
                 tApp
                   (tConst "MathClasses.interfaces.canonical_names.ext_equiv"
                      [])
                   [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                   tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                   tConst "Helix.HCOL.CarrierType.CarrierA" [];
                   tConst "Helix.HCOL.CarrierType.CarrierAe" []]]];
             tConst "Helix.HCOL.CarrierType.Zless_proper" []]]]];
     tApp (tConst "Helix.SigmaHCOL.TSigmaHCOL.HTSUMUnion" [])
       [tConst "Helix.SigmaHCOL.Rtheta.Monoid_RthetaFlags" [];
       tApp (tConst "Coq.Init.Nat.add" [])
         [tApp
            (tConstruct
               {|
               inductive_mind := "Coq.Init.Datatypes.nat";
               inductive_ind := 0 |} 1 [])
            [tConstruct
               {|
               inductive_mind := "Coq.Init.Datatypes.nat";
               inductive_ind := 0 |} 0 []];
         tApp
           (tConstruct
              {|
              inductive_mind := "Coq.Init.Datatypes.nat";
              inductive_ind := 0 |} 1 [])
           [tApp
              (tConstruct
                 {|
                 inductive_mind := "Coq.Init.Datatypes.nat";
                 inductive_ind := 0 |} 1 [])
              [tApp
                 (tConstruct
                    {|
                    inductive_mind := "Coq.Init.Datatypes.nat";
                    inductive_ind := 0 |} 1 [])
                 [tApp
                    (tConstruct
                       {|
                       inductive_mind := "Coq.Init.Datatypes.nat";
                       inductive_ind := 0 |} 1 [])
                    [tConstruct
                       {|
                       inductive_mind := "Coq.Init.Datatypes.nat";
                       inductive_ind := 0 |} 0 []]]]]];
       tApp
         (tConstruct
            {|
            inductive_mind := "Coq.Init.Datatypes.nat";
            inductive_ind := 0 |} 1 [])
         [tApp
            (tConstruct
               {|
               inductive_mind := "Coq.Init.Datatypes.nat";
               inductive_ind := 0 |} 1 [])
            [tConstruct
               {|
               inductive_mind := "Coq.Init.Datatypes.nat";
               inductive_ind := 0 |} 0 []]];
       tConst "Helix.HCOL.CarrierType.CarrierAplus" [];
       tConst "Helix.HCOL.CarrierType.CarrierAPlus_proper" [];
       tApp (tConst "Helix.SigmaHCOL.SigmaHCOL.SHCompose" [])
         [tConst "Helix.SigmaHCOL.Rtheta.Monoid_RthetaFlags" [];
         tApp (tConst "Coq.Init.Nat.add" [])
           [tApp
              (tConstruct
                 {|
                 inductive_mind := "Coq.Init.Datatypes.nat";
                 inductive_ind := 0 |} 1 [])
              [tConstruct
                 {|
                 inductive_mind := "Coq.Init.Datatypes.nat";
                 inductive_ind := 0 |} 0 []];
           tApp
             (tConstruct
                {|
                inductive_mind := "Coq.Init.Datatypes.nat";
                inductive_ind := 0 |} 1 [])
             [tApp
                (tConstruct
                   {|
                   inductive_mind := "Coq.Init.Datatypes.nat";
                   inductive_ind := 0 |} 1 [])
                [tApp
                   (tConstruct
                      {|
                      inductive_mind := "Coq.Init.Datatypes.nat";
                      inductive_ind := 0 |} 1 [])
                   [tApp
                      (tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 1 [])
                      [tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 0 []]]]]];
         tApp
           (tConstruct
              {|
              inductive_mind := "Coq.Init.Datatypes.nat";
              inductive_ind := 0 |} 1 [])
           [tConstruct
              {|
              inductive_mind := "Coq.Init.Datatypes.nat";
              inductive_ind := 0 |} 0 []];
         tApp
           (tConstruct
              {|
              inductive_mind := "Coq.Init.Datatypes.nat";
              inductive_ind := 0 |} 1 [])
           [tApp
              (tConstruct
                 {|
                 inductive_mind := "Coq.Init.Datatypes.nat";
                 inductive_ind := 0 |} 1 [])
              [tConstruct
                 {|
                 inductive_mind := "Coq.Init.Datatypes.nat";
                 inductive_ind := 0 |} 0 []]];
         tApp (tConst "Helix.SigmaHCOL.SigmaHCOL.eUnion" [])
           [tConst "Helix.SigmaHCOL.Rtheta.Monoid_RthetaFlags" [];
           tApp
             (tConstruct
                {|
                inductive_mind := "Coq.Init.Datatypes.nat";
                inductive_ind := 0 |} 1 [])
             [tApp
                (tConstruct
                   {|
                   inductive_mind := "Coq.Init.Datatypes.nat";
                   inductive_ind := 0 |} 1 [])
                [tConstruct
                   {|
                   inductive_mind := "Coq.Init.Datatypes.nat";
                   inductive_ind := 0 |} 0 []]];
           tConstruct
             {|
             inductive_mind := "Coq.Init.Datatypes.nat";
             inductive_ind := 0 |} 0 [];
           tApp
             (tConstruct
                {|
                inductive_mind := "Coq.Init.Peano.le";
                inductive_ind := 0 |} 1 [])
             [tApp
                (tConstruct
                   {|
                   inductive_mind := "Coq.Init.Datatypes.nat";
                   inductive_ind := 0 |} 1 [])
                [tConstruct
                   {|
                   inductive_mind := "Coq.Init.Datatypes.nat";
                   inductive_ind := 0 |} 0 []];
             tApp
               (tConstruct
                  {|
                  inductive_mind := "Coq.Init.Datatypes.nat";
                  inductive_ind := 0 |} 1 [])
               [tConstruct
                  {|
                  inductive_mind := "Coq.Init.Datatypes.nat";
                  inductive_ind := 0 |} 0 []];
             tApp
               (tConstruct
                  {|
                  inductive_mind := "Coq.Init.Peano.le";
                  inductive_ind := 0 |} 0 [])
               [tApp
                  (tConstruct
                     {|
                     inductive_mind := "Coq.Init.Datatypes.nat";
                     inductive_ind := 0 |} 1 [])
                  [tConstruct
                     {|
                     inductive_mind := "Coq.Init.Datatypes.nat";
                     inductive_ind := 0 |} 0 []]]];
           tApp (tConst "MathClasses.interfaces.canonical_names.zero" [])
             [tConst "Helix.HCOL.CarrierType.CarrierA" [];
             tConst "Helix.HCOL.CarrierType.CarrierAz" []]];
         tApp (tConst "Helix.SigmaHCOL.TSigmaHCOL.SafeCast" [])
           [tApp (tConst "Coq.Init.Nat.add" [])
              [tApp
                 (tConstruct
                    {|
                    inductive_mind := "Coq.Init.Datatypes.nat";
                    inductive_ind := 0 |} 1 [])
                 [tConstruct
                    {|
                    inductive_mind := "Coq.Init.Datatypes.nat";
                    inductive_ind := 0 |} 0 []];
              tApp
                (tConstruct
                   {|
                   inductive_mind := "Coq.Init.Datatypes.nat";
                   inductive_ind := 0 |} 1 [])
                [tApp
                   (tConstruct
                      {|
                      inductive_mind := "Coq.Init.Datatypes.nat";
                      inductive_ind := 0 |} 1 [])
                   [tApp
                      (tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 1 [])
                      [tApp
                         (tConstruct
                            {|
                            inductive_mind := "Coq.Init.Datatypes.nat";
                            inductive_ind := 0 |} 1 [])
                         [tConstruct
                            {|
                            inductive_mind := "Coq.Init.Datatypes.nat";
                            inductive_ind := 0 |} 0 []]]]]];
           tApp
             (tConstruct
                {|
                inductive_mind := "Coq.Init.Datatypes.nat";
                inductive_ind := 0 |} 1 [])
             [tConstruct
                {|
                inductive_mind := "Coq.Init.Datatypes.nat";
                inductive_ind := 0 |} 0 []];
           tApp (tConst "Helix.SigmaHCOL.SigmaHCOL.IReduction" [])
             [tApp (tConst "Coq.Init.Nat.add" [])
                [tApp
                   (tConstruct
                      {|
                      inductive_mind := "Coq.Init.Datatypes.nat";
                      inductive_ind := 0 |} 1 [])
                   [tConstruct
                      {|
                      inductive_mind := "Coq.Init.Datatypes.nat";
                      inductive_ind := 0 |} 0 []];
                tApp
                  (tConstruct
                     {|
                     inductive_mind := "Coq.Init.Datatypes.nat";
                     inductive_ind := 0 |} 1 [])
                  [tApp
                     (tConstruct
                        {|
                        inductive_mind := "Coq.Init.Datatypes.nat";
                        inductive_ind := 0 |} 1 [])
                     [tApp
                        (tConstruct
                           {|
                           inductive_mind := "Coq.Init.Datatypes.nat";
                           inductive_ind := 0 |} 1 [])
                        [tApp
                           (tConstruct
                              {|
                              inductive_mind := "Coq.Init.Datatypes.nat";
                              inductive_ind := 0 |} 1 [])
                           [tConstruct
                              {|
                              inductive_mind := "Coq.Init.Datatypes.nat";
                              inductive_ind := 0 |} 0 []]]]]];
             tApp
               (tConstruct
                  {|
                  inductive_mind := "Coq.Init.Datatypes.nat";
                  inductive_ind := 0 |} 1 [])
               [tConstruct
                  {|
                  inductive_mind := "Coq.Init.Datatypes.nat";
                  inductive_ind := 0 |} 0 []];
             tApp
               (tConstruct
                  {|
                  inductive_mind := "Coq.Init.Datatypes.nat";
                  inductive_ind := 0 |} 1 [])
               [tApp
                  (tConstruct
                     {|
                     inductive_mind := "Coq.Init.Datatypes.nat";
                     inductive_ind := 0 |} 1 [])
                  [tApp
                     (tConstruct
                        {|
                        inductive_mind := "Coq.Init.Datatypes.nat";
                        inductive_ind := 0 |} 1 [])
                     [tConstruct
                        {|
                        inductive_mind := "Coq.Init.Datatypes.nat";
                        inductive_ind := 0 |} 0 []]]];
             tConst "Helix.HCOL.CarrierType.CarrierAplus" [];
             tConst "Helix.HCOL.CarrierType.CarrierAPlus_proper" [];
             tApp (tConst "MathClasses.interfaces.canonical_names.zero" [])
               [tConst "Helix.HCOL.CarrierType.CarrierA" [];
               tConst "Helix.HCOL.CarrierType.CarrierAz" []];
             tLambda (nNamed "jf")
               (tApp
                  (tInd
                     {|
                     inductive_mind := "Coq.Init.Specif.sig";
                     inductive_ind := 0 |} [])
                  [tInd
                     {|
                     inductive_mind := "Coq.Init.Datatypes.nat";
                     inductive_ind := 0 |} [];
                  tLambda (nNamed "x")
                    (tInd
                       {|
                       inductive_mind := "Coq.Init.Datatypes.nat";
                       inductive_ind := 0 |} [])
                    (tApp (tConst "Coq.Init.Peano.lt" [])
                       [tRel 0;
                       tApp
                         (tConstruct
                            {|
                            inductive_mind := "Coq.Init.Datatypes.nat";
                            inductive_ind := 0 |} 1 [])
                         [tApp
                            (tConstruct
                               {|
                               inductive_mind := "Coq.Init.Datatypes.nat";
                               inductive_ind := 0 |} 1 [])
                            [tApp
                               (tConstruct
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} 1 [])
                               [tConstruct
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} 0 []]]]])])
               (tApp (tConst "Helix.SigmaHCOL.SigmaHCOL.SHCompose" [])
                  [tConst "Helix.SigmaHCOL.Rtheta.Monoid_RthetaSafeFlags" [];
                  tApp (tConst "Coq.Init.Nat.add" [])
                    [tApp
                       (tConstruct
                          {|
                          inductive_mind := "Coq.Init.Datatypes.nat";
                          inductive_ind := 0 |} 1 [])
                       [tConstruct
                          {|
                          inductive_mind := "Coq.Init.Datatypes.nat";
                          inductive_ind := 0 |} 0 []];
                    tApp
                      (tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 1 [])
                      [tApp
                         (tConstruct
                            {|
                            inductive_mind := "Coq.Init.Datatypes.nat";
                            inductive_ind := 0 |} 1 [])
                         [tApp
                            (tConstruct
                               {|
                               inductive_mind := "Coq.Init.Datatypes.nat";
                               inductive_ind := 0 |} 1 [])
                            [tApp
                               (tConstruct
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} 1 [])
                               [tConstruct
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} 0 []]]]]];
                  tApp
                    (tConstruct
                       {|
                       inductive_mind := "Coq.Init.Datatypes.nat";
                       inductive_ind := 0 |} 1 [])
                    [tConstruct
                       {|
                       inductive_mind := "Coq.Init.Datatypes.nat";
                       inductive_ind := 0 |} 0 []];
                  tApp
                    (tConstruct
                       {|
                       inductive_mind := "Coq.Init.Datatypes.nat";
                       inductive_ind := 0 |} 1 [])
                    [tConstruct
                       {|
                       inductive_mind := "Coq.Init.Datatypes.nat";
                       inductive_ind := 0 |} 0 []];
                  tApp (tConst "Helix.SigmaHCOL.SigmaHCOL.SHCompose" [])
                    [tConst "Helix.SigmaHCOL.Rtheta.Monoid_RthetaSafeFlags"
                       [];
                    tApp
                      (tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 1 [])
                      [tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 0 []];
                    tApp
                      (tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 1 [])
                      [tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 0 []];
                    tApp
                      (tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 1 [])
                      [tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 0 []];
                    tApp (tConst "Helix.SigmaHCOL.SigmaHCOL.SHPointwise" [])
                      [tConst "Helix.SigmaHCOL.Rtheta.Monoid_RthetaSafeFlags"
                         [];
                      tApp
                        (tConstruct
                           {|
                           inductive_mind := "Coq.Init.Datatypes.nat";
                           inductive_ind := 0 |} 1 [])
                        [tConstruct
                           {|
                           inductive_mind := "Coq.Init.Datatypes.nat";
                           inductive_ind := 0 |} 0 []];
                      tLambda nAnon
                        (tApp
                           (tInd
                              {|
                              inductive_mind := "Coq.Init.Specif.sig";
                              inductive_ind := 0 |} [])
                           [tInd
                              {|
                              inductive_mind := "Coq.Init.Datatypes.nat";
                              inductive_ind := 0 |} [];
                           tLambda (nNamed "x")
                             (tInd
                                {|
                                inductive_mind := "Coq.Init.Datatypes.nat";
                                inductive_ind := 0 |} [])
                             (tApp (tConst "Coq.Init.Peano.lt" [])
                                [tRel 0;
                                tApp
                                  (tConstruct
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} 1 [])
                                  [tConstruct
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} 0 []]])])
                        (tLambda (nNamed "x")
                           (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                           (tApp
                              (tConst "Helix.HCOL.CarrierType.CarrierAmult"
                                 [])
                              [tRel 0;
                              tApp
                                (tConst "CoLoR.Util.Vector.VecUtil.Vnth" [])
                                [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tApp
                                  (tConstruct
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} 1 [])
                                  [tApp
                                     (tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 1 [])
                                     [tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 0 []]]];
                                tRel 3;
                                tApp (tConst "Coq.Init.Specif.proj1_sig" [])
                                  [tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [];
                                  tLambda (nNamed "x")
                                    (tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [])
                                    (tApp (tConst "Coq.Init.Peano.lt" [])
                                       [tRel 0;
                                       tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tApp
                                               (tConstruct
                                                  {|
                                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                                  inductive_ind := 0 |} 1 [])
                                               [tConstruct
                                                  {|
                                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                                  inductive_ind := 0 |} 0 []]]]]);
                                  tRel 2];
                                tApp (tConst "Coq.Init.Specif.proj2_sig" [])
                                  [tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [];
                                  tLambda (nNamed "x")
                                    (tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [])
                                    (tApp (tConst "Coq.Init.Peano.lt" [])
                                       [tRel 0;
                                       tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tApp
                                               (tConstruct
                                                  {|
                                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                                  inductive_ind := 0 |} 1 [])
                                               [tConstruct
                                                  {|
                                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                                  inductive_ind := 0 |} 0 []]]]]);
                                  tRel 2]]]));
                      tApp
                        (tConst
                           "Coq.Classes.Morphisms.Reflexive_partial_app_morphism"
                           [])
                        [tProd nAnon
                           (tApp
                              (tInd
                                 {|
                                 inductive_mind := "Coq.Init.Specif.sig";
                                 inductive_ind := 0 |} [])
                              [tInd
                                 {|
                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                 inductive_ind := 0 |} [];
                              tLambda (nNamed "x")
                                (tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [])
                                (tApp (tConst "Coq.Init.Peano.lt" [])
                                   [tRel 0;
                                   tApp
                                     (tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 1 [])
                                     [tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 0 []]]]])])
                           (tProd nAnon
                              (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                              (tConst "Helix.HCOL.CarrierType.CarrierA" []));
                        tProd nAnon
                          (tApp
                             (tInd
                                {|
                                inductive_mind := "Coq.Init.Specif.sig";
                                inductive_ind := 0 |} [])
                             [tInd
                                {|
                                inductive_mind := "Coq.Init.Datatypes.nat";
                                inductive_ind := 0 |} [];
                             tLambda (nNamed "x")
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [])
                               (tApp (tConst "Coq.Init.Peano.lt" [])
                                  [tRel 0;
                                  tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 0 []]])])
                          (tProd nAnon
                             (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                             (tConst "Helix.HCOL.CarrierType.CarrierA" []));
                        tApp (tConst "Coq.Classes.Morphisms.respectful" [])
                          [tApp
                             (tInd
                                {|
                                inductive_mind := "Coq.Init.Specif.sig";
                                inductive_ind := 0 |} [])
                             [tInd
                                {|
                                inductive_mind := "Coq.Init.Datatypes.nat";
                                inductive_ind := 0 |} [];
                             tLambda (nNamed "x")
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [])
                               (tApp (tConst "Coq.Init.Peano.lt" [])
                                  [tRel 0;
                                  tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 0 []]]]])];
                          tProd nAnon
                            (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                            (tConst "Helix.HCOL.CarrierType.CarrierA" []);
                          tApp
                            (tConst
                               "MathClasses.interfaces.canonical_names.equiv"
                               [])
                            [tApp
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Specif.sig";
                                  inductive_ind := 0 |} [])
                               [tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [];
                               tLambda (nNamed "x")
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [])
                                 (tApp (tConst "Coq.Init.Peano.lt" [])
                                    [tRel 0;
                                    tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 0 []]]]])];
                            tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                              [tInd
                                 {|
                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                 inductive_ind := 0 |} [];
                              tConst
                                "MathClasses.implementations.peano_naturals.nat_equiv"
                                [];
                              tLambda (nNamed "x")
                                (tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [])
                                (tApp (tConst "Coq.Init.Peano.lt" [])
                                   [tRel 0;
                                   tApp
                                     (tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 1 [])
                                     [tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 0 []]]]])]];
                          tApp (tConst "Coq.Classes.Morphisms.respectful" [])
                            [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                            tConst "Helix.HCOL.CarrierType.CarrierA" [];
                            tApp
                              (tConst
                                 "MathClasses.interfaces.canonical_names.equiv"
                                 [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAe" []];
                            tApp
                              (tConst
                                 "MathClasses.interfaces.canonical_names.equiv"
                                 [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAe" []]]];
                        tApp (tConst "Coq.Classes.Morphisms.respectful" [])
                          [tApp
                             (tInd
                                {|
                                inductive_mind := "Coq.Init.Specif.sig";
                                inductive_ind := 0 |} [])
                             [tInd
                                {|
                                inductive_mind := "Coq.Init.Datatypes.nat";
                                inductive_ind := 0 |} [];
                             tLambda (nNamed "x")
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [])
                               (tApp (tConst "Coq.Init.Peano.lt" [])
                                  [tRel 0;
                                  tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 0 []]])];
                          tProd nAnon
                            (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                            (tConst "Helix.HCOL.CarrierType.CarrierA" []);
                          tApp
                            (tConst
                               "MathClasses.interfaces.canonical_names.equiv"
                               [])
                            [tApp
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Specif.sig";
                                  inductive_ind := 0 |} [])
                               [tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [];
                               tLambda (nNamed "x")
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [])
                                 (tApp (tConst "Coq.Init.Peano.lt" [])
                                    [tRel 0;
                                    tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 0 []]])];
                            tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                              [tInd
                                 {|
                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                 inductive_ind := 0 |} [];
                              tConst
                                "MathClasses.implementations.peano_naturals.nat_equiv"
                                [];
                              tLambda (nNamed "x")
                                (tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [])
                                (tApp (tConst "Coq.Init.Peano.lt" [])
                                   [tRel 0;
                                   tApp
                                     (tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 1 [])
                                     [tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 0 []]])]];
                          tApp (tConst "Coq.Classes.Morphisms.respectful" [])
                            [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                            tConst "Helix.HCOL.CarrierType.CarrierA" [];
                            tApp
                              (tConst
                                 "MathClasses.interfaces.canonical_names.equiv"
                                 [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAe" []];
                            tApp
                              (tConst
                                 "MathClasses.interfaces.canonical_names.equiv"
                                 [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAe" []]]];
                        tLambda (nNamed "f")
                          (tProd nAnon
                             (tApp
                                (tInd
                                   {|
                                   inductive_mind := "Coq.Init.Specif.sig";
                                   inductive_ind := 0 |} [])
                                [tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [];
                                tLambda (nNamed "x")
                                  (tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [])
                                  (tApp (tConst "Coq.Init.Peano.lt" [])
                                     [tRel 0;
                                     tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tApp
                                             (tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 1 [])
                                             [tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 0 []]]]])])
                             (tProd nAnon
                                (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                (tConst "Helix.HCOL.CarrierType.CarrierA" [])))
                          (tLambda nAnon
                             (tApp
                                (tInd
                                   {|
                                   inductive_mind := "Coq.Init.Specif.sig";
                                   inductive_ind := 0 |} [])
                                [tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [];
                                tLambda (nNamed "x")
                                  (tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [])
                                  (tApp (tConst "Coq.Init.Peano.lt" [])
                                     [tRel 0;
                                     tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 0 []]])])
                             (tApp (tRel 1) [tRel 2]));
                        tApp
                          (tConst
                             "Coq.Classes.Morphisms.Reflexive_partial_app_morphism"
                             [])
                          [tApp
                             (tInd
                                {|
                                inductive_mind := "Coq.Init.Specif.sig";
                                inductive_ind := 0 |} [])
                             [tInd
                                {|
                                inductive_mind := "Coq.Init.Datatypes.nat";
                                inductive_ind := 0 |} [];
                             tLambda (nNamed "x")
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [])
                               (tApp (tConst "Coq.Init.Peano.lt" [])
                                  [tRel 0;
                                  tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 0 []]]]])];
                          tProd nAnon
                            (tProd nAnon
                               (tApp
                                  (tInd
                                     {|
                                     inductive_mind := "Coq.Init.Specif.sig";
                                     inductive_ind := 0 |} [])
                                  [tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [];
                                  tLambda (nNamed "x")
                                    (tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [])
                                    (tApp (tConst "Coq.Init.Peano.lt" [])
                                       [tRel 0;
                                       tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tApp
                                               (tConstruct
                                                  {|
                                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                                  inductive_ind := 0 |} 1 [])
                                               [tConstruct
                                                  {|
                                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                                  inductive_ind := 0 |} 0 []]]]])])
                               (tProd nAnon
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [])
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [])))
                            (tProd nAnon
                               (tApp
                                  (tInd
                                     {|
                                     inductive_mind := "Coq.Init.Specif.sig";
                                     inductive_ind := 0 |} [])
                                  [tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [];
                                  tLambda (nNamed "x")
                                    (tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [])
                                    (tApp (tConst "Coq.Init.Peano.lt" [])
                                       [tRel 0;
                                       tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 0 []]])])
                               (tProd nAnon
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [])
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [])));
                          tApp
                            (tConst
                               "MathClasses.interfaces.canonical_names.equiv"
                               [])
                            [tApp
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Specif.sig";
                                  inductive_ind := 0 |} [])
                               [tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [];
                               tLambda (nNamed "x")
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [])
                                 (tApp (tConst "Coq.Init.Peano.lt" [])
                                    [tRel 0;
                                    tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 0 []]]]])];
                            tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                              [tInd
                                 {|
                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                 inductive_ind := 0 |} [];
                              tConst
                                "MathClasses.implementations.peano_naturals.nat_equiv"
                                [];
                              tLambda (nNamed "x")
                                (tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [])
                                (tApp (tConst "Coq.Init.Peano.lt" [])
                                   [tRel 0;
                                   tApp
                                     (tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 1 [])
                                     [tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 0 []]]]])]];
                          tApp (tConst "Coq.Classes.Morphisms.respectful" [])
                            [tProd nAnon
                               (tApp
                                  (tInd
                                     {|
                                     inductive_mind := "Coq.Init.Specif.sig";
                                     inductive_ind := 0 |} [])
                                  [tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [];
                                  tLambda (nNamed "x")
                                    (tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [])
                                    (tApp (tConst "Coq.Init.Peano.lt" [])
                                       [tRel 0;
                                       tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tApp
                                               (tConstruct
                                                  {|
                                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                                  inductive_ind := 0 |} 1 [])
                                               [tConstruct
                                                  {|
                                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                                  inductive_ind := 0 |} 0 []]]]])])
                               (tProd nAnon
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [])
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     []));
                            tProd nAnon
                              (tApp
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Specif.sig";
                                    inductive_ind := 0 |} [])
                                 [tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [];
                                 tLambda (nNamed "x")
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [])
                                   (tApp (tConst "Coq.Init.Peano.lt" [])
                                      [tRel 0;
                                      tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 0 []]])])
                              (tProd nAnon
                                 (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                 (tConst "Helix.HCOL.CarrierType.CarrierA" []));
                            tApp
                              (tConst "Coq.Classes.Morphisms.respectful" [])
                              [tApp
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Specif.sig";
                                    inductive_ind := 0 |} [])
                                 [tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [];
                                 tLambda (nNamed "x")
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [])
                                   (tApp (tConst "Coq.Init.Peano.lt" [])
                                      [tRel 0;
                                      tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tApp
                                              (tConstruct
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} 1 [])
                                              [tConstruct
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} 0 []]]]])];
                              tProd nAnon
                                (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                (tConst "Helix.HCOL.CarrierType.CarrierA" []);
                              tApp
                                (tConst
                                   "MathClasses.interfaces.canonical_names.equiv"
                                   [])
                                [tApp
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Specif.sig";
                                      inductive_ind := 0 |} [])
                                   [tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [];
                                   tLambda (nNamed "x")
                                     (tInd
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} [])
                                     (tApp (tConst "Coq.Init.Peano.lt" [])
                                        [tRel 0;
                                        tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tApp
                                             (tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 1 [])
                                             [tApp
                                                (tConstruct
                                                   {|
                                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                                   inductive_ind := 0 |} 1 [])
                                                [tConstruct
                                                   {|
                                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                                   inductive_ind := 0 |} 0 []]]]])];
                                tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                                  [tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [];
                                  tConst
                                    "MathClasses.implementations.peano_naturals.nat_equiv"
                                    [];
                                  tLambda (nNamed "x")
                                    (tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [])
                                    (tApp (tConst "Coq.Init.Peano.lt" [])
                                       [tRel 0;
                                       tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tApp
                                               (tConstruct
                                                  {|
                                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                                  inductive_ind := 0 |} 1 [])
                                               [tConstruct
                                                  {|
                                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                                  inductive_ind := 0 |} 0 []]]]])]];
                              tApp
                                (tConst "Coq.Classes.Morphisms.respectful" [])
                                [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tApp
                                  (tConst
                                     "MathClasses.interfaces.canonical_names.equiv"
                                     [])
                                  [tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [];
                                  tConst "Helix.HCOL.CarrierType.CarrierAe"
                                    []];
                                tApp
                                  (tConst
                                     "MathClasses.interfaces.canonical_names.equiv"
                                     [])
                                  [tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [];
                                  tConst "Helix.HCOL.CarrierType.CarrierAe"
                                    []]]];
                            tApp
                              (tConst "Coq.Classes.Morphisms.respectful" [])
                              [tApp
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Specif.sig";
                                    inductive_ind := 0 |} [])
                                 [tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [];
                                 tLambda (nNamed "x")
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [])
                                   (tApp (tConst "Coq.Init.Peano.lt" [])
                                      [tRel 0;
                                      tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 0 []]])];
                              tProd nAnon
                                (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                (tConst "Helix.HCOL.CarrierType.CarrierA" []);
                              tApp
                                (tConst
                                   "MathClasses.interfaces.canonical_names.equiv"
                                   [])
                                [tApp
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Specif.sig";
                                      inductive_ind := 0 |} [])
                                   [tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [];
                                   tLambda (nNamed "x")
                                     (tInd
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} [])
                                     (tApp (tConst "Coq.Init.Peano.lt" [])
                                        [tRel 0;
                                        tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 0 []]])];
                                tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                                  [tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [];
                                  tConst
                                    "MathClasses.implementations.peano_naturals.nat_equiv"
                                    [];
                                  tLambda (nNamed "x")
                                    (tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [])
                                    (tApp (tConst "Coq.Init.Peano.lt" [])
                                       [tRel 0;
                                       tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 0 []]])]];
                              tApp
                                (tConst "Coq.Classes.Morphisms.respectful" [])
                                [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tApp
                                  (tConst
                                     "MathClasses.interfaces.canonical_names.equiv"
                                     [])
                                  [tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [];
                                  tConst "Helix.HCOL.CarrierType.CarrierAe"
                                    []];
                                tApp
                                  (tConst
                                     "MathClasses.interfaces.canonical_names.equiv"
                                     [])
                                  [tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [];
                                  tConst "Helix.HCOL.CarrierType.CarrierAe"
                                    []]]]];
                          tLambda (nNamed "i")
                            (tApp
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Specif.sig";
                                  inductive_ind := 0 |} [])
                               [tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [];
                               tLambda (nNamed "x")
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [])
                                 (tApp (tConst "Coq.Init.Peano.lt" [])
                                    [tRel 0;
                                    tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 0 []]]]])])
                            (tLambda (nNamed "f")
                               (tProd nAnon
                                  (tApp
                                     (tInd
                                        {|
                                        inductive_mind := "Coq.Init.Specif.sig";
                                        inductive_ind := 0 |} [])
                                     [tInd
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} [];
                                     tLambda (nNamed "x")
                                       (tInd
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} [])
                                       (tApp (tConst "Coq.Init.Peano.lt" [])
                                          [tRel 0;
                                          tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tApp
                                               (tConstruct
                                                  {|
                                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                                  inductive_ind := 0 |} 1 [])
                                               [tApp
                                                  (tConstruct
                                                     {|
                                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                                     inductive_ind := 0 |} 1
                                                     [])
                                                  [tConstruct
                                                     {|
                                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                                     inductive_ind := 0 |} 0
                                                     []]]]])])
                                  (tProd nAnon
                                     (tConst
                                        "Helix.HCOL.CarrierType.CarrierA" [])
                                     (tConst
                                        "Helix.HCOL.CarrierType.CarrierA" [])))
                               (tLambda nAnon
                                  (tApp
                                     (tInd
                                        {|
                                        inductive_mind := "Coq.Init.Specif.sig";
                                        inductive_ind := 0 |} [])
                                     [tInd
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} [];
                                     tLambda (nNamed "x")
                                       (tInd
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} [])
                                       (tApp (tConst "Coq.Init.Peano.lt" [])
                                          [tRel 0;
                                          tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 0 []]])])
                                  (tApp (tRel 1) [tRel 2])));
                          tApp
                            (tConst "Helix.HCOL.HCOL.Fin1SwapIndex_proper" [])
                            [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                            tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                            tApp
                              (tConstruct
                                 {|
                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                 inductive_ind := 0 |} 1 [])
                              [tApp
                                 (tConstruct
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} 1 [])
                                 [tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 0 []]]]];
                          tRel 0;
                          tApp
                            (tConst
                               "Coq.Classes.Morphisms.reflexive_proper_proxy"
                               [])
                            [tApp
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Specif.sig";
                                  inductive_ind := 0 |} [])
                               [tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [];
                               tLambda (nNamed "x")
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [])
                                 (tApp (tConst "Coq.Init.Peano.lt" [])
                                    [tRel 0;
                                    tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 0 []]]]])];
                            tApp
                              (tConst
                                 "MathClasses.interfaces.canonical_names.equiv"
                                 [])
                              [tApp
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Specif.sig";
                                    inductive_ind := 0 |} [])
                                 [tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [];
                                 tLambda (nNamed "x")
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [])
                                   (tApp (tConst "Coq.Init.Peano.lt" [])
                                      [tRel 0;
                                      tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tApp
                                              (tConstruct
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} 1 [])
                                              [tConstruct
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} 0 []]]]])];
                              tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                                [tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [];
                                tConst
                                  "MathClasses.implementations.peano_naturals.nat_equiv"
                                  [];
                                tLambda (nNamed "x")
                                  (tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [])
                                  (tApp (tConst "Coq.Init.Peano.lt" [])
                                     [tRel 0;
                                     tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tApp
                                             (tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 1 [])
                                             [tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 0 []]]]])]];
                            tApp
                              (tConst
                                 "Coq.Classes.RelationClasses.Equivalence_Reflexive"
                                 [])
                              [tApp
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Specif.sig";
                                    inductive_ind := 0 |} [])
                                 [tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [];
                                 tLambda (nNamed "x")
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [])
                                   (tApp (tConst "Coq.Init.Peano.lt" [])
                                      [tRel 0;
                                      tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tApp
                                              (tConstruct
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} 1 [])
                                              [tConstruct
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} 0 []]]]])];
                              tApp
                                (tConst
                                   "MathClasses.interfaces.canonical_names.equiv"
                                   [])
                                [tApp
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Specif.sig";
                                      inductive_ind := 0 |} [])
                                   [tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [];
                                   tLambda (nNamed "x")
                                     (tInd
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} [])
                                     (tApp (tConst "Coq.Init.Peano.lt" [])
                                        [tRel 0;
                                        tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tApp
                                             (tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 1 [])
                                             [tApp
                                                (tConstruct
                                                   {|
                                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                                   inductive_ind := 0 |} 1 [])
                                                [tConstruct
                                                   {|
                                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                                   inductive_ind := 0 |} 0 []]]]])];
                                tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                                  [tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [];
                                  tConst
                                    "MathClasses.implementations.peano_naturals.nat_equiv"
                                    [];
                                  tLambda (nNamed "x")
                                    (tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [])
                                    (tApp (tConst "Coq.Init.Peano.lt" [])
                                       [tRel 0;
                                       tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tApp
                                               (tConstruct
                                                  {|
                                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                                  inductive_ind := 0 |} 1 [])
                                               [tConstruct
                                                  {|
                                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                                  inductive_ind := 0 |} 0 []]]]])]];
                              tApp
                                (tConst
                                   "MathClasses.interfaces.abstract_algebra.setoid_eq"
                                   [])
                                [tApp
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Specif.sig";
                                      inductive_ind := 0 |} [])
                                   [tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [];
                                   tLambda (nNamed "x")
                                     (tInd
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} [])
                                     (tApp (tConst "Coq.Init.Peano.lt" [])
                                        [tRel 0;
                                        tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tApp
                                             (tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 1 [])
                                             [tApp
                                                (tConstruct
                                                   {|
                                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                                   inductive_ind := 0 |} 1 [])
                                                [tConstruct
                                                   {|
                                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                                   inductive_ind := 0 |} 0 []]]]])];
                                tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                                  [tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [];
                                  tConst
                                    "MathClasses.implementations.peano_naturals.nat_equiv"
                                    [];
                                  tLambda (nNamed "x")
                                    (tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [])
                                    (tApp (tConst "Coq.Init.Peano.lt" [])
                                       [tRel 0;
                                       tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tApp
                                               (tConstruct
                                                  {|
                                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                                  inductive_ind := 0 |} 1 [])
                                               [tConstruct
                                                  {|
                                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                                  inductive_ind := 0 |} 0 []]]]])];
                                tApp
                                  (tConst
                                     "MathClasses.theory.setoids.sig_setoid"
                                     [])
                                  [tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [];
                                  tConst
                                    "MathClasses.implementations.peano_naturals.nat_equiv"
                                    [];
                                  tApp
                                    (tConst
                                       "MathClasses.interfaces.abstract_algebra.sg_setoid"
                                       [])
                                    [tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [];
                                    tConst
                                      "MathClasses.implementations.peano_naturals.nat_equiv"
                                      [];
                                    tApp
                                      (tConst
                                         "MathClasses.interfaces.canonical_names.meet_is_sg_op"
                                         [])
                                      [tInd
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} [];
                                      tApp
                                        (tConst
                                           "MathClasses.orders.minmax.min" [])
                                        [tInd
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} [];
                                        tApp
                                          (tConst
                                             "MathClasses.interfaces.canonical_names.le"
                                             [])
                                          [tInd
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} [];
                                          tConst
                                            "MathClasses.implementations.peano_naturals.nat_le"
                                            []];
                                        tConst
                                          "MathClasses.implementations.peano_naturals.nat_le_dec"
                                          []]];
                                    tApp
                                      (tConst
                                         "MathClasses.interfaces.abstract_algebra.comsg_setoid"
                                         [])
                                      [tInd
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} [];
                                      tConst
                                        "MathClasses.implementations.peano_naturals.nat_equiv"
                                        [];
                                      tApp
                                        (tConst
                                           "MathClasses.interfaces.canonical_names.meet_is_sg_op"
                                           [])
                                        [tInd
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} [];
                                        tApp
                                          (tConst
                                             "MathClasses.orders.minmax.min"
                                             [])
                                          [tInd
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} [];
                                          tApp
                                            (tConst
                                               "MathClasses.interfaces.canonical_names.le"
                                               [])
                                            [tInd
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} [];
                                            tConst
                                              "MathClasses.implementations.peano_naturals.nat_le"
                                              []];
                                          tConst
                                            "MathClasses.implementations.peano_naturals.nat_le_dec"
                                            []]];
                                      tApp
                                        (tConst
                                           "MathClasses.interfaces.abstract_algebra.semilattice_sg"
                                           [])
                                        [tInd
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} [];
                                        tConst
                                          "MathClasses.implementations.peano_naturals.nat_equiv"
                                          [];
                                        tApp
                                          (tConst
                                             "MathClasses.interfaces.canonical_names.meet_is_sg_op"
                                             [])
                                          [tInd
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} [];
                                          tApp
                                            (tConst
                                               "MathClasses.orders.minmax.min"
                                               [])
                                            [tInd
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} [];
                                            tApp
                                              (tConst
                                                 "MathClasses.interfaces.canonical_names.le"
                                                 [])
                                              [tInd
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} [];
                                              tConst
                                                "MathClasses.implementations.peano_naturals.nat_le"
                                                []];
                                            tConst
                                              "MathClasses.implementations.peano_naturals.nat_le_dec"
                                              []]];
                                        tApp
                                          (tConst
                                             "MathClasses.interfaces.abstract_algebra.meet_semilattice"
                                             [])
                                          [tInd
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} [];
                                          tConst
                                            "MathClasses.implementations.peano_naturals.nat_equiv"
                                            [];
                                          tApp
                                            (tConst
                                               "MathClasses.orders.minmax.min"
                                               [])
                                            [tInd
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} [];
                                            tApp
                                              (tConst
                                                 "MathClasses.interfaces.canonical_names.le"
                                                 [])
                                              [tInd
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} [];
                                              tConst
                                                "MathClasses.implementations.peano_naturals.nat_le"
                                                []];
                                            tConst
                                              "MathClasses.implementations.peano_naturals.nat_le_dec"
                                              []];
                                          tApp
                                            (tConst
                                               "MathClasses.interfaces.abstract_algebra.lattice_meet"
                                               [])
                                            [tInd
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} [];
                                            tConst
                                              "MathClasses.implementations.peano_naturals.nat_equiv"
                                              [];
                                            tApp
                                              (tConst
                                                 "MathClasses.orders.minmax.max"
                                                 [])
                                              [tInd
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} [];
                                              tApp
                                                (tConst
                                                   "MathClasses.interfaces.canonical_names.le"
                                                   [])
                                                [tInd
                                                   {|
                                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                                   inductive_ind := 0 |} [];
                                                tConst
                                                  "MathClasses.implementations.peano_naturals.nat_le"
                                                  []];
                                              tConst
                                                "MathClasses.implementations.peano_naturals.nat_le_dec"
                                                []];
                                            tApp
                                              (tConst
                                                 "MathClasses.orders.minmax.min"
                                                 [])
                                              [tInd
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} [];
                                              tApp
                                                (tConst
                                                   "MathClasses.interfaces.canonical_names.le"
                                                   [])
                                                [tInd
                                                   {|
                                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                                   inductive_ind := 0 |} [];
                                                tConst
                                                  "MathClasses.implementations.peano_naturals.nat_le"
                                                  []];
                                              tConst
                                                "MathClasses.implementations.peano_naturals.nat_le_dec"
                                                []];
                                            tApp
                                              (tConst
                                                 "MathClasses.interfaces.abstract_algebra.distr_lattice_lattice"
                                                 [])
                                              [tInd
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} [];
                                              tConst
                                                "MathClasses.implementations.peano_naturals.nat_equiv"
                                                [];
                                              tApp
                                                (tConst
                                                   "MathClasses.orders.minmax.max"
                                                   [])
                                                [tInd
                                                   {|
                                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                                   inductive_ind := 0 |} [];
                                                tApp
                                                  (tConst
                                                     "MathClasses.interfaces.canonical_names.le"
                                                     [])
                                                  [tInd
                                                     {|
                                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                                     inductive_ind := 0 |} [];
                                                  tConst
                                                    "MathClasses.implementations.peano_naturals.nat_le"
                                                    []];
                                                tConst
                                                  "MathClasses.implementations.peano_naturals.nat_le_dec"
                                                  []];
                                              tApp
                                                (tConst
                                                   "MathClasses.orders.minmax.min"
                                                   [])
                                                [tInd
                                                   {|
                                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                                   inductive_ind := 0 |} [];
                                                tApp
                                                  (tConst
                                                     "MathClasses.interfaces.canonical_names.le"
                                                     [])
                                                  [tInd
                                                     {|
                                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                                     inductive_ind := 0 |} [];
                                                  tConst
                                                    "MathClasses.implementations.peano_naturals.nat_le"
                                                    []];
                                                tConst
                                                  "MathClasses.implementations.peano_naturals.nat_le_dec"
                                                  []];
                                              tApp
                                                (tConst
                                                   "MathClasses.orders.minmax.DistributiveLattice_instance_0"
                                                   [])
                                                [tInd
                                                   {|
                                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                                   inductive_ind := 0 |} [];
                                                tConst
                                                  "MathClasses.implementations.peano_naturals.nat_equiv"
                                                  [];
                                                tApp
                                                  (tConst
                                                     "MathClasses.interfaces.canonical_names.le"
                                                     [])
                                                  [tInd
                                                     {|
                                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                                     inductive_ind := 0 |} [];
                                                  tConst
                                                    "MathClasses.implementations.peano_naturals.nat_le"
                                                    []];
                                                tApp
                                                  (tConst
                                                     "MathClasses.orders.orders.le_total"
                                                     [])
                                                  [tInd
                                                     {|
                                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                                     inductive_ind := 0 |} [];
                                                  tConst
                                                    "MathClasses.implementations.peano_naturals.nat_equiv"
                                                    [];
                                                  tApp
                                                    (tConst
                                                       "MathClasses.theory.strong_setoids.default_apart"
                                                       [])
                                                    [tInd
                                                       {|
                                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                                       inductive_ind := 0 |}
                                                       [];
                                                    tConst
                                                      "MathClasses.implementations.peano_naturals.nat_equiv"
                                                      []];
                                                  tConst
                                                    "MathClasses.implementations.peano_naturals.nat_le"
                                                    [];
                                                  tConst
                                                    "MathClasses.implementations.peano_naturals.nat_lt"
                                                    [];
                                                  tApp
                                                    (tConst
                                                       "MathClasses.orders.semirings.FullPseudoOrder_instance_0"
                                                       [])
                                                    [tInd
                                                       {|
                                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                                       inductive_ind := 0 |}
                                                       [];
                                                    tConst
                                                      "MathClasses.implementations.peano_naturals.nat_equiv"
                                                      [];
                                                    tApp
                                                      (tConst
                                                         "MathClasses.theory.strong_setoids.default_apart"
                                                         [])
                                                      [tInd
                                                         {|
                                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                                         inductive_ind := 0 |}
                                                         [];
                                                      tConst
                                                        "MathClasses.implementations.peano_naturals.nat_equiv"
                                                        []];
                                                    tConst
                                                      "MathClasses.implementations.peano_naturals.nat_plus"
                                                      [];
                                                    tConst
                                                      "MathClasses.implementations.peano_naturals.nat_mult"
                                                      [];
                                                    tConst
                                                      "MathClasses.implementations.peano_naturals.nat_0"
                                                      [];
                                                    tConst
                                                      "MathClasses.implementations.peano_naturals.nat_1"
                                                      [];
                                                    tConst
                                                      "MathClasses.implementations.peano_naturals.nat_le"
                                                      [];
                                                    tConst
                                                      "MathClasses.implementations.peano_naturals.nat_lt"
                                                      [];
                                                    tConst
                                                      "MathClasses.implementations.peano_naturals.FullPseudoSemiRingOrder_instance_0"
                                                      []];
                                                  tApp
                                                    (tConst
                                                       "MathClasses.theory.strong_setoids.default_apart_trivial"
                                                       [])
                                                    [tInd
                                                       {|
                                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                                       inductive_ind := 0 |}
                                                       [];
                                                    tConst
                                                      "MathClasses.implementations.peano_naturals.nat_equiv"
                                                      []];
                                                  tConst
                                                    "MathClasses.implementations.peano_naturals.nat_dec"
                                                    []];
                                                tConst
                                                  "MathClasses.implementations.peano_naturals.nat_le_dec"
                                                  []]]]]]]];
                                  tLambda (nNamed "x")
                                    (tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [])
                                    (tApp (tConst "Coq.Init.Peano.lt" [])
                                       [tRel 0;
                                       tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tApp
                                               (tConstruct
                                                  {|
                                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                                  inductive_ind := 0 |} 1 [])
                                               [tConstruct
                                                  {|
                                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                                  inductive_ind := 0 |} 0 []]]]])]]];
                            tRel 0]];
                        tLambda (nNamed "jf")
                          (tApp
                             (tInd
                                {|
                                inductive_mind := "Coq.Init.Specif.sig";
                                inductive_ind := 0 |} [])
                             [tInd
                                {|
                                inductive_mind := "Coq.Init.Datatypes.nat";
                                inductive_ind := 0 |} [];
                             tLambda (nNamed "x")
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [])
                               (tApp (tConst "Coq.Init.Peano.lt" [])
                                  [tRel 0;
                                  tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 0 []]]]])])
                          (tLambda (nNamed "x")
                             (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                             (tApp
                                (tConst "Helix.HCOL.CarrierType.CarrierAmult"
                                   [])
                                [tRel 0;
                                tApp
                                  (tConst "CoLoR.Util.Vector.VecUtil.Vnth" [])
                                  [tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [];
                                  tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 0 []]]];
                                  tRel 3;
                                  tApp
                                    (tConst "Coq.Init.Specif.proj1_sig" [])
                                    [tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [];
                                    tLambda (nNamed "x")
                                      (tInd
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} [])
                                      (tApp (tConst "Coq.Init.Peano.lt" [])
                                         [tRel 0;
                                         tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tApp
                                              (tConstruct
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} 1 [])
                                              [tApp
                                                 (tConstruct
                                                    {|
                                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                                    inductive_ind := 0 |} 1
                                                    [])
                                                 [tConstruct
                                                    {|
                                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                                    inductive_ind := 0 |} 0
                                                    []]]]]); tRel 1];
                                  tApp
                                    (tConst "Coq.Init.Specif.proj2_sig" [])
                                    [tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [];
                                    tLambda (nNamed "x")
                                      (tInd
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} [])
                                      (tApp (tConst "Coq.Init.Peano.lt" [])
                                         [tRel 0;
                                         tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tApp
                                              (tConstruct
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} 1 [])
                                              [tApp
                                                 (tConstruct
                                                    {|
                                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                                    inductive_ind := 0 |} 1
                                                    [])
                                                 [tConstruct
                                                    {|
                                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                                    inductive_ind := 0 |} 0
                                                    []]]]]); tRel 1]]]));
                        tApp
                          (tConst "Coq.Classes.Morphisms.proper_proper_proxy"
                             [])
                          [tProd nAnon
                             (tApp
                                (tInd
                                   {|
                                   inductive_mind := "Coq.Init.Specif.sig";
                                   inductive_ind := 0 |} [])
                                [tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [];
                                tLambda (nNamed "x")
                                  (tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [])
                                  (tApp (tConst "Coq.Init.Peano.lt" [])
                                     [tRel 0;
                                     tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tApp
                                             (tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 1 [])
                                             [tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 0 []]]]])])
                             (tProd nAnon
                                (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                (tConst "Helix.HCOL.CarrierType.CarrierA" []));
                          tLambda (nNamed "jf")
                            (tApp
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Specif.sig";
                                  inductive_ind := 0 |} [])
                               [tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [];
                               tLambda (nNamed "x")
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [])
                                 (tApp (tConst "Coq.Init.Peano.lt" [])
                                    [tRel 0;
                                    tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 0 []]]]])])
                            (tLambda (nNamed "x")
                               (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                               (tApp
                                  (tConst
                                     "Helix.HCOL.CarrierType.CarrierAmult" [])
                                  [tRel 0;
                                  tApp
                                    (tConst "CoLoR.Util.Vector.VecUtil.Vnth"
                                       [])
                                    [tConst "Helix.HCOL.CarrierType.CarrierA"
                                       [];
                                    tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 0 []]]];
                                    tRel 3;
                                    tApp
                                      (tConst "Coq.Init.Specif.proj1_sig" [])
                                      [tInd
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} [];
                                      tLambda (nNamed "x")
                                        (tInd
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} [])
                                        (tApp (tConst "Coq.Init.Peano.lt" [])
                                           [tRel 0;
                                           tApp
                                             (tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 1 [])
                                             [tApp
                                                (tConstruct
                                                   {|
                                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                                   inductive_ind := 0 |} 1 [])
                                                [tApp
                                                   (tConstruct
                                                      {|
                                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                                      inductive_ind := 0 |} 1
                                                      [])
                                                   [tConstruct
                                                      {|
                                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                                      inductive_ind := 0 |} 0
                                                      []]]]]); tRel 1];
                                    tApp
                                      (tConst "Coq.Init.Specif.proj2_sig" [])
                                      [tInd
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} [];
                                      tLambda (nNamed "x")
                                        (tInd
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} [])
                                        (tApp (tConst "Coq.Init.Peano.lt" [])
                                           [tRel 0;
                                           tApp
                                             (tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 1 [])
                                             [tApp
                                                (tConstruct
                                                   {|
                                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                                   inductive_ind := 0 |} 1 [])
                                                [tApp
                                                   (tConstruct
                                                      {|
                                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                                      inductive_ind := 0 |} 1
                                                      [])
                                                   [tConstruct
                                                      {|
                                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                                      inductive_ind := 0 |} 0
                                                      []]]]]); tRel 1]]]));
                          tApp (tConst "Coq.Classes.Morphisms.respectful" [])
                            [tApp
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Specif.sig";
                                  inductive_ind := 0 |} [])
                               [tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [];
                               tLambda (nNamed "x")
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [])
                                 (tApp (tConst "Coq.Init.Peano.lt" [])
                                    [tRel 0;
                                    tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 0 []]]]])];
                            tProd nAnon
                              (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                              (tConst "Helix.HCOL.CarrierType.CarrierA" []);
                            tApp
                              (tConst
                                 "MathClasses.interfaces.canonical_names.equiv"
                                 [])
                              [tApp
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Specif.sig";
                                    inductive_ind := 0 |} [])
                                 [tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [];
                                 tLambda (nNamed "x")
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [])
                                   (tApp (tConst "Coq.Init.Peano.lt" [])
                                      [tRel 0;
                                      tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tApp
                                              (tConstruct
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} 1 [])
                                              [tConstruct
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} 0 []]]]])];
                              tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                                [tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [];
                                tConst
                                  "MathClasses.implementations.peano_naturals.nat_equiv"
                                  [];
                                tLambda (nNamed "x")
                                  (tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [])
                                  (tApp (tConst "Coq.Init.Peano.lt" [])
                                     [tRel 0;
                                     tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tApp
                                             (tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 1 [])
                                             [tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 0 []]]]])]];
                            tApp
                              (tConst "Coq.Classes.Morphisms.respectful" [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tApp
                                (tConst
                                   "MathClasses.interfaces.canonical_names.equiv"
                                   [])
                                [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tConst "Helix.HCOL.CarrierType.CarrierAe" []];
                              tApp
                                (tConst
                                   "MathClasses.interfaces.canonical_names.equiv"
                                   [])
                                [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tConst "Helix.HCOL.CarrierType.CarrierAe" []]]];
                          tApp
                            (tConst
                               "Helix.SigmaHCOL.SigmaHCOLRewriting.mult_by_nth_proper"
                               [])
                            [tApp
                               (tConstruct
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} 1 [])
                               [tApp
                                  (tConstruct
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} 1 [])
                                  [tApp
                                     (tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 1 [])
                                     [tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 0 []]]];
                            tRel 1]]]];
                    tApp (tConst "Helix.SigmaHCOL.SigmaHCOL.SHInductor" [])
                      [tConst "Helix.SigmaHCOL.Rtheta.Monoid_RthetaSafeFlags"
                         [];
                      tApp (tConst "Coq.Init.Specif.proj1_sig" [])
                        [tInd
                           {|
                           inductive_mind := "Coq.Init.Datatypes.nat";
                           inductive_ind := 0 |} [];
                        tLambda (nNamed "x")
                          (tInd
                             {|
                             inductive_mind := "Coq.Init.Datatypes.nat";
                             inductive_ind := 0 |} [])
                          (tApp (tConst "Coq.Init.Peano.lt" [])
                             [tRel 0;
                             tApp
                               (tConstruct
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} 1 [])
                               [tApp
                                  (tConstruct
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} 1 [])
                                  [tApp
                                     (tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 1 [])
                                     [tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 0 []]]]]);
                        tRel 0];
                      tConst "Helix.HCOL.CarrierType.CarrierAmult" [];
                      tApp
                        (tConst
                           "MathClasses.interfaces.abstract_algebra.sg_op_proper"
                           [])
                        [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                        tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                        tConst "Helix.HCOL.CarrierType.CarrierAmult" [];
                        tApp
                          (tConst
                             "MathClasses.interfaces.abstract_algebra.monoid_semigroup"
                             [])
                          [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                          tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                          tConst "Helix.HCOL.CarrierType.CarrierAmult" [];
                          tApp
                            (tConst
                               "MathClasses.interfaces.canonical_names.one_is_mon_unit"
                               [])
                            [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                            tConst "Helix.HCOL.CarrierType.CarrierA1" []];
                          tApp
                            (tConst
                               "MathClasses.interfaces.abstract_algebra.commonoid_mon"
                               [])
                            [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                            tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                            tConst "Helix.HCOL.CarrierType.CarrierAmult" [];
                            tApp
                              (tConst
                                 "MathClasses.interfaces.canonical_names.one_is_mon_unit"
                                 [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tConst "Helix.HCOL.CarrierType.CarrierA1" []];
                            tApp
                              (tConst
                                 "MathClasses.interfaces.abstract_algebra.semimult_monoid"
                                 [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAplus" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAmult" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAz" [];
                              tConst "Helix.HCOL.CarrierType.CarrierA1" [];
                              tApp
                                (tConst "MathClasses.theory.rings.Ring_Semi"
                                   [])
                                [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                                tConst "Helix.HCOL.CarrierType.CarrierAplus"
                                  [];
                                tConst "Helix.HCOL.CarrierType.CarrierAmult"
                                  [];
                                tConst "Helix.HCOL.CarrierType.CarrierAz" [];
                                tConst "Helix.HCOL.CarrierType.CarrierA1" [];
                                tConst "Helix.HCOL.CarrierType.CarrierAneg"
                                  [];
                                tConst "Helix.HCOL.CarrierType.CarrierAr" []]]]]];
                      tApp
                        (tConst "MathClasses.interfaces.canonical_names.one"
                           [])
                        [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                        tConst "Helix.HCOL.CarrierType.CarrierA1" []]]];
                  tApp (tConst "Helix.SigmaHCOL.SigmaHCOL.Embed" [])
                    [tConst "Helix.SigmaHCOL.Rtheta.Monoid_RthetaSafeFlags"
                       [];
                    tApp (tConst "Coq.Init.Nat.add" [])
                      [tApp
                         (tConstruct
                            {|
                            inductive_mind := "Coq.Init.Datatypes.nat";
                            inductive_ind := 0 |} 1 [])
                         [tConstruct
                            {|
                            inductive_mind := "Coq.Init.Datatypes.nat";
                            inductive_ind := 0 |} 0 []];
                      tApp
                        (tConstruct
                           {|
                           inductive_mind := "Coq.Init.Datatypes.nat";
                           inductive_ind := 0 |} 1 [])
                        [tApp
                           (tConstruct
                              {|
                              inductive_mind := "Coq.Init.Datatypes.nat";
                              inductive_ind := 0 |} 1 [])
                           [tApp
                              (tConstruct
                                 {|
                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                 inductive_ind := 0 |} 1 [])
                              [tApp
                                 (tConstruct
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} 1 [])
                                 [tConstruct
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} 0 []]]]]];
                    tConstruct
                      {|
                      inductive_mind := "Coq.Init.Datatypes.nat";
                      inductive_ind := 0 |} 0 [];
                    tApp
                      (tConst
                         "Helix.SigmaHCOL.SigmaHCOLRewriting.GathH1_domain_bound_to_base_bound"
                         [])
                      [tApp (tConst "Coq.Init.Nat.add" [])
                         [tApp
                            (tConstruct
                               {|
                               inductive_mind := "Coq.Init.Datatypes.nat";
                               inductive_ind := 0 |} 1 [])
                            [tConstruct
                               {|
                               inductive_mind := "Coq.Init.Datatypes.nat";
                               inductive_ind := 0 |} 0 []];
                         tApp
                           (tConstruct
                              {|
                              inductive_mind := "Coq.Init.Datatypes.nat";
                              inductive_ind := 0 |} 1 [])
                           [tApp
                              (tConstruct
                                 {|
                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                 inductive_ind := 0 |} 1 [])
                              [tApp
                                 (tConstruct
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} 1 [])
                                 [tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 0 []]]]]];
                      tConstruct
                        {|
                        inductive_mind := "Coq.Init.Datatypes.nat";
                        inductive_ind := 0 |} 0 [];
                      tApp
                        (tConstruct
                           {|
                           inductive_mind := "Coq.Init.Datatypes.nat";
                           inductive_ind := 0 |} 1 [])
                        [tConstruct
                           {|
                           inductive_mind := "Coq.Init.Datatypes.nat";
                           inductive_ind := 0 |} 0 []];
                      tApp
                        (tConst
                           "Helix.SigmaHCOL.SigmaHCOLRewriting.h_bound_first_half"
                           [])
                        [tApp
                           (tConstruct
                              {|
                              inductive_mind := "Coq.Init.Datatypes.nat";
                              inductive_ind := 0 |} 1 [])
                           [tConstruct
                              {|
                              inductive_mind := "Coq.Init.Datatypes.nat";
                              inductive_ind := 0 |} 0 []];
                        tApp
                          (tConstruct
                             {|
                             inductive_mind := "Coq.Init.Datatypes.nat";
                             inductive_ind := 0 |} 1 [])
                          [tApp
                             (tConstruct
                                {|
                                inductive_mind := "Coq.Init.Datatypes.nat";
                                inductive_ind := 0 |} 1 [])
                             [tApp
                                (tConstruct
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} 1 [])
                                [tApp
                                   (tConstruct
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} 1 [])
                                   [tConstruct
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} 0 []]]]]]]]])]]];
       tApp (tConst "Helix.SigmaHCOL.SigmaHCOL.SHCompose" [])
         [tConst "Helix.SigmaHCOL.Rtheta.Monoid_RthetaFlags" [];
         tApp (tConst "Coq.Init.Nat.add" [])
           [tApp
              (tConstruct
                 {|
                 inductive_mind := "Coq.Init.Datatypes.nat";
                 inductive_ind := 0 |} 1 [])
              [tConstruct
                 {|
                 inductive_mind := "Coq.Init.Datatypes.nat";
                 inductive_ind := 0 |} 0 []];
           tApp
             (tConstruct
                {|
                inductive_mind := "Coq.Init.Datatypes.nat";
                inductive_ind := 0 |} 1 [])
             [tApp
                (tConstruct
                   {|
                   inductive_mind := "Coq.Init.Datatypes.nat";
                   inductive_ind := 0 |} 1 [])
                [tApp
                   (tConstruct
                      {|
                      inductive_mind := "Coq.Init.Datatypes.nat";
                      inductive_ind := 0 |} 1 [])
                   [tApp
                      (tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 1 [])
                      [tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 0 []]]]]];
         tApp
           (tConstruct
              {|
              inductive_mind := "Coq.Init.Datatypes.nat";
              inductive_ind := 0 |} 1 [])
           [tConstruct
              {|
              inductive_mind := "Coq.Init.Datatypes.nat";
              inductive_ind := 0 |} 0 []];
         tApp
           (tConstruct
              {|
              inductive_mind := "Coq.Init.Datatypes.nat";
              inductive_ind := 0 |} 1 [])
           [tApp
              (tConstruct
                 {|
                 inductive_mind := "Coq.Init.Datatypes.nat";
                 inductive_ind := 0 |} 1 [])
              [tConstruct
                 {|
                 inductive_mind := "Coq.Init.Datatypes.nat";
                 inductive_ind := 0 |} 0 []]];
         tApp (tConst "Helix.SigmaHCOL.SigmaHCOL.eUnion" [])
           [tConst "Helix.SigmaHCOL.Rtheta.Monoid_RthetaFlags" [];
           tApp
             (tConstruct
                {|
                inductive_mind := "Coq.Init.Datatypes.nat";
                inductive_ind := 0 |} 1 [])
             [tApp
                (tConstruct
                   {|
                   inductive_mind := "Coq.Init.Datatypes.nat";
                   inductive_ind := 0 |} 1 [])
                [tConstruct
                   {|
                   inductive_mind := "Coq.Init.Datatypes.nat";
                   inductive_ind := 0 |} 0 []]];
           tApp
             (tConstruct
                {|
                inductive_mind := "Coq.Init.Datatypes.nat";
                inductive_ind := 0 |} 1 [])
             [tConstruct
                {|
                inductive_mind := "Coq.Init.Datatypes.nat";
                inductive_ind := 0 |} 0 []];
           tApp
             (tConstruct
                {|
                inductive_mind := "Coq.Init.Peano.le";
                inductive_ind := 0 |} 0 [])
             [tApp
                (tConstruct
                   {|
                   inductive_mind := "Coq.Init.Datatypes.nat";
                   inductive_ind := 0 |} 1 [])
                [tApp
                   (tConstruct
                      {|
                      inductive_mind := "Coq.Init.Datatypes.nat";
                      inductive_ind := 0 |} 1 [])
                   [tConstruct
                      {|
                      inductive_mind := "Coq.Init.Datatypes.nat";
                      inductive_ind := 0 |} 0 []]]];
           tApp (tConst "MathClasses.interfaces.canonical_names.zero" [])
             [tConst "Helix.HCOL.CarrierType.CarrierA" [];
             tConst "Helix.HCOL.CarrierType.CarrierAz" []]];
         tApp (tConst "Helix.SigmaHCOL.TSigmaHCOL.SafeCast" [])
           [tApp (tConst "Coq.Init.Nat.add" [])
              [tApp
                 (tConstruct
                    {|
                    inductive_mind := "Coq.Init.Datatypes.nat";
                    inductive_ind := 0 |} 1 [])
                 [tConstruct
                    {|
                    inductive_mind := "Coq.Init.Datatypes.nat";
                    inductive_ind := 0 |} 0 []];
              tApp
                (tConstruct
                   {|
                   inductive_mind := "Coq.Init.Datatypes.nat";
                   inductive_ind := 0 |} 1 [])
                [tApp
                   (tConstruct
                      {|
                      inductive_mind := "Coq.Init.Datatypes.nat";
                      inductive_ind := 0 |} 1 [])
                   [tApp
                      (tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 1 [])
                      [tApp
                         (tConstruct
                            {|
                            inductive_mind := "Coq.Init.Datatypes.nat";
                            inductive_ind := 0 |} 1 [])
                         [tConstruct
                            {|
                            inductive_mind := "Coq.Init.Datatypes.nat";
                            inductive_ind := 0 |} 0 []]]]]];
           tApp
             (tConstruct
                {|
                inductive_mind := "Coq.Init.Datatypes.nat";
                inductive_ind := 0 |} 1 [])
             [tConstruct
                {|
                inductive_mind := "Coq.Init.Datatypes.nat";
                inductive_ind := 0 |} 0 []];
           tApp (tConst "Helix.SigmaHCOL.SigmaHCOL.IReduction" [])
             [tApp (tConst "Coq.Init.Nat.add" [])
                [tApp
                   (tConstruct
                      {|
                      inductive_mind := "Coq.Init.Datatypes.nat";
                      inductive_ind := 0 |} 1 [])
                   [tConstruct
                      {|
                      inductive_mind := "Coq.Init.Datatypes.nat";
                      inductive_ind := 0 |} 0 []];
                tApp
                  (tConstruct
                     {|
                     inductive_mind := "Coq.Init.Datatypes.nat";
                     inductive_ind := 0 |} 1 [])
                  [tApp
                     (tConstruct
                        {|
                        inductive_mind := "Coq.Init.Datatypes.nat";
                        inductive_ind := 0 |} 1 [])
                     [tApp
                        (tConstruct
                           {|
                           inductive_mind := "Coq.Init.Datatypes.nat";
                           inductive_ind := 0 |} 1 [])
                        [tApp
                           (tConstruct
                              {|
                              inductive_mind := "Coq.Init.Datatypes.nat";
                              inductive_ind := 0 |} 1 [])
                           [tConstruct
                              {|
                              inductive_mind := "Coq.Init.Datatypes.nat";
                              inductive_ind := 0 |} 0 []]]]]];
             tApp
               (tConstruct
                  {|
                  inductive_mind := "Coq.Init.Datatypes.nat";
                  inductive_ind := 0 |} 1 [])
               [tConstruct
                  {|
                  inductive_mind := "Coq.Init.Datatypes.nat";
                  inductive_ind := 0 |} 0 []];
             tApp
               (tConstruct
                  {|
                  inductive_mind := "Coq.Init.Datatypes.nat";
                  inductive_ind := 0 |} 1 [])
               [tApp
                  (tConstruct
                     {|
                     inductive_mind := "Coq.Init.Datatypes.nat";
                     inductive_ind := 0 |} 1 [])
                  [tConstruct
                     {|
                     inductive_mind := "Coq.Init.Datatypes.nat";
                     inductive_ind := 0 |} 0 []]];
             tApp (tConst "MathClasses.orders.minmax.max" [])
               [tConst "Helix.HCOL.CarrierType.CarrierA" [];
               tConst "Helix.HCOL.CarrierType.CarrierAle" [];
               tConst "Helix.HCOL.CarrierType.CarrierAledec" []];
             tApp
               (tConst "MathClasses.interfaces.abstract_algebra.sg_op_proper"
                  [])
               [tConst "Helix.HCOL.CarrierType.CarrierA" [];
               tConst "Helix.HCOL.CarrierType.CarrierAe" [];
               tLambda (nNamed "x")
                 (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                 (tLambda (nNamed "y")
                    (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                    (tApp (tConst "Coq.Init.Datatypes.snd" [])
                       [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                       tConst "Helix.HCOL.CarrierType.CarrierA" [];
                       tApp (tConst "MathClasses.orders.minmax.sort" [])
                         [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                         tConst "Helix.HCOL.CarrierType.CarrierAle" [];
                         tConst "Helix.HCOL.CarrierType.CarrierAledec" [];
                         tRel 1; tRel 0]]));
               tApp
                 (tConst
                    "MathClasses.interfaces.abstract_algebra.comsg_setoid" [])
                 [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                 tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                 tLambda (nNamed "x")
                   (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                   (tLambda (nNamed "y")
                      (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                      (tApp (tConst "Coq.Init.Datatypes.snd" [])
                         [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                         tConst "Helix.HCOL.CarrierType.CarrierA" [];
                         tApp (tConst "MathClasses.orders.minmax.sort" [])
                           [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                           tConst "Helix.HCOL.CarrierType.CarrierAle" [];
                           tConst "Helix.HCOL.CarrierType.CarrierAledec" [];
                           tRel 1; tRel 0]]));
                 tApp
                   (tConst
                      "MathClasses.interfaces.abstract_algebra.semilattice_sg"
                      [])
                   [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                   tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                   tLambda (nNamed "x")
                     (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                     (tLambda (nNamed "y")
                        (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                        (tApp (tConst "Coq.Init.Datatypes.snd" [])
                           [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                           tConst "Helix.HCOL.CarrierType.CarrierA" [];
                           tApp (tConst "MathClasses.orders.minmax.sort" [])
                             [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                             tConst "Helix.HCOL.CarrierType.CarrierAle" [];
                             tConst "Helix.HCOL.CarrierType.CarrierAledec" [];
                             tRel 1; tRel 0]]));
                   tApp
                     (tConst
                        "MathClasses.interfaces.abstract_algebra.join_semilattice"
                        [])
                     [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                     tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                     tLambda (nNamed "x")
                       (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                       (tLambda (nNamed "y")
                          (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                          (tApp (tConst "Coq.Init.Datatypes.snd" [])
                             [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                             tConst "Helix.HCOL.CarrierType.CarrierA" [];
                             tApp
                               (tConst "MathClasses.orders.minmax.sort" [])
                               [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                               tConst "Helix.HCOL.CarrierType.CarrierAle" [];
                               tConst "Helix.HCOL.CarrierType.CarrierAledec"
                                 []; tRel 1; tRel 0]]));
                     tApp
                       (tConst
                          "MathClasses.interfaces.abstract_algebra.lattice_join"
                          [])
                       [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                       tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                       tLambda (nNamed "x")
                         (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                         (tLambda (nNamed "y")
                            (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                            (tApp (tConst "Coq.Init.Datatypes.snd" [])
                               [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                               tConst "Helix.HCOL.CarrierType.CarrierA" [];
                               tApp
                                 (tConst "MathClasses.orders.minmax.sort" [])
                                 [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                 tConst "Helix.HCOL.CarrierType.CarrierAle"
                                   [];
                                 tConst
                                   "Helix.HCOL.CarrierType.CarrierAledec" [];
                                 tRel 1; tRel 0]]));
                       tApp (tConst "MathClasses.orders.minmax.min" [])
                         [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                         tConst "Helix.HCOL.CarrierType.CarrierAle" [];
                         tConst "Helix.HCOL.CarrierType.CarrierAledec" []];
                       tApp
                         (tConst
                            "MathClasses.interfaces.abstract_algebra.distr_lattice_lattice"
                            [])
                         [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                         tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                         tLambda (nNamed "x")
                           (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                           (tLambda (nNamed "y")
                              (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                              (tApp (tConst "Coq.Init.Datatypes.snd" [])
                                 [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                 tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                 tApp
                                   (tConst "MathClasses.orders.minmax.sort"
                                      [])
                                   [tConst "Helix.HCOL.CarrierType.CarrierA"
                                      [];
                                   tConst "Helix.HCOL.CarrierType.CarrierAle"
                                     [];
                                   tConst
                                     "Helix.HCOL.CarrierType.CarrierAledec"
                                     []; tRel 1; tRel 0]]));
                         tApp (tConst "MathClasses.orders.minmax.min" [])
                           [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                           tConst "Helix.HCOL.CarrierType.CarrierAle" [];
                           tConst "Helix.HCOL.CarrierType.CarrierAledec" []];
                         tApp
                           (tConst
                              "MathClasses.orders.minmax.DistributiveLattice_instance_0"
                              [])
                           [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                           tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                           tConst "Helix.HCOL.CarrierType.CarrierAle" [];
                           tConst "Helix.HCOL.CarrierType.CarrierAto" [];
                           tConst "Helix.HCOL.CarrierType.CarrierAledec" []]]]]]]];
             tApp (tConst "MathClasses.interfaces.canonical_names.zero" [])
               [tConst "Helix.HCOL.CarrierType.CarrierA" [];
               tConst "Helix.HCOL.CarrierType.CarrierAz" []];
             tLambda (nNamed "jf")
               (tApp
                  (tInd
                     {|
                     inductive_mind := "Coq.Init.Specif.sig";
                     inductive_ind := 0 |} [])
                  [tInd
                     {|
                     inductive_mind := "Coq.Init.Datatypes.nat";
                     inductive_ind := 0 |} [];
                  tLambda (nNamed "x")
                    (tInd
                       {|
                       inductive_mind := "Coq.Init.Datatypes.nat";
                       inductive_ind := 0 |} [])
                    (tApp (tConst "Coq.Init.Peano.lt" [])
                       [tRel 0;
                       tApp
                         (tConstruct
                            {|
                            inductive_mind := "Coq.Init.Datatypes.nat";
                            inductive_ind := 0 |} 1 [])
                         [tApp
                            (tConstruct
                               {|
                               inductive_mind := "Coq.Init.Datatypes.nat";
                               inductive_ind := 0 |} 1 [])
                            [tConstruct
                               {|
                               inductive_mind := "Coq.Init.Datatypes.nat";
                               inductive_ind := 0 |} 0 []]]])])
               (tApp (tConst "Helix.SigmaHCOL.SigmaHCOL.SHCompose" [])
                  [tConst "Helix.SigmaHCOL.Rtheta.Monoid_RthetaSafeFlags" [];
                  tApp (tConst "Coq.Init.Nat.add" [])
                    [tApp
                       (tConstruct
                          {|
                          inductive_mind := "Coq.Init.Datatypes.nat";
                          inductive_ind := 0 |} 1 [])
                       [tConstruct
                          {|
                          inductive_mind := "Coq.Init.Datatypes.nat";
                          inductive_ind := 0 |} 0 []];
                    tApp
                      (tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 1 [])
                      [tApp
                         (tConstruct
                            {|
                            inductive_mind := "Coq.Init.Datatypes.nat";
                            inductive_ind := 0 |} 1 [])
                         [tApp
                            (tConstruct
                               {|
                               inductive_mind := "Coq.Init.Datatypes.nat";
                               inductive_ind := 0 |} 1 [])
                            [tApp
                               (tConstruct
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} 1 [])
                               [tConstruct
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} 0 []]]]]];
                  tApp (tConst "Coq.Init.Nat.add" [])
                    [tApp
                       (tConstruct
                          {|
                          inductive_mind := "Coq.Init.Datatypes.nat";
                          inductive_ind := 0 |} 1 [])
                       [tConstruct
                          {|
                          inductive_mind := "Coq.Init.Datatypes.nat";
                          inductive_ind := 0 |} 0 []];
                    tApp
                      (tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 1 [])
                      [tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 0 []]];
                  tApp
                    (tConstruct
                       {|
                       inductive_mind := "Coq.Init.Datatypes.nat";
                       inductive_ind := 0 |} 1 [])
                    [tConstruct
                       {|
                       inductive_mind := "Coq.Init.Datatypes.nat";
                       inductive_ind := 0 |} 0 []];
                  tApp (tConst "Helix.SigmaHCOL.SigmaHCOL.SHBinOp" [])
                    [tConst "Helix.SigmaHCOL.Rtheta.Monoid_RthetaSafeFlags"
                       [];
                    tApp
                      (tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 1 [])
                      [tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 0 []];
                    tLambda (nNamed "i")
                      (tApp
                         (tInd
                            {|
                            inductive_mind := "Coq.Init.Specif.sig";
                            inductive_ind := 0 |} [])
                         [tInd
                            {|
                            inductive_mind := "Coq.Init.Datatypes.nat";
                            inductive_ind := 0 |} [];
                         tLambda (nNamed "n")
                           (tInd
                              {|
                              inductive_mind := "Coq.Init.Datatypes.nat";
                              inductive_ind := 0 |} [])
                           (tApp (tConst "Coq.Init.Peano.lt" [])
                              [tRel 0;
                              tApp
                                (tConstruct
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} 1 [])
                                [tConstruct
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} 0 []]])])
                      (tLambda (nNamed "a0")
                         (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                         (tLambda (nNamed "b")
                            (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                            (tApp
                               (tConst
                                  "MathClasses.interfaces.canonical_names.abs"
                                  [])
                               [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                               tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                               tConst "Helix.HCOL.CarrierType.CarrierAle" [];
                               tConst "Helix.HCOL.CarrierType.CarrierAz" [];
                               tConst "Helix.HCOL.CarrierType.CarrierAneg" [];
                               tConst "Helix.HCOL.CarrierType.CarrierAabs" [];
                               tApp (tConst "Coq.Program.Basics.compose" [])
                                 [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                 tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                 tProd nAnon
                                   (tConst "Helix.HCOL.CarrierType.CarrierA"
                                      [])
                                   (tConst "Helix.HCOL.CarrierType.CarrierA"
                                      []);
                                 tApp
                                   (tConst
                                      "MathClasses.interfaces.canonical_names.plus"
                                      [])
                                   [tConst "Helix.HCOL.CarrierType.CarrierA"
                                      [];
                                   tConst
                                     "Helix.HCOL.CarrierType.CarrierAplus" []];
                                 tApp
                                   (tConst
                                      "MathClasses.interfaces.canonical_names.negate"
                                      [])
                                   [tConst "Helix.HCOL.CarrierType.CarrierA"
                                      [];
                                   tConst
                                     "Helix.HCOL.CarrierType.CarrierAneg" []];
                                 tRel 1; tRel 0]])));
                    tApp
                      (tConst
                         "Helix.SigmaHCOL.SigmaHCOLRewriting.FinNat_f1_over_g2_proper"
                         [])
                      [tApp
                         (tConstruct
                            {|
                            inductive_mind := "Coq.Init.Datatypes.nat";
                            inductive_ind := 0 |} 1 [])
                         [tConstruct
                            {|
                            inductive_mind := "Coq.Init.Datatypes.nat";
                            inductive_ind := 0 |} 0 []];
                      tLambda nAnon
                        (tApp
                           (tInd
                              {|
                              inductive_mind := "Coq.Init.Specif.sig";
                              inductive_ind := 0 |} [])
                           [tInd
                              {|
                              inductive_mind := "Coq.Init.Datatypes.nat";
                              inductive_ind := 0 |} [];
                           tLambda (nNamed "i")
                             (tInd
                                {|
                                inductive_mind := "Coq.Init.Datatypes.nat";
                                inductive_ind := 0 |} [])
                             (tApp
                                (tConst
                                   "MathClasses.interfaces.canonical_names.lt"
                                   [])
                                [tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [];
                                tConst
                                  "MathClasses.implementations.peano_naturals.nat_lt"
                                  []; tRel 0;
                                tApp
                                  (tConstruct
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} 1 [])
                                  [tConstruct
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} 0 []]])])
                        (tApp
                           (tConst
                              "MathClasses.interfaces.canonical_names.abs" [])
                           [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                           tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                           tConst "Helix.HCOL.CarrierType.CarrierAle" [];
                           tConst "Helix.HCOL.CarrierType.CarrierAz" [];
                           tConst "Helix.HCOL.CarrierType.CarrierAneg" [];
                           tConst "Helix.HCOL.CarrierType.CarrierAabs" []]);
                      tLambda nAnon
                        (tApp
                           (tInd
                              {|
                              inductive_mind := "Coq.Init.Specif.sig";
                              inductive_ind := 0 |} [])
                           [tInd
                              {|
                              inductive_mind := "Coq.Init.Datatypes.nat";
                              inductive_ind := 0 |} [];
                           tLambda (nNamed "x")
                             (tInd
                                {|
                                inductive_mind := "Coq.Init.Datatypes.nat";
                                inductive_ind := 0 |} [])
                             (tApp (tConst "Coq.Init.Peano.lt" [])
                                [tRel 0;
                                tApp
                                  (tConstruct
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} 1 [])
                                  [tConstruct
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} 0 []]])])
                        (tApp (tConst "Coq.Program.Basics.compose" [])
                           [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                           tConst "Helix.HCOL.CarrierType.CarrierA" [];
                           tProd nAnon
                             (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                             (tConst "Helix.HCOL.CarrierType.CarrierA" []);
                           tApp
                             (tConst
                                "MathClasses.interfaces.canonical_names.plus"
                                [])
                             [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                             tConst "Helix.HCOL.CarrierType.CarrierAplus" []];
                           tApp
                             (tConst
                                "MathClasses.interfaces.canonical_names.negate"
                                [])
                             [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                             tConst "Helix.HCOL.CarrierType.CarrierAneg" []]]);
                      tApp
                        (tConst
                           "Coq.Classes.Morphisms.Reflexive_partial_app_morphism"
                           [])
                        [tProd nAnon
                           (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                           (tConst "Helix.HCOL.CarrierType.CarrierA" []);
                        tProd nAnon
                          (tApp
                             (tInd
                                {|
                                inductive_mind := "Coq.Init.Specif.sig";
                                inductive_ind := 0 |} [])
                             [tInd
                                {|
                                inductive_mind := "Coq.Init.Datatypes.nat";
                                inductive_ind := 0 |} [];
                             tLambda (nNamed "x")
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [])
                               (tApp (tConst "Coq.Init.Peano.lt" [])
                                  [tRel 0;
                                  tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 0 []]])])
                          (tProd nAnon
                             (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                             (tConst "Helix.HCOL.CarrierType.CarrierA" []));
                        tApp (tConst "Coq.Classes.Morphisms.respectful" [])
                          [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                          tConst "Helix.HCOL.CarrierType.CarrierA" [];
                          tApp
                            (tConst
                               "MathClasses.interfaces.canonical_names.equiv"
                               [])
                            [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                            tConst "Helix.HCOL.CarrierType.CarrierAe" []];
                          tApp
                            (tConst
                               "MathClasses.interfaces.canonical_names.equiv"
                               [])
                            [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                            tConst "Helix.HCOL.CarrierType.CarrierAe" []]];
                        tApp (tConst "Coq.Classes.Morphisms.respectful" [])
                          [tApp
                             (tInd
                                {|
                                inductive_mind := "Coq.Init.Specif.sig";
                                inductive_ind := 0 |} [])
                             [tInd
                                {|
                                inductive_mind := "Coq.Init.Datatypes.nat";
                                inductive_ind := 0 |} [];
                             tLambda (nNamed "x")
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [])
                               (tApp (tConst "Coq.Init.Peano.lt" [])
                                  [tRel 0;
                                  tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 0 []]])];
                          tProd nAnon
                            (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                            (tConst "Helix.HCOL.CarrierType.CarrierA" []);
                          tApp
                            (tConst
                               "MathClasses.interfaces.canonical_names.equiv"
                               [])
                            [tApp
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Specif.sig";
                                  inductive_ind := 0 |} [])
                               [tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [];
                               tLambda (nNamed "x")
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [])
                                 (tApp (tConst "Coq.Init.Peano.lt" [])
                                    [tRel 0;
                                    tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 0 []]])];
                            tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                              [tInd
                                 {|
                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                 inductive_ind := 0 |} [];
                              tConst
                                "MathClasses.implementations.peano_naturals.nat_equiv"
                                [];
                              tLambda (nNamed "x")
                                (tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [])
                                (tApp (tConst "Coq.Init.Peano.lt" [])
                                   [tRel 0;
                                   tApp
                                     (tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 1 [])
                                     [tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 0 []]])]];
                          tApp (tConst "Coq.Classes.Morphisms.respectful" [])
                            [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                            tConst "Helix.HCOL.CarrierType.CarrierA" [];
                            tApp
                              (tConst
                                 "MathClasses.interfaces.canonical_names.equiv"
                                 [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAe" []];
                            tApp
                              (tConst
                                 "MathClasses.interfaces.canonical_names.equiv"
                                 [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAe" []]]];
                        tLambda (nNamed "f")
                          (tProd nAnon
                             (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                             (tConst "Helix.HCOL.CarrierType.CarrierA" []))
                          (tLambda nAnon
                             (tApp
                                (tInd
                                   {|
                                   inductive_mind := "Coq.Init.Specif.sig";
                                   inductive_ind := 0 |} [])
                                [tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [];
                                tLambda (nNamed "i")
                                  (tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [])
                                  (tApp
                                     (tConst
                                        "MathClasses.interfaces.canonical_names.lt"
                                        [])
                                     [tInd
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} [];
                                     tConst
                                       "MathClasses.implementations.peano_naturals.nat_lt"
                                       []; tRel 0;
                                     tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 0 []]])])
                             (tRel 1));
                        tApp
                          (tConst "Helix.HCOL.HCOL.IgnoredIndex_proper" [])
                          [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                          tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                          tApp
                            (tConstruct
                               {|
                               inductive_mind := "Coq.Init.Datatypes.nat";
                               inductive_ind := 0 |} 1 [])
                            [tConstruct
                               {|
                               inductive_mind := "Coq.Init.Datatypes.nat";
                               inductive_ind := 0 |} 0 []]];
                        tApp
                          (tConst
                             "MathClasses.interfaces.canonical_names.abs" [])
                          [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                          tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                          tConst "Helix.HCOL.CarrierType.CarrierAle" [];
                          tConst "Helix.HCOL.CarrierType.CarrierAz" [];
                          tConst "Helix.HCOL.CarrierType.CarrierAneg" [];
                          tConst "Helix.HCOL.CarrierType.CarrierAabs" []];
                        tApp
                          (tConst "Coq.Classes.Morphisms.proper_proper_proxy"
                             [])
                          [tProd nAnon
                             (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                             (tConst "Helix.HCOL.CarrierType.CarrierA" []);
                          tApp
                            (tConst
                               "MathClasses.interfaces.canonical_names.abs"
                               [])
                            [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                            tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                            tConst "Helix.HCOL.CarrierType.CarrierAle" [];
                            tConst "Helix.HCOL.CarrierType.CarrierAz" [];
                            tConst "Helix.HCOL.CarrierType.CarrierAneg" [];
                            tConst "Helix.HCOL.CarrierType.CarrierAabs" []];
                          tApp (tConst "Coq.Classes.Morphisms.respectful" [])
                            [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                            tConst "Helix.HCOL.CarrierType.CarrierA" [];
                            tApp
                              (tConst
                                 "MathClasses.interfaces.canonical_names.equiv"
                                 [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAe" []];
                            tApp
                              (tConst
                                 "MathClasses.interfaces.canonical_names.equiv"
                                 [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAe" []]];
                          tApp
                            (tConst
                               "MathClasses.interfaces.abstract_algebra.sm_proper"
                               [])
                            [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                            tConst "Helix.HCOL.CarrierType.CarrierA" [];
                            tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                            tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                            tApp
                              (tConst
                                 "MathClasses.interfaces.canonical_names.abs"
                                 [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAle" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAz" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAneg" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAabs" []];
                            tApp
                              (tConst "Helix.Util.Misc.abs_Setoid_Morphism"
                                 [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAplus" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAmult" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAz" [];
                              tConst "Helix.HCOL.CarrierType.CarrierA1" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAneg" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAr" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAsetoid"
                                [];
                              tConst "Helix.HCOL.CarrierType.CarrierAle" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAto" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAabs" []]]]];
                      tApp
                        (tConst
                           "Coq.Classes.Morphisms.Reflexive_partial_app_morphism"
                           [])
                        [tProd nAnon
                           (tApp
                              (tInd
                                 {|
                                 inductive_mind := "Coq.Init.Specif.sig";
                                 inductive_ind := 0 |} [])
                              [tInd
                                 {|
                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                 inductive_ind := 0 |} [];
                              tLambda (nNamed "x")
                                (tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [])
                                (tApp (tConst "Coq.Init.Peano.lt" [])
                                   [tRel 0;
                                   tApp
                                     (tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 1 [])
                                     [tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 0 []]]])])
                           (tProd nAnon
                              (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                              (tProd nAnon
                                 (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                 (tConst "Helix.HCOL.CarrierType.CarrierA" [])));
                        tProd nAnon
                          (tApp
                             (tInd
                                {|
                                inductive_mind := "Coq.Init.Specif.sig";
                                inductive_ind := 0 |} [])
                             [tInd
                                {|
                                inductive_mind := "Coq.Init.Datatypes.nat";
                                inductive_ind := 0 |} [];
                             tLambda (nNamed "x")
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [])
                               (tApp (tConst "Coq.Init.Peano.lt" [])
                                  [tRel 0;
                                  tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 0 []]])])
                          (tProd nAnon
                             (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                             (tProd nAnon
                                (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                (tConst "Helix.HCOL.CarrierType.CarrierA" [])));
                        tApp (tConst "Coq.Classes.Morphisms.respectful" [])
                          [tApp
                             (tInd
                                {|
                                inductive_mind := "Coq.Init.Specif.sig";
                                inductive_ind := 0 |} [])
                             [tInd
                                {|
                                inductive_mind := "Coq.Init.Datatypes.nat";
                                inductive_ind := 0 |} [];
                             tLambda (nNamed "x")
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [])
                               (tApp (tConst "Coq.Init.Peano.lt" [])
                                  [tRel 0;
                                  tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 0 []]]])];
                          tProd nAnon
                            (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                            (tProd nAnon
                               (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                               (tConst "Helix.HCOL.CarrierType.CarrierA" []));
                          tApp
                            (tConst
                               "MathClasses.interfaces.canonical_names.equiv"
                               [])
                            [tApp
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Specif.sig";
                                  inductive_ind := 0 |} [])
                               [tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [];
                               tLambda (nNamed "x")
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [])
                                 (tApp (tConst "Coq.Init.Peano.lt" [])
                                    [tRel 0;
                                    tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 0 []]]])];
                            tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                              [tInd
                                 {|
                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                 inductive_ind := 0 |} [];
                              tConst
                                "MathClasses.implementations.peano_naturals.nat_equiv"
                                [];
                              tLambda (nNamed "x")
                                (tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [])
                                (tApp (tConst "Coq.Init.Peano.lt" [])
                                   [tRel 0;
                                   tApp
                                     (tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 1 [])
                                     [tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 0 []]]])]];
                          tApp (tConst "Coq.Classes.Morphisms.respectful" [])
                            [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                            tProd nAnon
                              (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                              (tConst "Helix.HCOL.CarrierType.CarrierA" []);
                            tApp
                              (tConst
                                 "MathClasses.interfaces.canonical_names.equiv"
                                 [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAe" []];
                            tApp
                              (tConst "Coq.Classes.Morphisms.respectful" [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tApp
                                (tConst
                                   "MathClasses.interfaces.canonical_names.equiv"
                                   [])
                                [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tConst "Helix.HCOL.CarrierType.CarrierAe" []];
                              tApp
                                (tConst
                                   "MathClasses.interfaces.canonical_names.equiv"
                                   [])
                                [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tConst "Helix.HCOL.CarrierType.CarrierAe" []]]]];
                        tApp (tConst "Coq.Classes.Morphisms.respectful" [])
                          [tApp
                             (tInd
                                {|
                                inductive_mind := "Coq.Init.Specif.sig";
                                inductive_ind := 0 |} [])
                             [tInd
                                {|
                                inductive_mind := "Coq.Init.Datatypes.nat";
                                inductive_ind := 0 |} [];
                             tLambda (nNamed "x")
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [])
                               (tApp (tConst "Coq.Init.Peano.lt" [])
                                  [tRel 0;
                                  tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 0 []]])];
                          tProd nAnon
                            (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                            (tProd nAnon
                               (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                               (tConst "Helix.HCOL.CarrierType.CarrierA" []));
                          tApp
                            (tConst
                               "MathClasses.interfaces.canonical_names.equiv"
                               [])
                            [tApp
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Specif.sig";
                                  inductive_ind := 0 |} [])
                               [tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [];
                               tLambda (nNamed "x")
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [])
                                 (tApp (tConst "Coq.Init.Peano.lt" [])
                                    [tRel 0;
                                    tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 0 []]])];
                            tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                              [tInd
                                 {|
                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                 inductive_ind := 0 |} [];
                              tConst
                                "MathClasses.implementations.peano_naturals.nat_equiv"
                                [];
                              tLambda (nNamed "x")
                                (tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [])
                                (tApp (tConst "Coq.Init.Peano.lt" [])
                                   [tRel 0;
                                   tApp
                                     (tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 1 [])
                                     [tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 0 []]])]];
                          tApp (tConst "Coq.Classes.Morphisms.respectful" [])
                            [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                            tProd nAnon
                              (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                              (tConst "Helix.HCOL.CarrierType.CarrierA" []);
                            tApp
                              (tConst
                                 "MathClasses.interfaces.canonical_names.equiv"
                                 [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAe" []];
                            tApp
                              (tConst "Coq.Classes.Morphisms.respectful" [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tApp
                                (tConst
                                   "MathClasses.interfaces.canonical_names.equiv"
                                   [])
                                [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tConst "Helix.HCOL.CarrierType.CarrierAe" []];
                              tApp
                                (tConst
                                   "MathClasses.interfaces.canonical_names.equiv"
                                   [])
                                [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tConst "Helix.HCOL.CarrierType.CarrierAe" []]]]];
                        tLambda (nNamed "f")
                          (tProd nAnon
                             (tApp
                                (tInd
                                   {|
                                   inductive_mind := "Coq.Init.Specif.sig";
                                   inductive_ind := 0 |} [])
                                [tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [];
                                tLambda (nNamed "x")
                                  (tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [])
                                  (tApp (tConst "Coq.Init.Peano.lt" [])
                                     [tRel 0;
                                     tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 0 []]]])])
                             (tProd nAnon
                                (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                (tProd nAnon
                                   (tConst "Helix.HCOL.CarrierType.CarrierA"
                                      [])
                                   (tConst "Helix.HCOL.CarrierType.CarrierA"
                                      []))))
                          (tLambda nAnon
                             (tApp
                                (tInd
                                   {|
                                   inductive_mind := "Coq.Init.Specif.sig";
                                   inductive_ind := 0 |} [])
                                [tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [];
                                tLambda (nNamed "x")
                                  (tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [])
                                  (tApp (tConst "Coq.Init.Peano.lt" [])
                                     [tRel 0;
                                     tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 0 []]])])
                             (tApp (tRel 1) [tRel 2]));
                        tApp
                          (tConst
                             "Coq.Classes.Morphisms.Reflexive_partial_app_morphism"
                             [])
                          [tApp
                             (tInd
                                {|
                                inductive_mind := "Coq.Init.Specif.sig";
                                inductive_ind := 0 |} [])
                             [tInd
                                {|
                                inductive_mind := "Coq.Init.Datatypes.nat";
                                inductive_ind := 0 |} [];
                             tLambda (nNamed "x")
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [])
                               (tApp (tConst "Coq.Init.Peano.lt" [])
                                  [tRel 0;
                                  tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 0 []]]])];
                          tProd nAnon
                            (tProd nAnon
                               (tApp
                                  (tInd
                                     {|
                                     inductive_mind := "Coq.Init.Specif.sig";
                                     inductive_ind := 0 |} [])
                                  [tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [];
                                  tLambda (nNamed "x")
                                    (tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [])
                                    (tApp (tConst "Coq.Init.Peano.lt" [])
                                       [tRel 0;
                                       tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 0 []]]])])
                               (tProd nAnon
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [])
                                  (tProd nAnon
                                     (tConst
                                        "Helix.HCOL.CarrierType.CarrierA" [])
                                     (tConst
                                        "Helix.HCOL.CarrierType.CarrierA" []))))
                            (tProd nAnon
                               (tApp
                                  (tInd
                                     {|
                                     inductive_mind := "Coq.Init.Specif.sig";
                                     inductive_ind := 0 |} [])
                                  [tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [];
                                  tLambda (nNamed "x")
                                    (tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [])
                                    (tApp (tConst "Coq.Init.Peano.lt" [])
                                       [tRel 0;
                                       tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 0 []]])])
                               (tProd nAnon
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [])
                                  (tProd nAnon
                                     (tConst
                                        "Helix.HCOL.CarrierType.CarrierA" [])
                                     (tConst
                                        "Helix.HCOL.CarrierType.CarrierA" []))));
                          tApp
                            (tConst
                               "MathClasses.interfaces.canonical_names.equiv"
                               [])
                            [tApp
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Specif.sig";
                                  inductive_ind := 0 |} [])
                               [tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [];
                               tLambda (nNamed "x")
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [])
                                 (tApp (tConst "Coq.Init.Peano.lt" [])
                                    [tRel 0;
                                    tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 0 []]]])];
                            tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                              [tInd
                                 {|
                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                 inductive_ind := 0 |} [];
                              tConst
                                "MathClasses.implementations.peano_naturals.nat_equiv"
                                [];
                              tLambda (nNamed "x")
                                (tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [])
                                (tApp (tConst "Coq.Init.Peano.lt" [])
                                   [tRel 0;
                                   tApp
                                     (tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 1 [])
                                     [tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 0 []]]])]];
                          tApp (tConst "Coq.Classes.Morphisms.respectful" [])
                            [tProd nAnon
                               (tApp
                                  (tInd
                                     {|
                                     inductive_mind := "Coq.Init.Specif.sig";
                                     inductive_ind := 0 |} [])
                                  [tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [];
                                  tLambda (nNamed "x")
                                    (tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [])
                                    (tApp (tConst "Coq.Init.Peano.lt" [])
                                       [tRel 0;
                                       tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 0 []]]])])
                               (tProd nAnon
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [])
                                  (tProd nAnon
                                     (tConst
                                        "Helix.HCOL.CarrierType.CarrierA" [])
                                     (tConst
                                        "Helix.HCOL.CarrierType.CarrierA" [])));
                            tProd nAnon
                              (tApp
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Specif.sig";
                                    inductive_ind := 0 |} [])
                                 [tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [];
                                 tLambda (nNamed "x")
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [])
                                   (tApp (tConst "Coq.Init.Peano.lt" [])
                                      [tRel 0;
                                      tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 0 []]])])
                              (tProd nAnon
                                 (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                 (tProd nAnon
                                    (tConst "Helix.HCOL.CarrierType.CarrierA"
                                       [])
                                    (tConst "Helix.HCOL.CarrierType.CarrierA"
                                       [])));
                            tApp
                              (tConst "Coq.Classes.Morphisms.respectful" [])
                              [tApp
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Specif.sig";
                                    inductive_ind := 0 |} [])
                                 [tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [];
                                 tLambda (nNamed "x")
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [])
                                   (tApp (tConst "Coq.Init.Peano.lt" [])
                                      [tRel 0;
                                      tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 0 []]]])];
                              tProd nAnon
                                (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                (tProd nAnon
                                   (tConst "Helix.HCOL.CarrierType.CarrierA"
                                      [])
                                   (tConst "Helix.HCOL.CarrierType.CarrierA"
                                      []));
                              tApp
                                (tConst
                                   "MathClasses.interfaces.canonical_names.equiv"
                                   [])
                                [tApp
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Specif.sig";
                                      inductive_ind := 0 |} [])
                                   [tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [];
                                   tLambda (nNamed "x")
                                     (tInd
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} [])
                                     (tApp (tConst "Coq.Init.Peano.lt" [])
                                        [tRel 0;
                                        tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tApp
                                             (tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 1 [])
                                             [tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 0 []]]])];
                                tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                                  [tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [];
                                  tConst
                                    "MathClasses.implementations.peano_naturals.nat_equiv"
                                    [];
                                  tLambda (nNamed "x")
                                    (tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [])
                                    (tApp (tConst "Coq.Init.Peano.lt" [])
                                       [tRel 0;
                                       tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 0 []]]])]];
                              tApp
                                (tConst "Coq.Classes.Morphisms.respectful" [])
                                [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tProd nAnon
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [])
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     []);
                                tApp
                                  (tConst
                                     "MathClasses.interfaces.canonical_names.equiv"
                                     [])
                                  [tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [];
                                  tConst "Helix.HCOL.CarrierType.CarrierAe"
                                    []];
                                tApp
                                  (tConst "Coq.Classes.Morphisms.respectful"
                                     [])
                                  [tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [];
                                  tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                  tApp
                                    (tConst
                                       "MathClasses.interfaces.canonical_names.equiv"
                                       [])
                                    [tConst "Helix.HCOL.CarrierType.CarrierA"
                                       [];
                                    tConst "Helix.HCOL.CarrierType.CarrierAe"
                                      []];
                                  tApp
                                    (tConst
                                       "MathClasses.interfaces.canonical_names.equiv"
                                       [])
                                    [tConst "Helix.HCOL.CarrierType.CarrierA"
                                       [];
                                    tConst "Helix.HCOL.CarrierType.CarrierAe"
                                      []]]]];
                            tApp
                              (tConst "Coq.Classes.Morphisms.respectful" [])
                              [tApp
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Specif.sig";
                                    inductive_ind := 0 |} [])
                                 [tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [];
                                 tLambda (nNamed "x")
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [])
                                   (tApp (tConst "Coq.Init.Peano.lt" [])
                                      [tRel 0;
                                      tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 0 []]])];
                              tProd nAnon
                                (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                (tProd nAnon
                                   (tConst "Helix.HCOL.CarrierType.CarrierA"
                                      [])
                                   (tConst "Helix.HCOL.CarrierType.CarrierA"
                                      []));
                              tApp
                                (tConst
                                   "MathClasses.interfaces.canonical_names.equiv"
                                   [])
                                [tApp
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Specif.sig";
                                      inductive_ind := 0 |} [])
                                   [tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [];
                                   tLambda (nNamed "x")
                                     (tInd
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} [])
                                     (tApp (tConst "Coq.Init.Peano.lt" [])
                                        [tRel 0;
                                        tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 0 []]])];
                                tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                                  [tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [];
                                  tConst
                                    "MathClasses.implementations.peano_naturals.nat_equiv"
                                    [];
                                  tLambda (nNamed "x")
                                    (tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [])
                                    (tApp (tConst "Coq.Init.Peano.lt" [])
                                       [tRel 0;
                                       tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 0 []]])]];
                              tApp
                                (tConst "Coq.Classes.Morphisms.respectful" [])
                                [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tProd nAnon
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [])
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     []);
                                tApp
                                  (tConst
                                     "MathClasses.interfaces.canonical_names.equiv"
                                     [])
                                  [tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [];
                                  tConst "Helix.HCOL.CarrierType.CarrierAe"
                                    []];
                                tApp
                                  (tConst "Coq.Classes.Morphisms.respectful"
                                     [])
                                  [tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [];
                                  tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                  tApp
                                    (tConst
                                       "MathClasses.interfaces.canonical_names.equiv"
                                       [])
                                    [tConst "Helix.HCOL.CarrierType.CarrierA"
                                       [];
                                    tConst "Helix.HCOL.CarrierType.CarrierAe"
                                      []];
                                  tApp
                                    (tConst
                                       "MathClasses.interfaces.canonical_names.equiv"
                                       [])
                                    [tConst "Helix.HCOL.CarrierType.CarrierA"
                                       [];
                                    tConst "Helix.HCOL.CarrierType.CarrierAe"
                                      []]]]]];
                          tLambda (nNamed "i")
                            (tApp
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Specif.sig";
                                  inductive_ind := 0 |} [])
                               [tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [];
                               tLambda (nNamed "x")
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [])
                                 (tApp (tConst "Coq.Init.Peano.lt" [])
                                    [tRel 0;
                                    tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 0 []]]])])
                            (tLambda (nNamed "f")
                               (tProd nAnon
                                  (tApp
                                     (tInd
                                        {|
                                        inductive_mind := "Coq.Init.Specif.sig";
                                        inductive_ind := 0 |} [])
                                     [tInd
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} [];
                                     tLambda (nNamed "x")
                                       (tInd
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} [])
                                       (tApp (tConst "Coq.Init.Peano.lt" [])
                                          [tRel 0;
                                          tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tApp
                                               (tConstruct
                                                  {|
                                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                                  inductive_ind := 0 |} 1 [])
                                               [tConstruct
                                                  {|
                                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                                  inductive_ind := 0 |} 0 []]]])])
                                  (tProd nAnon
                                     (tConst
                                        "Helix.HCOL.CarrierType.CarrierA" [])
                                     (tProd nAnon
                                        (tConst
                                           "Helix.HCOL.CarrierType.CarrierA"
                                           [])
                                        (tConst
                                           "Helix.HCOL.CarrierType.CarrierA"
                                           []))))
                               (tLambda nAnon
                                  (tApp
                                     (tInd
                                        {|
                                        inductive_mind := "Coq.Init.Specif.sig";
                                        inductive_ind := 0 |} [])
                                     [tInd
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} [];
                                     tLambda (nNamed "x")
                                       (tInd
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} [])
                                       (tApp (tConst "Coq.Init.Peano.lt" [])
                                          [tRel 0;
                                          tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 0 []]])])
                                  (tApp (tRel 1) [tRel 2])));
                          tApp
                            (tConst "Helix.HCOL.HCOL.Fin1SwapIndex2_proper"
                               [])
                            [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                            tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                            tApp
                              (tConstruct
                                 {|
                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                 inductive_ind := 0 |} 1 [])
                              [tApp
                                 (tConstruct
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} 1 [])
                                 [tConstruct
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} 0 []]]]; tRel 0;
                          tApp
                            (tConst
                               "Coq.Classes.Morphisms.reflexive_proper_proxy"
                               [])
                            [tApp
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Specif.sig";
                                  inductive_ind := 0 |} [])
                               [tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [];
                               tLambda (nNamed "x")
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [])
                                 (tApp (tConst "Coq.Init.Peano.lt" [])
                                    [tRel 0;
                                    tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 0 []]]])];
                            tApp
                              (tConst
                                 "MathClasses.interfaces.canonical_names.equiv"
                                 [])
                              [tApp
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Specif.sig";
                                    inductive_ind := 0 |} [])
                                 [tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [];
                                 tLambda (nNamed "x")
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [])
                                   (tApp (tConst "Coq.Init.Peano.lt" [])
                                      [tRel 0;
                                      tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 0 []]]])];
                              tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                                [tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [];
                                tConst
                                  "MathClasses.implementations.peano_naturals.nat_equiv"
                                  [];
                                tLambda (nNamed "x")
                                  (tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [])
                                  (tApp (tConst "Coq.Init.Peano.lt" [])
                                     [tRel 0;
                                     tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 0 []]]])]];
                            tApp
                              (tConst
                                 "Coq.Classes.RelationClasses.Equivalence_Reflexive"
                                 [])
                              [tApp
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Specif.sig";
                                    inductive_ind := 0 |} [])
                                 [tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [];
                                 tLambda (nNamed "x")
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [])
                                   (tApp (tConst "Coq.Init.Peano.lt" [])
                                      [tRel 0;
                                      tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 0 []]]])];
                              tApp
                                (tConst
                                   "MathClasses.interfaces.canonical_names.equiv"
                                   [])
                                [tApp
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Specif.sig";
                                      inductive_ind := 0 |} [])
                                   [tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [];
                                   tLambda (nNamed "x")
                                     (tInd
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} [])
                                     (tApp (tConst "Coq.Init.Peano.lt" [])
                                        [tRel 0;
                                        tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tApp
                                             (tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 1 [])
                                             [tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 0 []]]])];
                                tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                                  [tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [];
                                  tConst
                                    "MathClasses.implementations.peano_naturals.nat_equiv"
                                    [];
                                  tLambda (nNamed "x")
                                    (tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [])
                                    (tApp (tConst "Coq.Init.Peano.lt" [])
                                       [tRel 0;
                                       tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 0 []]]])]];
                              tApp
                                (tConst
                                   "MathClasses.interfaces.abstract_algebra.setoid_eq"
                                   [])
                                [tApp
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Specif.sig";
                                      inductive_ind := 0 |} [])
                                   [tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [];
                                   tLambda (nNamed "x")
                                     (tInd
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} [])
                                     (tApp (tConst "Coq.Init.Peano.lt" [])
                                        [tRel 0;
                                        tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tApp
                                             (tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 1 [])
                                             [tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 0 []]]])];
                                tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                                  [tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [];
                                  tConst
                                    "MathClasses.implementations.peano_naturals.nat_equiv"
                                    [];
                                  tLambda (nNamed "x")
                                    (tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [])
                                    (tApp (tConst "Coq.Init.Peano.lt" [])
                                       [tRel 0;
                                       tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 0 []]]])];
                                tApp
                                  (tConst
                                     "MathClasses.theory.setoids.sig_setoid"
                                     [])
                                  [tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [];
                                  tConst
                                    "MathClasses.implementations.peano_naturals.nat_equiv"
                                    [];
                                  tApp
                                    (tConst
                                       "MathClasses.interfaces.abstract_algebra.sg_setoid"
                                       [])
                                    [tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [];
                                    tConst
                                      "MathClasses.implementations.peano_naturals.nat_equiv"
                                      [];
                                    tApp
                                      (tConst
                                         "MathClasses.interfaces.canonical_names.meet_is_sg_op"
                                         [])
                                      [tInd
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} [];
                                      tApp
                                        (tConst
                                           "MathClasses.orders.minmax.min" [])
                                        [tInd
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} [];
                                        tApp
                                          (tConst
                                             "MathClasses.interfaces.canonical_names.le"
                                             [])
                                          [tInd
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} [];
                                          tConst
                                            "MathClasses.implementations.peano_naturals.nat_le"
                                            []];
                                        tConst
                                          "MathClasses.implementations.peano_naturals.nat_le_dec"
                                          []]];
                                    tApp
                                      (tConst
                                         "MathClasses.interfaces.abstract_algebra.comsg_setoid"
                                         [])
                                      [tInd
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} [];
                                      tConst
                                        "MathClasses.implementations.peano_naturals.nat_equiv"
                                        [];
                                      tApp
                                        (tConst
                                           "MathClasses.interfaces.canonical_names.meet_is_sg_op"
                                           [])
                                        [tInd
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} [];
                                        tApp
                                          (tConst
                                             "MathClasses.orders.minmax.min"
                                             [])
                                          [tInd
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} [];
                                          tApp
                                            (tConst
                                               "MathClasses.interfaces.canonical_names.le"
                                               [])
                                            [tInd
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} [];
                                            tConst
                                              "MathClasses.implementations.peano_naturals.nat_le"
                                              []];
                                          tConst
                                            "MathClasses.implementations.peano_naturals.nat_le_dec"
                                            []]];
                                      tApp
                                        (tConst
                                           "MathClasses.interfaces.abstract_algebra.semilattice_sg"
                                           [])
                                        [tInd
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} [];
                                        tConst
                                          "MathClasses.implementations.peano_naturals.nat_equiv"
                                          [];
                                        tApp
                                          (tConst
                                             "MathClasses.interfaces.canonical_names.meet_is_sg_op"
                                             [])
                                          [tInd
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} [];
                                          tApp
                                            (tConst
                                               "MathClasses.orders.minmax.min"
                                               [])
                                            [tInd
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} [];
                                            tApp
                                              (tConst
                                                 "MathClasses.interfaces.canonical_names.le"
                                                 [])
                                              [tInd
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} [];
                                              tConst
                                                "MathClasses.implementations.peano_naturals.nat_le"
                                                []];
                                            tConst
                                              "MathClasses.implementations.peano_naturals.nat_le_dec"
                                              []]];
                                        tApp
                                          (tConst
                                             "MathClasses.interfaces.abstract_algebra.meet_semilattice"
                                             [])
                                          [tInd
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} [];
                                          tConst
                                            "MathClasses.implementations.peano_naturals.nat_equiv"
                                            [];
                                          tApp
                                            (tConst
                                               "MathClasses.orders.minmax.min"
                                               [])
                                            [tInd
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} [];
                                            tApp
                                              (tConst
                                                 "MathClasses.interfaces.canonical_names.le"
                                                 [])
                                              [tInd
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} [];
                                              tConst
                                                "MathClasses.implementations.peano_naturals.nat_le"
                                                []];
                                            tConst
                                              "MathClasses.implementations.peano_naturals.nat_le_dec"
                                              []];
                                          tApp
                                            (tConst
                                               "MathClasses.interfaces.abstract_algebra.lattice_meet"
                                               [])
                                            [tInd
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} [];
                                            tConst
                                              "MathClasses.implementations.peano_naturals.nat_equiv"
                                              [];
                                            tApp
                                              (tConst
                                                 "MathClasses.orders.minmax.max"
                                                 [])
                                              [tInd
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} [];
                                              tApp
                                                (tConst
                                                   "MathClasses.interfaces.canonical_names.le"
                                                   [])
                                                [tInd
                                                   {|
                                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                                   inductive_ind := 0 |} [];
                                                tConst
                                                  "MathClasses.implementations.peano_naturals.nat_le"
                                                  []];
                                              tConst
                                                "MathClasses.implementations.peano_naturals.nat_le_dec"
                                                []];
                                            tApp
                                              (tConst
                                                 "MathClasses.orders.minmax.min"
                                                 [])
                                              [tInd
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} [];
                                              tApp
                                                (tConst
                                                   "MathClasses.interfaces.canonical_names.le"
                                                   [])
                                                [tInd
                                                   {|
                                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                                   inductive_ind := 0 |} [];
                                                tConst
                                                  "MathClasses.implementations.peano_naturals.nat_le"
                                                  []];
                                              tConst
                                                "MathClasses.implementations.peano_naturals.nat_le_dec"
                                                []];
                                            tApp
                                              (tConst
                                                 "MathClasses.interfaces.abstract_algebra.distr_lattice_lattice"
                                                 [])
                                              [tInd
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} [];
                                              tConst
                                                "MathClasses.implementations.peano_naturals.nat_equiv"
                                                [];
                                              tApp
                                                (tConst
                                                   "MathClasses.orders.minmax.max"
                                                   [])
                                                [tInd
                                                   {|
                                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                                   inductive_ind := 0 |} [];
                                                tApp
                                                  (tConst
                                                     "MathClasses.interfaces.canonical_names.le"
                                                     [])
                                                  [tInd
                                                     {|
                                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                                     inductive_ind := 0 |} [];
                                                  tConst
                                                    "MathClasses.implementations.peano_naturals.nat_le"
                                                    []];
                                                tConst
                                                  "MathClasses.implementations.peano_naturals.nat_le_dec"
                                                  []];
                                              tApp
                                                (tConst
                                                   "MathClasses.orders.minmax.min"
                                                   [])
                                                [tInd
                                                   {|
                                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                                   inductive_ind := 0 |} [];
                                                tApp
                                                  (tConst
                                                     "MathClasses.interfaces.canonical_names.le"
                                                     [])
                                                  [tInd
                                                     {|
                                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                                     inductive_ind := 0 |} [];
                                                  tConst
                                                    "MathClasses.implementations.peano_naturals.nat_le"
                                                    []];
                                                tConst
                                                  "MathClasses.implementations.peano_naturals.nat_le_dec"
                                                  []];
                                              tApp
                                                (tConst
                                                   "MathClasses.orders.minmax.DistributiveLattice_instance_0"
                                                   [])
                                                [tInd
                                                   {|
                                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                                   inductive_ind := 0 |} [];
                                                tConst
                                                  "MathClasses.implementations.peano_naturals.nat_equiv"
                                                  [];
                                                tApp
                                                  (tConst
                                                     "MathClasses.interfaces.canonical_names.le"
                                                     [])
                                                  [tInd
                                                     {|
                                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                                     inductive_ind := 0 |} [];
                                                  tConst
                                                    "MathClasses.implementations.peano_naturals.nat_le"
                                                    []];
                                                tApp
                                                  (tConst
                                                     "MathClasses.orders.orders.le_total"
                                                     [])
                                                  [tInd
                                                     {|
                                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                                     inductive_ind := 0 |} [];
                                                  tConst
                                                    "MathClasses.implementations.peano_naturals.nat_equiv"
                                                    [];
                                                  tApp
                                                    (tConst
                                                       "MathClasses.theory.strong_setoids.default_apart"
                                                       [])
                                                    [tInd
                                                       {|
                                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                                       inductive_ind := 0 |}
                                                       [];
                                                    tConst
                                                      "MathClasses.implementations.peano_naturals.nat_equiv"
                                                      []];
                                                  tConst
                                                    "MathClasses.implementations.peano_naturals.nat_le"
                                                    [];
                                                  tConst
                                                    "MathClasses.implementations.peano_naturals.nat_lt"
                                                    [];
                                                  tApp
                                                    (tConst
                                                       "MathClasses.orders.semirings.FullPseudoOrder_instance_0"
                                                       [])
                                                    [tInd
                                                       {|
                                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                                       inductive_ind := 0 |}
                                                       [];
                                                    tConst
                                                      "MathClasses.implementations.peano_naturals.nat_equiv"
                                                      [];
                                                    tApp
                                                      (tConst
                                                         "MathClasses.theory.strong_setoids.default_apart"
                                                         [])
                                                      [tInd
                                                         {|
                                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                                         inductive_ind := 0 |}
                                                         [];
                                                      tConst
                                                        "MathClasses.implementations.peano_naturals.nat_equiv"
                                                        []];
                                                    tConst
                                                      "MathClasses.implementations.peano_naturals.nat_plus"
                                                      [];
                                                    tConst
                                                      "MathClasses.implementations.peano_naturals.nat_mult"
                                                      [];
                                                    tConst
                                                      "MathClasses.implementations.peano_naturals.nat_0"
                                                      [];
                                                    tConst
                                                      "MathClasses.implementations.peano_naturals.nat_1"
                                                      [];
                                                    tConst
                                                      "MathClasses.implementations.peano_naturals.nat_le"
                                                      [];
                                                    tConst
                                                      "MathClasses.implementations.peano_naturals.nat_lt"
                                                      [];
                                                    tConst
                                                      "MathClasses.implementations.peano_naturals.FullPseudoSemiRingOrder_instance_0"
                                                      []];
                                                  tApp
                                                    (tConst
                                                       "MathClasses.theory.strong_setoids.default_apart_trivial"
                                                       [])
                                                    [tInd
                                                       {|
                                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                                       inductive_ind := 0 |}
                                                       [];
                                                    tConst
                                                      "MathClasses.implementations.peano_naturals.nat_equiv"
                                                      []];
                                                  tConst
                                                    "MathClasses.implementations.peano_naturals.nat_dec"
                                                    []];
                                                tConst
                                                  "MathClasses.implementations.peano_naturals.nat_le_dec"
                                                  []]]]]]]];
                                  tLambda (nNamed "x")
                                    (tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [])
                                    (tApp (tConst "Coq.Init.Peano.lt" [])
                                       [tRel 0;
                                       tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 0 []]]])]]];
                            tRel 0]];
                        tLambda nAnon
                          (tApp
                             (tInd
                                {|
                                inductive_mind := "Coq.Init.Specif.sig";
                                inductive_ind := 0 |} [])
                             [tInd
                                {|
                                inductive_mind := "Coq.Init.Datatypes.nat";
                                inductive_ind := 0 |} [];
                             tLambda (nNamed "x")
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [])
                               (tApp (tConst "Coq.Init.Peano.lt" [])
                                  [tRel 0;
                                  tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 0 []]]])])
                          (tApp (tConst "Coq.Program.Basics.compose" [])
                             [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                             tConst "Helix.HCOL.CarrierType.CarrierA" [];
                             tProd nAnon
                               (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                               (tConst "Helix.HCOL.CarrierType.CarrierA" []);
                             tApp
                               (tConst
                                  "MathClasses.interfaces.canonical_names.plus"
                                  [])
                               [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                               tConst "Helix.HCOL.CarrierType.CarrierAplus"
                                 []];
                             tApp
                               (tConst
                                  "MathClasses.interfaces.canonical_names.negate"
                                  [])
                               [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                               tConst "Helix.HCOL.CarrierType.CarrierAneg" []]]);
                        tApp
                          (tConst "Coq.Classes.Morphisms.proper_proper_proxy"
                             [])
                          [tProd nAnon
                             (tApp
                                (tInd
                                   {|
                                   inductive_mind := "Coq.Init.Specif.sig";
                                   inductive_ind := 0 |} [])
                                [tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [];
                                tLambda (nNamed "x")
                                  (tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [])
                                  (tApp (tConst "Coq.Init.Peano.lt" [])
                                     [tRel 0;
                                     tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 0 []]]])])
                             (tProd nAnon
                                (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                (tProd nAnon
                                   (tConst "Helix.HCOL.CarrierType.CarrierA"
                                      [])
                                   (tConst "Helix.HCOL.CarrierType.CarrierA"
                                      [])));
                          tLambda nAnon
                            (tApp
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Specif.sig";
                                  inductive_ind := 0 |} [])
                               [tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [];
                               tLambda (nNamed "x")
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [])
                                 (tApp (tConst "Coq.Init.Peano.lt" [])
                                    [tRel 0;
                                    tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 0 []]]])])
                            (tApp (tConst "Coq.Program.Basics.compose" [])
                               [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                               tConst "Helix.HCOL.CarrierType.CarrierA" [];
                               tProd nAnon
                                 (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                 (tConst "Helix.HCOL.CarrierType.CarrierA" []);
                               tApp
                                 (tConst
                                    "MathClasses.interfaces.canonical_names.plus"
                                    [])
                                 [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                 tConst "Helix.HCOL.CarrierType.CarrierAplus"
                                   []];
                               tApp
                                 (tConst
                                    "MathClasses.interfaces.canonical_names.negate"
                                    [])
                                 [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                 tConst "Helix.HCOL.CarrierType.CarrierAneg"
                                   []]]);
                          tApp (tConst "Coq.Classes.Morphisms.respectful" [])
                            [tApp
                               (tInd
                                  {|
                                  inductive_mind := "Coq.Init.Specif.sig";
                                  inductive_ind := 0 |} [])
                               [tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [];
                               tLambda (nNamed "x")
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [])
                                 (tApp (tConst "Coq.Init.Peano.lt" [])
                                    [tRel 0;
                                    tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 0 []]]])];
                            tProd nAnon
                              (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                              (tProd nAnon
                                 (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                 (tConst "Helix.HCOL.CarrierType.CarrierA" []));
                            tApp
                              (tConst
                                 "MathClasses.interfaces.canonical_names.equiv"
                                 [])
                              [tApp
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Specif.sig";
                                    inductive_ind := 0 |} [])
                                 [tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [];
                                 tLambda (nNamed "x")
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [])
                                   (tApp (tConst "Coq.Init.Peano.lt" [])
                                      [tRel 0;
                                      tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 0 []]]])];
                              tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                                [tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [];
                                tConst
                                  "MathClasses.implementations.peano_naturals.nat_equiv"
                                  [];
                                tLambda (nNamed "x")
                                  (tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [])
                                  (tApp (tConst "Coq.Init.Peano.lt" [])
                                     [tRel 0;
                                     tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 0 []]]])]];
                            tApp
                              (tConst "Coq.Classes.Morphisms.respectful" [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tProd nAnon
                                (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                (tConst "Helix.HCOL.CarrierType.CarrierA" []);
                              tApp
                                (tConst
                                   "MathClasses.interfaces.canonical_names.equiv"
                                   [])
                                [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tConst "Helix.HCOL.CarrierType.CarrierAe" []];
                              tApp
                                (tConst "Coq.Classes.Morphisms.respectful" [])
                                [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tApp
                                  (tConst
                                     "MathClasses.interfaces.canonical_names.equiv"
                                     [])
                                  [tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [];
                                  tConst "Helix.HCOL.CarrierType.CarrierAe"
                                    []];
                                tApp
                                  (tConst
                                     "MathClasses.interfaces.canonical_names.equiv"
                                     [])
                                  [tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [];
                                  tConst "Helix.HCOL.CarrierType.CarrierAe"
                                    []]]]];
                          tApp
                            (tConst
                               "Coq.Classes.Morphisms.Reflexive_partial_app_morphism"
                               [])
                            [tProd nAnon
                               (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                               (tProd nAnon
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [])
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     []));
                            tProd nAnon
                              (tApp
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Specif.sig";
                                    inductive_ind := 0 |} [])
                                 [tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [];
                                 tLambda (nNamed "x")
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [])
                                   (tApp (tConst "Coq.Init.Peano.lt" [])
                                      [tRel 0;
                                      tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 0 []]]])])
                              (tProd nAnon
                                 (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                 (tProd nAnon
                                    (tConst "Helix.HCOL.CarrierType.CarrierA"
                                       [])
                                    (tConst "Helix.HCOL.CarrierType.CarrierA"
                                       [])));
                            tApp
                              (tConst "Coq.Classes.Morphisms.respectful" [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tProd nAnon
                                (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                (tConst "Helix.HCOL.CarrierType.CarrierA" []);
                              tApp
                                (tConst
                                   "MathClasses.interfaces.canonical_names.equiv"
                                   [])
                                [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tConst "Helix.HCOL.CarrierType.CarrierAe" []];
                              tApp
                                (tConst
                                   "MathClasses.interfaces.canonical_names.equiv"
                                   [])
                                [tProd nAnon
                                   (tConst "Helix.HCOL.CarrierType.CarrierA"
                                      [])
                                   (tConst "Helix.HCOL.CarrierType.CarrierA"
                                      []);
                                tApp
                                  (tConst
                                     "MathClasses.interfaces.canonical_names.ext_equiv"
                                     [])
                                  [tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [];
                                  tConst "Helix.HCOL.CarrierType.CarrierAe"
                                    [];
                                  tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                  tConst "Helix.HCOL.CarrierType.CarrierAe"
                                    []]]];
                            tApp
                              (tConst "Coq.Classes.Morphisms.respectful" [])
                              [tApp
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Specif.sig";
                                    inductive_ind := 0 |} [])
                                 [tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [];
                                 tLambda (nNamed "x")
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [])
                                   (tApp (tConst "Coq.Init.Peano.lt" [])
                                      [tRel 0;
                                      tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 0 []]]])];
                              tProd nAnon
                                (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                (tProd nAnon
                                   (tConst "Helix.HCOL.CarrierType.CarrierA"
                                      [])
                                   (tConst "Helix.HCOL.CarrierType.CarrierA"
                                      []));
                              tApp
                                (tConst
                                   "MathClasses.interfaces.canonical_names.equiv"
                                   [])
                                [tApp
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Specif.sig";
                                      inductive_ind := 0 |} [])
                                   [tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [];
                                   tLambda (nNamed "x")
                                     (tInd
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} [])
                                     (tApp (tConst "Coq.Init.Peano.lt" [])
                                        [tRel 0;
                                        tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tApp
                                             (tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 1 [])
                                             [tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 0 []]]])];
                                tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                                  [tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [];
                                  tConst
                                    "MathClasses.implementations.peano_naturals.nat_equiv"
                                    [];
                                  tLambda (nNamed "x")
                                    (tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [])
                                    (tApp (tConst "Coq.Init.Peano.lt" [])
                                       [tRel 0;
                                       tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 0 []]]])]];
                              tApp
                                (tConst "Coq.Classes.Morphisms.respectful" [])
                                [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tProd nAnon
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [])
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     []);
                                tApp
                                  (tConst
                                     "MathClasses.interfaces.canonical_names.equiv"
                                     [])
                                  [tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [];
                                  tConst "Helix.HCOL.CarrierType.CarrierAe"
                                    []];
                                tApp
                                  (tConst "Coq.Classes.Morphisms.respectful"
                                     [])
                                  [tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [];
                                  tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                  tApp
                                    (tConst
                                       "MathClasses.interfaces.canonical_names.equiv"
                                       [])
                                    [tConst "Helix.HCOL.CarrierType.CarrierA"
                                       [];
                                    tConst "Helix.HCOL.CarrierType.CarrierAe"
                                      []];
                                  tApp
                                    (tConst
                                       "MathClasses.interfaces.canonical_names.equiv"
                                       [])
                                    [tConst "Helix.HCOL.CarrierType.CarrierA"
                                       [];
                                    tConst "Helix.HCOL.CarrierType.CarrierAe"
                                      []]]]];
                            tLambda (nNamed "f")
                              (tProd nAnon
                                 (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                 (tProd nAnon
                                    (tConst "Helix.HCOL.CarrierType.CarrierA"
                                       [])
                                    (tConst "Helix.HCOL.CarrierType.CarrierA"
                                       [])))
                              (tLambda nAnon
                                 (tApp
                                    (tInd
                                       {|
                                       inductive_mind := "Coq.Init.Specif.sig";
                                       inductive_ind := 0 |} [])
                                    [tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [];
                                    tLambda (nNamed "x")
                                      (tInd
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} [])
                                      (tApp (tConst "Coq.Init.Peano.lt" [])
                                         [tRel 0;
                                         tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tApp
                                              (tConstruct
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} 1 [])
                                              [tConstruct
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} 0 []]]])])
                                 (tRel 1));
                            tApp
                              (tConst "Helix.HCOL.HCOL.IgnoreIndex2_proper"
                                 [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tConst "Helix.HCOL.CarrierType.CarrierAe" [];
                              tApp
                                (tInd
                                   {|
                                   inductive_mind := "Coq.Init.Specif.sig";
                                   inductive_ind := 0 |} [])
                                [tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [];
                                tLambda (nNamed "x")
                                  (tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [])
                                  (tApp (tConst "Coq.Init.Peano.lt" [])
                                     [tRel 0;
                                     tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 0 []]]])];
                              tApp (tConst "Helix.Util.Misc.Sig_Equiv" [])
                                [tInd
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} [];
                                tConst
                                  "MathClasses.implementations.peano_naturals.nat_equiv"
                                  [];
                                tLambda (nNamed "x")
                                  (tInd
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} [])
                                  (tApp (tConst "Coq.Init.Peano.lt" [])
                                     [tRel 0;
                                     tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 0 []]]])]];
                            tApp (tConst "Coq.Program.Basics.compose" [])
                              [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tConst "Helix.HCOL.CarrierType.CarrierA" [];
                              tProd nAnon
                                (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                (tConst "Helix.HCOL.CarrierType.CarrierA" []);
                              tApp
                                (tConst
                                   "MathClasses.interfaces.canonical_names.plus"
                                   [])
                                [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tConst "Helix.HCOL.CarrierType.CarrierAplus"
                                  []];
                              tApp
                                (tConst
                                   "MathClasses.interfaces.canonical_names.negate"
                                   [])
                                [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tConst "Helix.HCOL.CarrierType.CarrierAneg"
                                  []]];
                            tApp
                              (tConst
                                 "Coq.Classes.Morphisms.proper_proper_proxy"
                                 [])
                              [tProd nAnon
                                 (tConst "Helix.HCOL.CarrierType.CarrierA" [])
                                 (tProd nAnon
                                    (tConst "Helix.HCOL.CarrierType.CarrierA"
                                       [])
                                    (tConst "Helix.HCOL.CarrierType.CarrierA"
                                       []));
                              tApp (tConst "Coq.Program.Basics.compose" [])
                                [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tProd nAnon
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [])
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     []);
                                tApp
                                  (tConst
                                     "MathClasses.interfaces.canonical_names.plus"
                                     [])
                                  [tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [];
                                  tConst
                                    "Helix.HCOL.CarrierType.CarrierAplus" []];
                                tApp
                                  (tConst
                                     "MathClasses.interfaces.canonical_names.negate"
                                     [])
                                  [tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [];
                                  tConst "Helix.HCOL.CarrierType.CarrierAneg"
                                    []]];
                              tApp
                                (tConst "Coq.Classes.Morphisms.respectful" [])
                                [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                                tProd nAnon
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [])
                                  (tConst "Helix.HCOL.CarrierType.CarrierA"
                                     []);
                                tApp
                                  (tConst
                                     "MathClasses.interfaces.canonical_names.equiv"
                                     [])
                                  [tConst "Helix.HCOL.CarrierType.CarrierA"
                                     [];
                                  tConst "Helix.HCOL.CarrierType.CarrierAe"
                                    []];
                                tApp
                                  (tConst
                                     "MathClasses.interfaces.canonical_names.equiv"
                                     [])
                                  [tProd nAnon
                                     (tConst
                                        "Helix.HCOL.CarrierType.CarrierA" [])
                                     (tConst
                                        "Helix.HCOL.CarrierType.CarrierA" []);
                                  tApp
                                    (tConst
                                       "MathClasses.interfaces.canonical_names.ext_equiv"
                                       [])
                                    [tConst "Helix.HCOL.CarrierType.CarrierA"
                                       [];
                                    tConst "Helix.HCOL.CarrierType.CarrierAe"
                                      [];
                                    tConst "Helix.HCOL.CarrierType.CarrierA"
                                      [];
                                    tConst "Helix.HCOL.CarrierType.CarrierAe"
                                      []]]];
                              tConst
                                "Helix.HCOL.CarrierType.CarrierA_sub_proper"
                                []]]]]]];
                  tApp (tConst "Helix.SigmaHCOL.TSigmaHCOL.UnSafeCast" [])
                    [tApp (tConst "Coq.Init.Nat.add" [])
                       [tApp
                          (tConstruct
                             {|
                             inductive_mind := "Coq.Init.Datatypes.nat";
                             inductive_ind := 0 |} 1 [])
                          [tConstruct
                             {|
                             inductive_mind := "Coq.Init.Datatypes.nat";
                             inductive_ind := 0 |} 0 []];
                       tApp
                         (tConstruct
                            {|
                            inductive_mind := "Coq.Init.Datatypes.nat";
                            inductive_ind := 0 |} 1 [])
                         [tApp
                            (tConstruct
                               {|
                               inductive_mind := "Coq.Init.Datatypes.nat";
                               inductive_ind := 0 |} 1 [])
                            [tApp
                               (tConstruct
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} 1 [])
                               [tApp
                                  (tConstruct
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} 1 [])
                                  [tConstruct
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} 0 []]]]]];
                    tApp
                      (tConstruct
                         {|
                         inductive_mind := "Coq.Init.Datatypes.nat";
                         inductive_ind := 0 |} 1 [])
                      [tApp
                         (tConstruct
                            {|
                            inductive_mind := "Coq.Init.Datatypes.nat";
                            inductive_ind := 0 |} 1 [])
                         [tConstruct
                            {|
                            inductive_mind := "Coq.Init.Datatypes.nat";
                            inductive_ind := 0 |} 0 []]];
                    tApp (tConst "Helix.SigmaHCOL.SigmaHCOL.ISumUnion" [])
                      [tApp (tConst "Coq.Init.Nat.add" [])
                         [tApp
                            (tConstruct
                               {|
                               inductive_mind := "Coq.Init.Datatypes.nat";
                               inductive_ind := 0 |} 1 [])
                            [tConstruct
                               {|
                               inductive_mind := "Coq.Init.Datatypes.nat";
                               inductive_ind := 0 |} 0 []];
                         tApp
                           (tConstruct
                              {|
                              inductive_mind := "Coq.Init.Datatypes.nat";
                              inductive_ind := 0 |} 1 [])
                           [tApp
                              (tConstruct
                                 {|
                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                 inductive_ind := 0 |} 1 [])
                              [tApp
                                 (tConstruct
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} 1 [])
                                 [tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 0 []]]]]];
                      tApp
                        (tConstruct
                           {|
                           inductive_mind := "Coq.Init.Datatypes.nat";
                           inductive_ind := 0 |} 1 [])
                        [tApp
                           (tConstruct
                              {|
                              inductive_mind := "Coq.Init.Datatypes.nat";
                              inductive_ind := 0 |} 1 [])
                           [tConstruct
                              {|
                              inductive_mind := "Coq.Init.Datatypes.nat";
                              inductive_ind := 0 |} 0 []]];
                      tApp
                        (tConstruct
                           {|
                           inductive_mind := "Coq.Init.Datatypes.nat";
                           inductive_ind := 0 |} 1 [])
                        [tApp
                           (tConstruct
                              {|
                              inductive_mind := "Coq.Init.Datatypes.nat";
                              inductive_ind := 0 |} 1 [])
                           [tConstruct
                              {|
                              inductive_mind := "Coq.Init.Datatypes.nat";
                              inductive_ind := 0 |} 0 []]];
                      tLambda (nNamed "jf0")
                        (tApp
                           (tInd
                              {|
                              inductive_mind := "Coq.Init.Specif.sig";
                              inductive_ind := 0 |} [])
                           [tInd
                              {|
                              inductive_mind := "Coq.Init.Datatypes.nat";
                              inductive_ind := 0 |} [];
                           tLambda (nNamed "x")
                             (tInd
                                {|
                                inductive_mind := "Coq.Init.Datatypes.nat";
                                inductive_ind := 0 |} [])
                             (tApp (tConst "Coq.Init.Peano.lt" [])
                                [tRel 0;
                                tApp
                                  (tConstruct
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} 1 [])
                                  [tApp
                                     (tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 1 [])
                                     [tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 0 []]]])])
                        (tApp
                           (tConst "Helix.SigmaHCOL.SigmaHCOL.SHCompose" [])
                           [tConst
                              "Helix.SigmaHCOL.Rtheta.Monoid_RthetaFlags" [];
                           tApp (tConst "Coq.Init.Nat.add" [])
                             [tApp
                                (tConstruct
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} 1 [])
                                [tConstruct
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} 0 []];
                             tApp
                               (tConstruct
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} 1 [])
                               [tApp
                                  (tConstruct
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} 1 [])
                                  [tApp
                                     (tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 1 [])
                                     [tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 0 []]]]]];
                           tApp
                             (tConstruct
                                {|
                                inductive_mind := "Coq.Init.Datatypes.nat";
                                inductive_ind := 0 |} 1 [])
                             [tConstruct
                                {|
                                inductive_mind := "Coq.Init.Datatypes.nat";
                                inductive_ind := 0 |} 0 []];
                           tApp
                             (tConstruct
                                {|
                                inductive_mind := "Coq.Init.Datatypes.nat";
                                inductive_ind := 0 |} 1 [])
                             [tApp
                                (tConstruct
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} 1 [])
                                [tConstruct
                                   {|
                                   inductive_mind := "Coq.Init.Datatypes.nat";
                                   inductive_ind := 0 |} 0 []]];
                           tApp
                             (tConst "Helix.SigmaHCOL.SigmaHCOL.eUnion" [])
                             [tConst
                                "Helix.SigmaHCOL.Rtheta.Monoid_RthetaFlags"
                                [];
                             tApp
                               (tConstruct
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} 1 [])
                               [tApp
                                  (tConstruct
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} 1 [])
                                  [tConstruct
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} 0 []]];
                             tApp (tConst "Coq.Init.Specif.proj1_sig" [])
                               [tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [];
                               tLambda (nNamed "x")
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [])
                                 (tApp (tConst "Coq.Init.Peano.lt" [])
                                    [tRel 0;
                                    tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 0 []]]]);
                               tRel 0];
                             tApp (tConst "Coq.Init.Specif.proj2_sig" [])
                               [tInd
                                  {|
                                  inductive_mind := "Coq.Init.Datatypes.nat";
                                  inductive_ind := 0 |} [];
                               tLambda (nNamed "x")
                                 (tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [])
                                 (tApp (tConst "Coq.Init.Peano.lt" [])
                                    [tRel 0;
                                    tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 0 []]]]);
                               tRel 0];
                             tApp
                               (tConst
                                  "MathClasses.interfaces.canonical_names.zero"
                                  [])
                               [tConst "Helix.HCOL.CarrierType.CarrierA" [];
                               tConst "Helix.HCOL.CarrierType.CarrierAz" []]];
                           tApp (tConst "Helix.SigmaHCOL.SigmaHCOL.Embed" [])
                             [tConst
                                "Helix.SigmaHCOL.Rtheta.Monoid_RthetaFlags"
                                [];
                             tApp (tConst "Coq.Init.Nat.add" [])
                               [tApp
                                  (tConstruct
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} 1 [])
                                  [tConstruct
                                     {|
                                     inductive_mind := "Coq.Init.Datatypes.nat";
                                     inductive_ind := 0 |} 0 []];
                               tApp
                                 (tConstruct
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} 1 [])
                                 [tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 0 []]]]]];
                             tApp (tConst "Coq.Init.Nat.add" [])
                               [tApp (tConst "Coq.Init.Nat.add" [])
                                  [tApp
                                     (tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 1 [])
                                     [tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 0 []];
                                  tApp (tConst "Coq.Init.Nat.mul" [])
                                    [tApp
                                       (tConst "Coq.Init.Specif.proj1_sig" [])
                                       [tInd
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} [];
                                       tLambda (nNamed "x")
                                         (tInd
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} [])
                                         (tApp
                                            (tConst "Coq.Init.Peano.lt" [])
                                            [tRel 0;
                                            tApp
                                              (tConstruct
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} 1 [])
                                              [tApp
                                                 (tConstruct
                                                    {|
                                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                                    inductive_ind := 0 |} 1
                                                    [])
                                                 [tConstruct
                                                    {|
                                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                                    inductive_ind := 0 |} 0
                                                    []]]]); tRel 1];
                                    tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 0 []]]];
                               tApp (tConst "Coq.Init.Nat.mul" [])
                                 [tApp
                                    (tConst "Coq.Init.Specif.proj1_sig" [])
                                    [tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [];
                                    tLambda (nNamed "x")
                                      (tInd
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} [])
                                      (tApp (tConst "Coq.Init.Peano.lt" [])
                                         [tRel 0;
                                         tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tApp
                                              (tConstruct
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} 1 [])
                                              [tConstruct
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} 0 []]]]);
                                    tRel 0];
                                 tApp (tConst "Coq.Init.Nat.mul" [])
                                   [tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 0 []]];
                                   tApp
                                     (tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 1 [])
                                     [tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 0 []]]]];
                             tApp
                               (tConst
                                  "Helix.SigmaHCOL.IndexFunctions.h_index_map_compose_range_bound"
                                  [])
                               [tApp (tConst "Coq.Init.Nat.add" [])
                                  [tApp
                                     (tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 1 [])
                                     [tConstruct
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} 0 []];
                                  tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tApp
                                             (tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 1 [])
                                             [tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 0 []]]]]];
                               tApp
                                 (tConstruct
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} 1 [])
                                 [tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 0 []]];
                               tApp (tConst "Coq.Init.Nat.add" [])
                                 [tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tApp
                                       (tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 1 [])
                                       [tConstruct
                                          {|
                                          inductive_mind := "Coq.Init.Datatypes.nat";
                                          inductive_ind := 0 |} 0 []]];
                                 tApp
                                   (tConstruct
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} 1 [])
                                   [tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 0 []]]];
                               tApp (tConst "Coq.Init.Specif.proj1_sig" [])
                                 [tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [];
                                 tLambda (nNamed "x")
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [])
                                   (tApp (tConst "Coq.Init.Peano.lt" [])
                                      [tRel 0;
                                      tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 0 []]]]);
                                 tRel 1];
                               tApp
                                 (tConstruct
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} 1 [])
                                 [tConstruct
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} 0 []];
                               tApp
                                 (tConstruct
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} 1 [])
                                 [tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 0 []]];
                               tApp
                                 (tConstruct
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} 1 [])
                                 [tConstruct
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} 0 []];
                               tApp
                                 (tConst
                                    "Helix.SigmaHCOL.SigmaHCOLRewriting.GathH_jn_domain_bound"
                                    [])
                                 [tApp
                                    (tConst "Coq.Init.Specif.proj1_sig" [])
                                    [tInd
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} [];
                                    tLambda (nNamed "x")
                                      (tInd
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} [])
                                      (tApp (tConst "Coq.Init.Peano.lt" [])
                                         [tRel 0;
                                         tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tApp
                                              (tConstruct
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} 1 [])
                                              [tConstruct
                                                 {|
                                                 inductive_mind := "Coq.Init.Datatypes.nat";
                                                 inductive_ind := 0 |} 0 []]]]);
                                    tRel 1];
                                 tApp
                                   (tConstruct
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} 1 [])
                                   [tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 0 []]];
                                 tApp (tConst "Coq.Init.Specif.proj2_sig" [])
                                   [tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [];
                                   tLambda (nNamed "x")
                                     (tInd
                                        {|
                                        inductive_mind := "Coq.Init.Datatypes.nat";
                                        inductive_ind := 0 |} [])
                                     (tApp (tConst "Coq.Init.Peano.lt" [])
                                        [tRel 0;
                                        tApp
                                          (tConstruct
                                             {|
                                             inductive_mind := "Coq.Init.Datatypes.nat";
                                             inductive_ind := 0 |} 1 [])
                                          [tApp
                                             (tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 1 [])
                                             [tConstruct
                                                {|
                                                inductive_mind := "Coq.Init.Datatypes.nat";
                                                inductive_ind := 0 |} 0 []]]]);
                                   tRel 1]];
                               tApp
                                 (tConst
                                    "Helix.SigmaHCOL.SigmaHCOLRewriting.h_bound_second_half"
                                    [])
                                 [tApp
                                    (tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 1 [])
                                    [tConstruct
                                       {|
                                       inductive_mind := "Coq.Init.Datatypes.nat";
                                       inductive_ind := 0 |} 0 []];
                                 tApp
                                   (tConstruct
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} 1 [])
                                   [tApp
                                      (tConstruct
                                         {|
                                         inductive_mind := "Coq.Init.Datatypes.nat";
                                         inductive_ind := 0 |} 1 [])
                                      [tApp
                                         (tConstruct
                                            {|
                                            inductive_mind := "Coq.Init.Datatypes.nat";
                                            inductive_ind := 0 |} 1 [])
                                         [tApp
                                            (tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 1 [])
                                            [tConstruct
                                               {|
                                               inductive_mind := "Coq.Init.Datatypes.nat";
                                               inductive_ind := 0 |} 0 []]]]]];
                               tApp (tConst "Coq.Init.Specif.proj1_sig" [])
                                 [tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [];
                                 tLambda (nNamed "x")
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [])
                                   (tApp (tConst "Coq.Init.Peano.lt" [])
                                      [tRel 0;
                                      tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 0 []]]]);
                                 tRel 0];
                               tApp (tConst "Coq.Init.Specif.proj2_sig" [])
                                 [tInd
                                    {|
                                    inductive_mind := "Coq.Init.Datatypes.nat";
                                    inductive_ind := 0 |} [];
                                 tLambda (nNamed "x")
                                   (tInd
                                      {|
                                      inductive_mind := "Coq.Init.Datatypes.nat";
                                      inductive_ind := 0 |} [])
                                   (tApp (tConst "Coq.Init.Peano.lt" [])
                                      [tRel 0;
                                      tApp
                                        (tConstruct
                                           {|
                                           inductive_mind := "Coq.Init.Datatypes.nat";
                                           inductive_ind := 0 |} 1 [])
                                        [tApp
                                           (tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 1 [])
                                           [tConstruct
                                              {|
                                              inductive_mind := "Coq.Init.Datatypes.nat";
                                              inductive_ind := 0 |} 0 []]]]);
                                 tRel 0]]]])]]])]]]]])
     : term
